<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Tizen.Sensor</name>
    </assembly>
    <members>
        <member name="T:Tizen.Sensor.BatchData">
            <summary>
            The BatchData class stores the value of a particular batch type sensor.
            </summary>
            <since_tizen> 8 </since_tizen>
        </member>
        <member name="M:Tizen.Sensor.BatchData.#ctor(System.UInt64,Tizen.Sensor.SensorDataAccuracy)">
            <summary>
            Initializes a new instance of the BatchData class.
            </summary>
            <since_tizen> 8 </since_tizen>
            <param name="timestamp">Timestamp of sensor event.</param>
            <param name="accuracy">Sensor accuracy of sensor event.</param>
        </member>
        <member name="P:Tizen.Sensor.BatchData.Timestamp">
            <summary>
            Timestamp as ticks that data was created
            </summary>
            <since_tizen> 8 </since_tizen>
            <value> Timestamp </value>
        </member>
        <member name="P:Tizen.Sensor.BatchData.Accuracy">
            <summary>
            Accuracy of the HeartRateMonitorBatch data.
            </summary>
            <since_tizen> 8 </since_tizen>
            <value> Accuracy </value>
        </member>
        <member name="T:Tizen.Sensor.HeartRateMonitorBatchData">
            <summary>
            The HeartRateMonitorBatchData class stores the value of HeartRateMonitorBatch sensor.
            </summary>
            <since_tizen> 8 </since_tizen>
        </member>
        <member name="M:Tizen.Sensor.HeartRateMonitorBatchData.#ctor(System.UInt64,Tizen.Sensor.SensorDataAccuracy,Tizen.Sensor.HeartRateMonitorBatchState,System.Int32,System.Int32)">
            <summary>
            Initializes a new instance of the HeartRateMonitorBatchData class.
            </summary>
            <since_tizen> 8 </since_tizen>
            <param name="timestamp">Timestamp of HeartRateMonitorBatch sensor event.</param>
            <param name="accuracy">Sensor accuracy of HeartRateMonitorBatch sensor event.</param>
            <param name="state">Value indicating the status of the HeartRateMonitorBatch sensor.</param>
            <param name="heartRate">heartRate of HeartRateMonitorBatch sensor event.</param>
            <param name="rri">rri of HeartRateMonitorBatch sensor event.</param>
        </member>
        <member name="P:Tizen.Sensor.HeartRateMonitorBatchData.State">
            <summary>
            Gets the value of the HeartRateMonitorBatch state.
            </summary>
            <since_tizen> 8 </since_tizen>
            <value> State </value>
        </member>
        <member name="P:Tizen.Sensor.HeartRateMonitorBatchData.HeartRate">
            <summary>
            Heart rate in beats per minute
            </summary>
            <since_tizen> 8 </since_tizen>
            <value> HeartRate </value>
        </member>
        <member name="P:Tizen.Sensor.HeartRateMonitorBatchData.RRInterval">
            <summary>
            Gets the value of R wave-to-R wave interval(RRI) from ECG sensor. The unit of the interval is millisecond.
            </summary>
            <since_tizen> 8 </since_tizen>
            <value> RRInterval </value>
        </member>
        <member name="T:Tizen.Sensor.HeartRateMonitorLEDGreenBatchData">
            <summary>
            The HeartRateMonitorLEDGreenBatchData class stores the value of HeartRateMonitorLEDGreenBatch sensor.
            </summary>
            <since_tizen> 8 </since_tizen>
        </member>
        <member name="M:Tizen.Sensor.HeartRateMonitorLEDGreenBatchData.#ctor(System.UInt64,Tizen.Sensor.SensorDataAccuracy,System.UInt32,System.Int32,System.Int32,System.Int32,System.UInt32)">
            <summary>
            Initializes a new instance of the HeartRateMonitorLEDGreenBatchData class.
            </summary>
            <since_tizen> 8 </since_tizen>
            <param name="timestamp">Timestamp of sensor event.</param>
            <param name="accuracy">Sensor accuracy of sensor event.</param>
            <param name="green">Green LED ADC value of sensor event</param>
            <param name="accelerationX">X axis's value of gravitational acceleration of sensor event.</param>
            <param name="accelerationY">Y axis's value of gravitational acceleration of sensor event.</param>
            <param name="accelerationZ">Z axis's value of gravitational acceleration of sensor event.</param>
            <param name="index">Sequential index of sensor event.</param>
        </member>
        <member name="P:Tizen.Sensor.HeartRateMonitorLEDGreenBatchData.Green">
            <summary>
            Gets the value of the Green LED ADC Value, between 0 and 4194304.
            </summary>
            <since_tizen> 8 </since_tizen>
            <value> Green </value>
        </member>
        <member name="P:Tizen.Sensor.HeartRateMonitorLEDGreenBatchData.AccelerationX">
            <summary>
            Gets the X axis's uncalibrated value of the gravitational acceleration. (-4096 ~ 4096)
            </summary>
            <since_tizen> 8 </since_tizen>
            <value> AccelerationX </value>
        </member>
        <member name="P:Tizen.Sensor.HeartRateMonitorLEDGreenBatchData.AccelerationY">
            <summary>
            Gets the Y axis's uncalibrated value of the gravitational acceleration. (-4096 ~ 4096)
            </summary>
            <since_tizen> 8 </since_tizen>
            <value> AccelerationY </value>
        </member>
        <member name="P:Tizen.Sensor.HeartRateMonitorLEDGreenBatchData.AccelerationZ">
            <summary>
            Gets the Z axis's uncalibrated value of the gravitational acceleration. (-4096 ~ 4096)
            </summary>
            <since_tizen> 8 </since_tizen>
            <value> AccelerationZ </value>
        </member>
        <member name="P:Tizen.Sensor.HeartRateMonitorLEDGreenBatchData.Index">
            <summary>
            Gets the index value between 0 and 299 used for deburring purposes
            </summary>
            <since_tizen> 8 </since_tizen>
            <value> Index </value>
        </member>
        <member name="T:Tizen.Sensor.BatchSensor`1">
            <summary>
            Abstract sensor for series of sensor data
            </summary>
            <since_tizen> 8 </since_tizen>
        </member>
        <member name="M:Tizen.Sensor.BatchSensor`1.#ctor(System.UInt32)">
            <summary>
            Create BatchSensor
            </summary>
            <since_tizen> 8 </since_tizen>
        </member>
        <member name="P:Tizen.Sensor.BatchSensor`1.Data">
            <summary>
            Get general batch data
            </summary>
            <since_tizen> 8 </since_tizen>
        </member>
        <member name="M:Tizen.Sensor.BatchSensor`1.ConvertBatchData">
            <summary>
            Convert general batch data to specific batch data
            </summary>
            <since_tizen> 8 </since_tizen>
            <returns> List of converted specific batch data </returns>
        </member>
        <member name="M:Tizen.Sensor.BatchSensor`1.UpdateBatchData(System.IntPtr,System.UInt32)">
            <summary>
            Update the internal batch data using the latest events
            </summary>
            <param name="eventsPtr">
            General batch data's raw pointer
            </param>
            <param name="eventsCount">
            Number of general batch events
            </param>
        </member>
        <member name="T:Tizen.Sensor.AccelerometerDataUpdatedEventArgs">
            <summary>
            The Accelerometer changed event arguments class is used for storing the data returned by a accelerometer.
            </summary>
            <since_tizen> 3 </since_tizen>
        </member>
        <member name="P:Tizen.Sensor.AccelerometerDataUpdatedEventArgs.X">
            <summary>
            Gets the X component of the acceleration.
            </summary>
            <since_tizen> 3 </since_tizen>
            <value> X </value>
        </member>
        <member name="P:Tizen.Sensor.AccelerometerDataUpdatedEventArgs.Y">
            <summary>
            Gets the Y component of the acceleration.
            </summary>
            <since_tizen> 3 </since_tizen>
            <value> Y </value>
        </member>
        <member name="P:Tizen.Sensor.AccelerometerDataUpdatedEventArgs.Z">
            <summary>
            Gets the Z component of the acceleration.
            </summary>
            <since_tizen> 3 </since_tizen>
            <value> Z </value>
        </member>
        <member name="T:Tizen.Sensor.AutoRotationSensorDataUpdatedEventArgs">
            <summary>
            The AutoRotationSensorDataUpdatedEventArgs is used for storing the data returned by the auto-rotation sensor.
            </summary>
            <since_tizen> 7 </since_tizen>
        </member>
        <member name="P:Tizen.Sensor.AutoRotationSensorDataUpdatedEventArgs.Rotation">
            <summary>
            Gets the value of the rotation state.
            </summary>
            <since_tizen> 7 </since_tizen>
            <value> The rotation state. </value>
        </member>
        <member name="P:Tizen.Sensor.AutoRotationSensorDataUpdatedEventArgs.Accuracy">
            <summary>
            Gets the accuracy of the auto-rotation data.
            </summary>
            <since_tizen> 7 </since_tizen>
            <value> Accuracy </value>
        </member>
        <member name="T:Tizen.Sensor.FaceDownGestureDetectorDataUpdatedEventArgs">
            <summary>
            The FaceDownGestureDetector changed event arguments class is used for storing the data returned by a face down gesture detector.
            </summary>
            <since_tizen> 3 </since_tizen>
        </member>
        <member name="P:Tizen.Sensor.FaceDownGestureDetectorDataUpdatedEventArgs.FaceDown">
            <summary>
            Gets the face down state.
            </summary>
            <since_tizen> 3 </since_tizen>
            <value> The face down state. </value>
        </member>
        <member name="T:Tizen.Sensor.GravitySensorDataUpdatedEventArgs">
            <summary>
            The GravitySensor changed event arguments class is used for storing the data returned by a gravity sensor.
            </summary>
            <since_tizen> 3 </since_tizen>
        </member>
        <member name="P:Tizen.Sensor.GravitySensorDataUpdatedEventArgs.X">
            <summary>
            Gets the X component of the gravity.
            </summary>
            <since_tizen> 3 </since_tizen>
            <value> X </value>
        </member>
        <member name="P:Tizen.Sensor.GravitySensorDataUpdatedEventArgs.Y">
            <summary>
            Gets the Y component of the gravity.
            </summary>
            <since_tizen> 3 </since_tizen>
            <value> Y </value>
        </member>
        <member name="P:Tizen.Sensor.GravitySensorDataUpdatedEventArgs.Z">
            <summary>
            Gets the Z component of the gravity.
            </summary>
            <since_tizen> 3 </since_tizen>
            <value> Z </value>
        </member>
        <member name="T:Tizen.Sensor.GyroscopeDataUpdatedEventArgs">
            <summary>
            The Gyroscope changed event arguments class is used for storing the data returned by a gyroscope.
            </summary>
            <since_tizen> 3 </since_tizen>
        </member>
        <member name="P:Tizen.Sensor.GyroscopeDataUpdatedEventArgs.X">
            <summary>
            Gets the X component of the gyroscope data.
            </summary>
            <since_tizen> 3 </since_tizen>
            <value> X </value>
        </member>
        <member name="P:Tizen.Sensor.GyroscopeDataUpdatedEventArgs.Y">
            <summary>
            Gets the Y component of the gyroscope data.
            </summary>
            <since_tizen> 3 </since_tizen>
            <value> Y </value>
        </member>
        <member name="P:Tizen.Sensor.GyroscopeDataUpdatedEventArgs.Z">
            <summary>
            Gets the Z component of the gyroscope data.
            </summary>
            <since_tizen> 3 </since_tizen>
            <value> Z </value>
        </member>
        <member name="T:Tizen.Sensor.GyroscopeRotationVectorSensorDataUpdatedEventArgs">
            <summary>
            The GyroscopeRotationVectorSensor changed event arguments class is used for storing the data returned by a gyroscope rotation vector sensor.
            </summary>
            <since_tizen> 3 </since_tizen>
        </member>
        <member name="P:Tizen.Sensor.GyroscopeRotationVectorSensorDataUpdatedEventArgs.X">
            <summary>
            Gets the X component of the gyroscope rotation vector.
            </summary>
            <since_tizen> 3 </since_tizen>
            <value> X </value>
        </member>
        <member name="P:Tizen.Sensor.GyroscopeRotationVectorSensorDataUpdatedEventArgs.Y">
            <summary>
            Gets the Y component of the gyroscope rotation vector.
            </summary>
            <since_tizen> 3 </since_tizen>
            <value> Y </value>
        </member>
        <member name="P:Tizen.Sensor.GyroscopeRotationVectorSensorDataUpdatedEventArgs.Z">
            <summary>
            Gets the Z component of the gyroscope rotation vector.
            </summary>
            <since_tizen> 3 </since_tizen>
            <value> Z </value>
        </member>
        <member name="P:Tizen.Sensor.GyroscopeRotationVectorSensorDataUpdatedEventArgs.W">
            <summary>
            Gets the W component of the gyroscope rotation vector.
            </summary>
            <since_tizen> 3 </since_tizen>
            <value> W </value>
        </member>
        <member name="P:Tizen.Sensor.GyroscopeRotationVectorSensorDataUpdatedEventArgs.Accuracy">
            <summary>
            Gets the accuracy of the gyroscope rotation vector data.
            </summary>
            <since_tizen> 3 </since_tizen>
            <value> Accuracy </value>
        </member>
        <member name="T:Tizen.Sensor.HeartRateMonitorBatchDataUpdatedEventArgs">
            <summary>
            The HeartRateMonitorBatch changed event arguments class is used for storing the data returned by the HeartRateMonitorBatch sensor.
            </summary>
            <since_tizen> 8 </since_tizen>
        </member>
        <member name="P:Tizen.Sensor.HeartRateMonitorBatchDataUpdatedEventArgs.Data">
            <summary>
            Gets the series value of the HeartRateMonitorBatch.
            </summary>
            <since_tizen> 8 </since_tizen>
            <value> HeartRateMonitorBatchData. </value>
        </member>
        <member name="T:Tizen.Sensor.HeartRateMonitorDataUpdatedEventArgs">
            <summary>
            The HeartRateMonitor changed event arguments class is used for storing the data returned by a heart rate monitor.
            </summary>
            <since_tizen> 3 </since_tizen>
        </member>
        <member name="P:Tizen.Sensor.HeartRateMonitorDataUpdatedEventArgs.HeartRate">
            <summary>
            Gets the value of the heart rate.
            </summary>
            <since_tizen> 3 </since_tizen>
            <value> The heart rate. </value>
        </member>
        <member name="T:Tizen.Sensor.HeartRateMonitorLEDGreenBatchDataUpdatedEventArgs">
            <summary>
            The HeartRateMonitorLEDGreenBatch changed event arguments class is used for storing the data returned by the HeartRateMonitorLEDGreenBatch sensor
            </summary>
            <since_tizen> 8 </since_tizen>
        </member>
        <member name="P:Tizen.Sensor.HeartRateMonitorLEDGreenBatchDataUpdatedEventArgs.Data">
            <summary>
            Gets the series value of the HeartRateMonitorLEDGreenBatch.
            </summary>
            <since_tizen> 8 </since_tizen>
            <value> HeartRateMonitorLEDGreenBatchData. </value>
        </member>
        <member name="T:Tizen.Sensor.HumiditySensorDataUpdatedEventArgs">
            <summary>
            The HumiditySensor changed event arguments class is used for storing the data returned by a humidity sensor.
            </summary>
            <since_tizen> 3 </since_tizen>
        </member>
        <member name="P:Tizen.Sensor.HumiditySensorDataUpdatedEventArgs.Humidity">
            <summary>
            Gets the value of the humidity.
            </summary>
            <since_tizen> 3 </since_tizen>
            <value> Humidity </value>
        </member>
        <member name="T:Tizen.Sensor.InVehicleActivityDetectorDataUpdatedEventArgs">
            <summary>
            The InVehicleActivityDetector changed event arguments class is used for storing the data returned by a in-vehicle activity detector.
            </summary>
            <since_tizen> 3 </since_tizen>
        </member>
        <member name="P:Tizen.Sensor.InVehicleActivityDetectorDataUpdatedEventArgs.InVehicle">
            <summary>
            Gets the in-vehicle state.
            </summary>
            <since_tizen> 3 </since_tizen>
            <value> The in-vehicle state. </value>
        </member>
        <member name="T:Tizen.Sensor.LightSensorDataUpdatedEventArgs">
            <summary>
            The LightSensor changed event arguments class is used for storing the data returned by a light sensor.
            </summary>
            <since_tizen> 3 </since_tizen>
        </member>
        <member name="P:Tizen.Sensor.LightSensorDataUpdatedEventArgs.Level">
            <summary>
            Gets the level of the light.
            </summary>
            <since_tizen> 3 </since_tizen>
            <value> The light level. </value>
        </member>
        <member name="T:Tizen.Sensor.LinearAccelerationSensorDataUpdatedEventArgs">
            <summary>
            The LinearAccelerationSensor changed event arguments class is used for storing the data returned by a linear acceleration sensor.
            </summary>
            <since_tizen> 3 </since_tizen>
        </member>
        <member name="P:Tizen.Sensor.LinearAccelerationSensorDataUpdatedEventArgs.X">
            <summary>
            Gets the X component of the linear acceleration.
            </summary>
            <since_tizen> 3 </since_tizen>
            <value> X </value>
        </member>
        <member name="P:Tizen.Sensor.LinearAccelerationSensorDataUpdatedEventArgs.Y">
            <summary>
            Gets the Y component of the linear acceleration.
            </summary>
            <since_tizen> 3 </since_tizen>
            <value> Y </value>
        </member>
        <member name="P:Tizen.Sensor.LinearAccelerationSensorDataUpdatedEventArgs.Z">
            <summary>
            Gets the Z component of the linear acceleration.
            </summary>
            <since_tizen> 3 </since_tizen>
            <value> Z </value>
        </member>
        <member name="T:Tizen.Sensor.MagnetometerDataUpdatedEventArgs">
            <summary>
            The Magnetometer changed event arguments class is used for storing the data returned by a magnetometer sensor.
            </summary>
            <since_tizen> 3 </since_tizen>
        </member>
        <member name="P:Tizen.Sensor.MagnetometerDataUpdatedEventArgs.X">
            <summary>
            Gets the X component of the magnetometer.
            </summary>
            <since_tizen> 3 </since_tizen>
            <value> X </value>
        </member>
        <member name="P:Tizen.Sensor.MagnetometerDataUpdatedEventArgs.Y">
            <summary>
            Gets the Y component of the magnetometer.
            </summary>
            <since_tizen> 3 </since_tizen>
            <value> Y </value>
        </member>
        <member name="P:Tizen.Sensor.MagnetometerDataUpdatedEventArgs.Z">
            <summary>
            Gets the Z component of the magnetometer.
            </summary>
            <since_tizen> 3 </since_tizen>
            <value> Z </value>
        </member>
        <member name="T:Tizen.Sensor.MagnetometerRotationVectorSensorDataUpdatedEventArgs">
            <summary>
            The MagnetometerRotationVectorSensor changed event arguments class is used for storing the data returned by a magnetometer rotation vector sensor.
            </summary>
            <since_tizen> 3 </since_tizen>
        </member>
        <member name="P:Tizen.Sensor.MagnetometerRotationVectorSensorDataUpdatedEventArgs.X">
            <summary>
            Gets the X component of the magnetometer rotation vector.
            </summary>
            <since_tizen> 3 </since_tizen>
            <value> X </value>
        </member>
        <member name="P:Tizen.Sensor.MagnetometerRotationVectorSensorDataUpdatedEventArgs.Y">
            <summary>
            Gets the Y component of the magnetometer rotation vector.
            </summary>
            <since_tizen> 3 </since_tizen>
            <value> Y </value>
        </member>
        <member name="P:Tizen.Sensor.MagnetometerRotationVectorSensorDataUpdatedEventArgs.Z">
            <summary>
            Gets the Z component of the magnetometer rotation vector.
            </summary>
            <since_tizen> 3 </since_tizen>
            <value> Z </value>
        </member>
        <member name="P:Tizen.Sensor.MagnetometerRotationVectorSensorDataUpdatedEventArgs.W">
            <summary>
            Gets the W component of the magnetometer rotation vector.
            </summary>
            <since_tizen> 3 </since_tizen>
            <value> W </value>
        </member>
        <member name="P:Tizen.Sensor.MagnetometerRotationVectorSensorDataUpdatedEventArgs.Accuracy">
            <summary>
            Gets the accuracy of the magnetometer rotation vector data.
            </summary>
            <since_tizen> 3 </since_tizen>
            <value> Accuracy </value>
        </member>
        <member name="T:Tizen.Sensor.OrientationSensorDataUpdatedEventArgs">
            <summary>
            The OrientationSensor changed event arguments class is used for storing the data returned by a orientation sensor.
            </summary>
            <since_tizen> 3 </since_tizen>
        </member>
        <member name="P:Tizen.Sensor.OrientationSensorDataUpdatedEventArgs.Azimuth">
            <summary>
            Gets the azimuth component of the orientation.
            </summary>
            <since_tizen> 3 </since_tizen>
            <value> Azimuth </value>
        </member>
        <member name="P:Tizen.Sensor.OrientationSensorDataUpdatedEventArgs.Pitch">
            <summary>
            Gets the pitch component of the orientation.
            </summary>
            <since_tizen> 3 </since_tizen>
            <value> Pitch </value>
        </member>
        <member name="P:Tizen.Sensor.OrientationSensorDataUpdatedEventArgs.Roll">
            <summary>
            Gets the roll component of the orientation.
            </summary>
            <since_tizen> 3 </since_tizen>
            <value> Roll </value>
        </member>
        <member name="T:Tizen.Sensor.PedometerDataUpdatedEventArgs">
            <summary>
            The Pedometer changed event arguments class is used for storing the data returned by a pedometer.
            </summary>
            <since_tizen> 3 </since_tizen>
        </member>
        <member name="P:Tizen.Sensor.PedometerDataUpdatedEventArgs.StepCount">
            <summary>
            Gets the step count.
            </summary>
            <since_tizen> 3 </since_tizen>
            <value> The step count. </value>
        </member>
        <member name="P:Tizen.Sensor.PedometerDataUpdatedEventArgs.WalkStepCount">
            <summary>
            Gets the walking step count.
            </summary>
            <since_tizen> 3 </since_tizen>
            <value> The walk step count. </value>
        </member>
        <member name="P:Tizen.Sensor.PedometerDataUpdatedEventArgs.RunStepCount">
            <summary>
            Gets the running step count.
            </summary>
            <since_tizen> 3 </since_tizen>
            <value> The run step count.</value>
        </member>
        <member name="P:Tizen.Sensor.PedometerDataUpdatedEventArgs.MovingDistance">
            <summary>
            Gets the moving distance.
            </summary>
            <since_tizen> 3 </since_tizen>
            <value> The moving distance.</value>
        </member>
        <member name="P:Tizen.Sensor.PedometerDataUpdatedEventArgs.CalorieBurned">
            <summary>
            Gets the calorie burned.
            </summary>
            <since_tizen> 3 </since_tizen>
            <value> The calorie burned.</value>
        </member>
        <member name="P:Tizen.Sensor.PedometerDataUpdatedEventArgs.LastSpeed">
            <summary>
            Gets the last speed.
            </summary>
            <since_tizen> 3 </since_tizen>
            <value> The last speed. </value>
        </member>
        <member name="P:Tizen.Sensor.PedometerDataUpdatedEventArgs.LastSteppingFrequency">
            <summary>
            Gets the last stepping frequency.
            </summary>
            <since_tizen> 3 </since_tizen>
            <value> The last stepping frequency.</value>
        </member>
        <member name="P:Tizen.Sensor.PedometerDataUpdatedEventArgs.LastStepStatus">
            <summary>
            Gets the last step status.
            </summary>
            <since_tizen> 3 </since_tizen>
            <value> The last stepping status. </value>
        </member>
        <member name="T:Tizen.Sensor.PickUpGestureDetectorDataUpdatedEventArgs">
            <summary>
            The PickUpGestureDetector changed event arguments class is used for storing the data returned by a pickup gesture detector.
            </summary>
            <since_tizen> 3 </since_tizen>
        </member>
        <member name="P:Tizen.Sensor.PickUpGestureDetectorDataUpdatedEventArgs.PickUp">
            <summary>
            Gets the pick up state.
            </summary>
            <since_tizen> 3 </since_tizen>
            <value> The pick up state. </value>
        </member>
        <member name="T:Tizen.Sensor.PressureSensorDataUpdatedEventArgs">
            <summary>
            The PressureSensor changed event arguments class is used for storing the data returned by a pressure sensor.
            </summary>
            <since_tizen> 3 </since_tizen>
        </member>
        <member name="P:Tizen.Sensor.PressureSensorDataUpdatedEventArgs.Pressure">
            <summary>
            Gets the value of the pressure.
            </summary>
            <since_tizen> 3 </since_tizen>
            <value> Pressure </value>
        </member>
        <member name="T:Tizen.Sensor.ProximitySensorDataUpdatedEventArgs">
            <summary>
            The ProximitySensor changed event arguments class is used for storing the data returned by a proximity sensor.
            </summary>
            <since_tizen> 3 </since_tizen>
        </member>
        <member name="P:Tizen.Sensor.ProximitySensorDataUpdatedEventArgs.Proximity">
            <summary>
            Gets the proximity state.
            </summary>
            <since_tizen> 3 </since_tizen>
            <value> The proximity state. </value>
        </member>
        <member name="T:Tizen.Sensor.RotationVectorSensorDataUpdatedEventArgs">
            <summary>
            The RotationVectorSensor changed event arguments class is used for storing the data returned by a rotation vector sensor.
            </summary>
            <since_tizen> 3 </since_tizen>
        </member>
        <member name="P:Tizen.Sensor.RotationVectorSensorDataUpdatedEventArgs.X">
            <summary>
            Gets the X component of the rotation vector.
            </summary>
            <since_tizen> 3 </since_tizen>
            <value> X </value>
        </member>
        <member name="P:Tizen.Sensor.RotationVectorSensorDataUpdatedEventArgs.Y">
            <summary>
            Gets the Y component of the rotation vector.
            </summary>
            <since_tizen> 3 </since_tizen>
            <value> Y </value>
        </member>
        <member name="P:Tizen.Sensor.RotationVectorSensorDataUpdatedEventArgs.Z">
            <summary>
            Gets the Z component of the rotation vector.
            </summary>
            <since_tizen> 3 </since_tizen>
            <value> Z </value>
        </member>
        <member name="P:Tizen.Sensor.RotationVectorSensorDataUpdatedEventArgs.W">
            <summary>
            Gets the W component of the rotation vector.
            </summary>
            <since_tizen> 3 </since_tizen>
            <value> W </value>
        </member>
        <member name="P:Tizen.Sensor.RotationVectorSensorDataUpdatedEventArgs.Accuracy">
            <summary>
            Gets the accuracy of the rotation vector data.
            </summary>
            <since_tizen> 3 </since_tizen>
            <value> Accuracy </value>
        </member>
        <member name="T:Tizen.Sensor.RunningActivityDetectorDataUpdatedEventArgs">
            <summary>
            The RunningActivityDetector changed event arguments class is used for storing the data returned by a running activity detector.
            </summary>
            <since_tizen> 3 </since_tizen>
        </member>
        <member name="P:Tizen.Sensor.RunningActivityDetectorDataUpdatedEventArgs.Running">
            <summary>
            Gets the running state.
            </summary>
            <since_tizen> 3 </since_tizen>
            <value> The running state. </value>
        </member>
        <member name="T:Tizen.Sensor.SensorAccuracyChangedEventArgs">
            <summary>
            The sensor accuracy changed event arguments class contains the parameters to be returned through the accuracy callback.
            </summary>
            <since_tizen> 3 </since_tizen>
        </member>
        <member name="P:Tizen.Sensor.SensorAccuracyChangedEventArgs.TimeSpan">
            <summary>
            Gets the time stamp.
            </summary>
            <since_tizen> 3 </since_tizen>
            <value> The time span. </value>
        </member>
        <member name="P:Tizen.Sensor.SensorAccuracyChangedEventArgs.Timestamp">
            <summary>
            Gets the time stamp.
            </summary>
            <since_tizen> 8 </since_tizen>
            <value> Timestamp </value>
        </member>
        <member name="P:Tizen.Sensor.SensorAccuracyChangedEventArgs.Accuracy">
            <summary>
            Gets the accuracy.
            </summary>
            <since_tizen> 3 </since_tizen>
            <value> Accuracy </value>
        </member>
        <member name="T:Tizen.Sensor.SleepMonitorDataUpdatedEventArgs">
            <summary>
            The SleepMonitor changed event arguments class is used for storing the data returned by a sleep monitor.
            </summary>
            <since_tizen> 3 </since_tizen>
        </member>
        <member name="P:Tizen.Sensor.SleepMonitorDataUpdatedEventArgs.SleepState">
            <summary>
            Gets the value of the sleep state.
            </summary>
            <since_tizen> 3 </since_tizen>
            <value> The sleep state. </value>
        </member>
        <member name="T:Tizen.Sensor.StationaryActivityDetectorDataUpdatedEventArgs">
            <summary>
            The StationaryActivityDetector changed event arguments class is used for storing the data returned by a stationary activity detector.
            </summary>
            <since_tizen> 3 </since_tizen>
        </member>
        <member name="P:Tizen.Sensor.StationaryActivityDetectorDataUpdatedEventArgs.Stationary">
            <summary>
            Gets the stationary state.
            </summary>
            <since_tizen> 3 </since_tizen>
            <value> The stationary state. </value>
        </member>
        <member name="T:Tizen.Sensor.TemperatureSensorDataUpdatedEventArgs">
            <summary>
            The TemperatureSensor changed event arguments class is used for storing the data returned by a temperature sensor.
            </summary>
            <since_tizen> 3 </since_tizen>
        </member>
        <member name="P:Tizen.Sensor.TemperatureSensorDataUpdatedEventArgs.Temperature">
            <summary>
            Gets the value of the temperature.
            </summary>
            <since_tizen> 3 </since_tizen>
            <value> Temperature </value>
        </member>
        <member name="T:Tizen.Sensor.UltravioletSensorDataUpdatedEventArgs">
            <summary>
            The UltravioletSensor changed event arguments class is used for storing the data returned by a ultraviolet sensor.
            </summary>
            <since_tizen> 3 </since_tizen>
        </member>
        <member name="P:Tizen.Sensor.UltravioletSensorDataUpdatedEventArgs.UltravioletIndex">
            <summary>
            Gets the value of the ultraviolet index.
            </summary>
            <since_tizen> 3 </since_tizen>
            <value> The ultraviolet index. </value>
        </member>
        <member name="T:Tizen.Sensor.UncalibratedGyroscopeDataUpdatedEventArgs">
            <summary>
            The UncalibratedGyroscope changed event arguments class is used for storing the data returned by a uncalibrated gyroscope.
            </summary>
            <since_tizen> 3 </since_tizen>
        </member>
        <member name="P:Tizen.Sensor.UncalibratedGyroscopeDataUpdatedEventArgs.X">
            <summary>
            Gets the X component of the uncalibrated gyroscope data.
            </summary>
            <since_tizen> 3 </since_tizen>
            <value> X </value>
        </member>
        <member name="P:Tizen.Sensor.UncalibratedGyroscopeDataUpdatedEventArgs.Y">
            <summary>
            Gets the Y component of the uncalibrated gyroscope data.
            </summary>
            <since_tizen> 3 </since_tizen>
            <value> Y </value>
        </member>
        <member name="P:Tizen.Sensor.UncalibratedGyroscopeDataUpdatedEventArgs.Z">
            <summary>
            Gets the Z component of the uncalibrated gyroscope data.
            </summary>
            <since_tizen> 3 </since_tizen>
            <value> Z </value>
        </member>
        <member name="P:Tizen.Sensor.UncalibratedGyroscopeDataUpdatedEventArgs.BiasX">
            <summary>
            Gets the BiasX component of the uncalibrated gyroscope data.
            </summary>
            <since_tizen> 3 </since_tizen>
            <value> The X bias. </value>
        </member>
        <member name="P:Tizen.Sensor.UncalibratedGyroscopeDataUpdatedEventArgs.BiasY">
            <summary>
            Gets the BiasY component of the uncalibrated gyroscope data.
            </summary>
            <since_tizen> 3 </since_tizen>
            <value> The Y bias. </value>
        </member>
        <member name="P:Tizen.Sensor.UncalibratedGyroscopeDataUpdatedEventArgs.BiasZ">
            <summary>
            Gets the BiasZ component of the uncalibrated gyroscope data.
            </summary>
            <since_tizen> 3 </since_tizen>
            <value> The Z bias. </value>
        </member>
        <member name="T:Tizen.Sensor.UncalibratedMagnetometerDataUpdatedEventArgs">
            <summary>
            The UncalibratedMagnetometer changed event arguments class is used for storing the data returned by a uncalibrated magnetometer.
            </summary>
            <since_tizen> 3 </since_tizen>
        </member>
        <member name="P:Tizen.Sensor.UncalibratedMagnetometerDataUpdatedEventArgs.X">
            <summary>
            Gets the X component of the uncalibrated magnetometer data.
            </summary>
            <since_tizen> 3 </since_tizen>
            <value> X </value>
        </member>
        <member name="P:Tizen.Sensor.UncalibratedMagnetometerDataUpdatedEventArgs.Y">
            <summary>
            Gets the Y component of the uncalibrated magnetometer data.
            </summary>
            <since_tizen> 3 </since_tizen>
            <value> Y </value>
        </member>
        <member name="P:Tizen.Sensor.UncalibratedMagnetometerDataUpdatedEventArgs.Z">
            <summary>
            Gets the Z component of the uncalibrated magnetometer data.
            </summary>
            <since_tizen> 3 </since_tizen>
            <value> Z </value>
        </member>
        <member name="P:Tizen.Sensor.UncalibratedMagnetometerDataUpdatedEventArgs.BiasX">
            <summary>
            Gets the BiasX component of the uncalibrated magnetometer data.
            </summary>
            <since_tizen> 3 </since_tizen>
            <value> The X bias. </value>
        </member>
        <member name="P:Tizen.Sensor.UncalibratedMagnetometerDataUpdatedEventArgs.BiasY">
            <summary>
            Gets the BiasY component of the uncalibrated magnetometer data.
            </summary>
            <since_tizen> 3 </since_tizen>
            <value> The Y bias. </value>
        </member>
        <member name="P:Tizen.Sensor.UncalibratedMagnetometerDataUpdatedEventArgs.BiasZ">
            <summary>
            Gets the BiasZ component of the uncalibrated magnetometer data.
            </summary>
            <since_tizen> 3 </since_tizen>
            <value> The Z bias. </value>
        </member>
        <member name="T:Tizen.Sensor.WalkingActivityDetectorDataUpdatedEventArgs">
            <summary>
            The WalkingActivityDetector changed event arguments class is used for storing the data returned by a walking activity detector.
            </summary>
            <since_tizen> 3 </since_tizen>
        </member>
        <member name="P:Tizen.Sensor.WalkingActivityDetectorDataUpdatedEventArgs.Walking">
            <summary>
            Gets the walking state.
            </summary>
            <since_tizen> 3 </since_tizen>
            <value> The walking state. </value>
        </member>
        <member name="T:Tizen.Sensor.WristUpGestureDetectorDataUpdatedEventArgs">
            <summary>
            The WristUpGestureDetector changed event arguments class is used for storing the data returned by a wrist up gesture detector.
            </summary>
            <since_tizen> 3 </since_tizen>
        </member>
        <member name="P:Tizen.Sensor.WristUpGestureDetectorDataUpdatedEventArgs.WristUp">
            <summary>
            Gets the wrist up state.
            </summary>
            <since_tizen> 3 </since_tizen>
            <value> The wrist up state. </value>
        </member>
        <member name="T:Tizen.Sensor.Accelerometer">
            <summary>
            The Accelerometer Sensor class is used for registering callbacks for the accelerometer and getting the accelerometer data.
            </summary>
            <since_tizen> 3 </since_tizen>
        </member>
        <member name="P:Tizen.Sensor.Accelerometer.X">
            <summary>
            Gets the X component of the acceleration.
            </summary>
            <since_tizen> 3 </since_tizen>
            <value> X </value>
        </member>
        <member name="P:Tizen.Sensor.Accelerometer.Y">
            <summary>
            Gets the Y component of the acceleration.
            </summary>
            <since_tizen> 3 </since_tizen>
            <value> Y </value>
        </member>
        <member name="P:Tizen.Sensor.Accelerometer.Z">
            <summary>
            Gets the Z component of the acceleration.
            </summary>
            <since_tizen> 3 </since_tizen>
            <value> Z </value>
        </member>
        <member name="P:Tizen.Sensor.Accelerometer.IsSupported">
            <summary>
            Returns true or false based on whether accelerometer sensor is supported by the device.
            </summary>
            <since_tizen> 3 </since_tizen>
            <value><c>true</c> if supported; otherwise <c>false</c>.</value>
        </member>
        <member name="P:Tizen.Sensor.Accelerometer.Count">
            <summary>
            Returns the number of accelerometer sensors available on the device.
            </summary>
            <since_tizen> 3 </since_tizen>
            <value> The count of accelerometer sensors. </value>
            <exception cref="T:System.InvalidOperationException">Thrown when the operation is invalid for the current state.</exception>
        </member>
        <member name="M:Tizen.Sensor.Accelerometer.#ctor(System.UInt32)">
            <summary>
            Initializes a new instance of the <see cref="T:Tizen.Sensor.Accelerometer"/> class.
            </summary>
            <since_tizen> 3 </since_tizen>
            <feature>http://tizen.org/feature/sensor.accelerometer</feature>
            <exception cref="T:System.ArgumentException">Thrown when an invalid argument is used.</exception>
            <exception cref="T:System.NotSupportedException">Thrown when the sensor is not supported.</exception>
            <exception cref="T:System.InvalidOperationException">Thrown when the operation is invalid for the current state.</exception>
            <param name='index'>
            Index. Default value for this is 0. Index refers to a particular accelerometer sensor in case of multiple sensors.
            </param>
        </member>
        <member name="E:Tizen.Sensor.Accelerometer.DataUpdated">
            <summary>
            An event handler for storing the callback functions for the event corresponding to the change in the accelerometer sensor data.
            </summary>
            <since_tizen> 3 </since_tizen>
        </member>
        <member name="M:Tizen.Sensor.Accelerometer.ReadData">
            <summary>
            Read accelerometer data synchronously.
            </summary>
        </member>
        <member name="T:Tizen.Sensor.ActivityDetector">
            <summary>
            The Activity Detector class is used for storing the common activity information.
            </summary>
            <since_tizen> 3 </since_tizen>
        </member>
        <member name="F:Tizen.Sensor.ActivityDetector.ActivityAttribute">
            <summary>
            Attribute key for a activity detector.
            </summary>
            <since_tizen> 3 </since_tizen>
        </member>
        <member name="T:Tizen.Sensor.ActivityDetector.ActivityType">
            <summary>
            Activity types.
            </summary>
        </member>
        <member name="F:Tizen.Sensor.ActivityDetector.ActivityType.Unknown">
            <summary>
            Unknown.
            </summary>
        </member>
        <member name="F:Tizen.Sensor.ActivityDetector.ActivityType.Stationary">
            <summary>
            Stationary.
            </summary>
        </member>
        <member name="F:Tizen.Sensor.ActivityDetector.ActivityType.Walking">
            <summary>
            Walking.
            </summary>
        </member>
        <member name="F:Tizen.Sensor.ActivityDetector.ActivityType.Running">
            <summary>
            Running.
            </summary>
        </member>
        <member name="F:Tizen.Sensor.ActivityDetector.ActivityType.InVehicle">
            <summary>
            In vehicle.
            </summary>
        </member>
        <member name="F:Tizen.Sensor.ActivityDetector.ActivityType.OnBicycle">
            <summary>
            On bicycle.
            </summary>
        </member>
        <member name="P:Tizen.Sensor.ActivityDetector.ActivityAccuracy">
            <summary>
            Gets the activity accuracy of the activity detector.
            </summary>
            <since_tizen> 3 </since_tizen>
            <value> The activity accuracy. </value>
        </member>
        <member name="T:Tizen.Sensor.AutoRotationSensor">
            <summary>
            The AutoRotationSensor class is used for registering callbacks for the auto-rotation sensor and getting the auto-rotation data.
            </summary>
            <since_tizen> 7 </since_tizen>
        </member>
        <member name="P:Tizen.Sensor.AutoRotationSensor.Rotation">
            <summary>
            Gets the value of the rotation state.
            </summary>
            <since_tizen> 7 </since_tizen>
            <value> The rotation state. </value>
        </member>
        <member name="P:Tizen.Sensor.AutoRotationSensor.Accuracy">
            <summary>
            Gets the accuracy of the auto-rotation data.
            </summary>
            <since_tizen> 7 </since_tizen>
            <value> Accuracy </value>
        </member>
        <member name="P:Tizen.Sensor.AutoRotationSensor.IsSupported">
            <summary>
            Returns true or false based on whether the auto-rotation sensor is supported by the device.
            </summary>
            <since_tizen> 7 </since_tizen>
            <value><c>true</c> if supported; otherwise <c>false</c>.</value>
        </member>
        <member name="M:Tizen.Sensor.AutoRotationSensor.#ctor(System.UInt32)">
            <summary>
            Initializes a new instance of the <see cref="T:Tizen.Sensor.AutoRotationSensor"/> class.
            </summary>
            <since_tizen> 7 </since_tizen>
            <feature>http://tizen.org/feature/screen.auto_rotation</feature>
            <exception cref="T:System.ArgumentException">Thrown when an invalid argument is used.</exception>
            <exception cref="T:System.NotSupportedException">Thrown when the sensor is not supported.</exception>
            <exception cref="T:System.InvalidOperationException">Thrown when the operation is invalid for the current state.</exception>
            <param name='index'>
            Index. The default value of this is 0. Index refers to a specific auto-rotation sensor in case of multiple sensors.
            </param>
        </member>
        <member name="E:Tizen.Sensor.AutoRotationSensor.DataUpdated">
            <summary>
            An event handler for storing the callback functions for the event corresponding to the change in the auto-rotation sensor data.
            </summary>
            <since_tizen> 7 </since_tizen>
        </member>
        <member name="E:Tizen.Sensor.AutoRotationSensor.AccuracyChanged">
            <summary>
            An event handler for accuracy changed events.
            </summary>
            <since_tizen> 7 </since_tizen>
        </member>
        <member name="M:Tizen.Sensor.AutoRotationSensor.ReadData">
            <summary>
            Read auto-rotation data synchronously.
            </summary>
        </member>
        <member name="T:Tizen.Sensor.FaceDownGestureDetector">
            <summary>
            The FaceDownGestureDetector class is used for registering callbacks for the face down gesture detector and getting the face down state.
            </summary>
            <since_tizen> 3 </since_tizen>
        </member>
        <member name="P:Tizen.Sensor.FaceDownGestureDetector.FaceDown">
            <summary>
            Gets the state of the face down gesture.
            </summary>
            <since_tizen> 3 </since_tizen>
            <value> The face down state. </value>
        </member>
        <member name="P:Tizen.Sensor.FaceDownGestureDetector.IsSupported">
            <summary>
            Returns true or false based on whether the face down gesture detector is supported by the device.
            </summary>
            <since_tizen> 3 </since_tizen>
            <value><c>true</c> if supported; otherwise <c>false</c>.</value>
        </member>
        <member name="P:Tizen.Sensor.FaceDownGestureDetector.Count">
            <summary>
            Returns the number of face down gesture detectors available on the device.
            </summary>
            <since_tizen> 3 </since_tizen>
            <value> The count of face down gesture detectors. </value>
        </member>
        <member name="M:Tizen.Sensor.FaceDownGestureDetector.#ctor(System.UInt32)">
            <summary>
            Initializes a new instance of the <see cref="T:Tizen.Sensor.FaceDownGestureDetector"/> class.
            </summary>
            <since_tizen> 3 </since_tizen>
            <feature>http://tizen.org/feature/sensor.gesture_recognition</feature>
            <exception cref="T:System.ArgumentException">Thrown when an invalid argument is used.</exception>
            <exception cref="T:System.NotSupportedException">Thrown when the sensor is not supported.</exception>
            <exception cref="T:System.InvalidOperationException">Thrown when the operation is invalid for the current state.</exception>
            <param name='index'>
            Index. Default value for this is 0. Index refers to a particular face down gesture detector in case of multiple sensors.
            </param>
        </member>
        <member name="M:Tizen.Sensor.FaceDownGestureDetector.ReadData">
            <summary>
            Read face down gesture detector data synchronously.
            </summary>
        </member>
        <member name="E:Tizen.Sensor.FaceDownGestureDetector.DataUpdated">
            <summary>
            An event handler for storing the callback functions for the event corresponding to the change in the face down gesture detector data.
            </summary>
            <since_tizen> 3 </since_tizen>
        </member>
        <member name="T:Tizen.Sensor.GravitySensor">
            <summary>
            The GravitySensor class is used for registering callbacks for the gravity sensor and getting the gravity data.
            </summary>
            <since_tizen> 3 </since_tizen>
        </member>
        <member name="P:Tizen.Sensor.GravitySensor.X">
            <summary>
            Gets the X component of the gravity.
            </summary>
            <since_tizen> 3 </since_tizen>
            <value> X </value>
        </member>
        <member name="P:Tizen.Sensor.GravitySensor.Y">
            <summary>
            Gets the Y component of the gravity.
            </summary>
            <since_tizen> 3 </since_tizen>
            <value> Y </value>
        </member>
        <member name="P:Tizen.Sensor.GravitySensor.Z">
            <summary>
            Gets the Z component of the gravity.
            </summary>
            <since_tizen> 3 </since_tizen>
            <value> Z </value>
        </member>
        <member name="P:Tizen.Sensor.GravitySensor.IsSupported">
            <summary>
            Returns true or false based on whether the gravity sensor is supported by the device.
            </summary>
            <since_tizen> 3 </since_tizen>
            <value><c>true</c> if supported; otherwise <c>false</c>.</value>
        </member>
        <member name="P:Tizen.Sensor.GravitySensor.Count">
            <summary>
            Returns the number of gravity sensors available on the device.
            </summary>
            <since_tizen> 3 </since_tizen>
            <value> The count of gravity sensors. </value>
        </member>
        <member name="M:Tizen.Sensor.GravitySensor.#ctor(System.UInt32)">
            <summary>
            Initializes a new instance of the <see cref="T:Tizen.Sensor.GravitySensor"/> class.
            </summary>
            <since_tizen> 3 </since_tizen>
            <feature>http://tizen.org/feature/sensor.gravity</feature>
            <exception cref="T:System.ArgumentException">Thrown when an invalid argument is used.</exception>
            <exception cref="T:System.NotSupportedException">Thrown when the sensor is not supported.</exception>
            <exception cref="T:System.InvalidOperationException">Thrown when the operation is invalid for the current state.</exception>
            <param name='index'>
            Index. Default value for this is 0. Index refers to a particular gravity sensor in case of multiple sensors.
            </param>
        </member>
        <member name="E:Tizen.Sensor.GravitySensor.DataUpdated">
            <summary>
            An event handler for storing the callback functions for the event corresponding to the change in the gravity sensor data.
            </summary>
            <since_tizen> 3 </since_tizen>
        </member>
        <member name="E:Tizen.Sensor.GravitySensor.AccuracyChanged">
            <summary>
            An event handler for accuracy changed events.
            </summary>
            <since_tizen> 3 </since_tizen>
        </member>
        <member name="M:Tizen.Sensor.GravitySensor.ReadData">
            <summary>
            Read gravity sensor data synchronously.
            </summary>
        </member>
        <member name="T:Tizen.Sensor.Gyroscope">
            <summary>
            The Gyroscope Sensor class is used for registering callbacks for the gyroscope and getting the gyroscope data.
            </summary>
            <since_tizen> 3 </since_tizen>
        </member>
        <member name="P:Tizen.Sensor.Gyroscope.X">
            <summary>
            Gets the X component of the acceleration.
            </summary>
            <since_tizen> 3 </since_tizen>
            <value> X </value>
        </member>
        <member name="P:Tizen.Sensor.Gyroscope.Y">
            <summary>
            Gets the Y component of the acceleration.
            </summary>
            <since_tizen> 3 </since_tizen>
            <value> Y </value>
        </member>
        <member name="P:Tizen.Sensor.Gyroscope.Z">
            <summary>
            Gets the Z component of the acceleration.
            </summary>
            <since_tizen> 3 </since_tizen>
            <value> Z </value>
        </member>
        <member name="P:Tizen.Sensor.Gyroscope.IsSupported">
            <summary>
            Returns true or false based on whether the gyroscope sensor is supported by the device.
            </summary>
            <since_tizen> 3 </since_tizen>
            <value><c>true</c> if supported; otherwise <c>false</c>.</value>
        </member>
        <member name="P:Tizen.Sensor.Gyroscope.Count">
            <summary>
            Returns the number of the gyroscope sensors available on the device.
            </summary>
            <since_tizen> 3 </since_tizen>
            <value> The count of the gyroscope sensors. </value>
        </member>
        <member name="M:Tizen.Sensor.Gyroscope.#ctor(System.UInt32)">
            <summary>
            Initializes a new instance of the <see cref="T:Tizen.Sensor.Gyroscope"/> class.
            </summary>
            <since_tizen> 3 </since_tizen>
            <feature>http://tizen.org/feature/sensor.gyroscope</feature>
            <exception cref="T:System.ArgumentException">Thrown when an invalid argument is used.</exception>
            <exception cref="T:System.NotSupportedException">Thrown when the sensor is not supported.</exception>
            <exception cref="T:System.InvalidOperationException">Thrown when the operation is invalid for the current state.</exception>
            <param name='index'>
            Index. Default value for this is 0. Index refers to a particular gyroscope sensor in case of multiple sensors.
            </param>
        </member>
        <member name="E:Tizen.Sensor.Gyroscope.DataUpdated">
            <summary>
            An event handler for storing the callback functions for the event corresponding to the change in the gyroscope sensor data.
            </summary>
            <since_tizen> 3 </since_tizen>
        </member>
        <member name="M:Tizen.Sensor.Gyroscope.ReadData">
            <summary>
            Read gyroscope data synchronously.
            </summary>
        </member>
        <member name="T:Tizen.Sensor.GyroscopeRotationVectorSensor">
            <summary>
            The GyroscopeRotationVectorSensor class is used for registering callbacks for the gyroscope rotation vector sensor and getting the gyroscope rotation vector data.
            </summary>
            <since_tizen> 3 </since_tizen>
        </member>
        <member name="P:Tizen.Sensor.GyroscopeRotationVectorSensor.X">
            <summary>
            Gets the X component of the gyroscope rotation vector.
            </summary>
            <since_tizen> 3 </since_tizen>
            <value> X </value>
        </member>
        <member name="P:Tizen.Sensor.GyroscopeRotationVectorSensor.Y">
            <summary>
            Gets the Y component of the gyroscope rotation vector.
            </summary>
            <since_tizen> 3 </since_tizen>
            <value> Y </value>
        </member>
        <member name="P:Tizen.Sensor.GyroscopeRotationVectorSensor.Z">
            <summary>
            Gets the Z component of the gyroscope rotation vector.
            </summary>
            <since_tizen> 3 </since_tizen>
            <value> Z </value>
        </member>
        <member name="P:Tizen.Sensor.GyroscopeRotationVectorSensor.W">
            <summary>
            Gets the W component of the gyroscope rotation vector.
            </summary>
            <since_tizen> 3 </since_tizen>
            <value> W </value>
        </member>
        <member name="P:Tizen.Sensor.GyroscopeRotationVectorSensor.Accuracy">
            <summary>
            Gets the accuracy of the gyroscope rotation vector data.
            </summary>
            <since_tizen> 3 </since_tizen>
            <value> Accuracy </value>
        </member>
        <member name="P:Tizen.Sensor.GyroscopeRotationVectorSensor.IsSupported">
            <summary>
            Returns true or false based on whether the gyroscope rotation vector sensor is supported by the device.
            </summary>
            <since_tizen> 3 </since_tizen>
            <value><c>true</c> if supported; otherwise <c>false</c>.</value>
        </member>
        <member name="P:Tizen.Sensor.GyroscopeRotationVectorSensor.Count">
            <summary>
            Returns the number of the gyroscope rotation vector sensors available on the device.
            </summary>
            <since_tizen> 3 </since_tizen>
            <value> The count of accelerometer rotation vector sensors. </value>
        </member>
        <member name="M:Tizen.Sensor.GyroscopeRotationVectorSensor.#ctor(System.UInt32)">
            <summary>
            Initializes a new instance of the <see cref="T:Tizen.Sensor.GyroscopeRotationVectorSensor"/> class.
            </summary>
            <since_tizen> 3 </since_tizen>
            <feature>http://tizen.org/feature/sensor.gyroscope_rotation_vector</feature>
            <exception cref="T:System.ArgumentException">Thrown when an invalid argument is used.</exception>
            <exception cref="T:System.NotSupportedException">Thrown when the sensor is not supported.</exception>
            <exception cref="T:System.InvalidOperationException">Thrown when the operation is invalid for the current state.</exception>
            <param name='index'>
            Index. Default value for this is 0. Index refers to a particular gyroscope rotation vector sensor in case of multiple sensors.
            </param>
        </member>
        <member name="E:Tizen.Sensor.GyroscopeRotationVectorSensor.DataUpdated">
            <summary>
            An event handler for storing the callback functions for the event corresponding to the change in the gyroscope rotation vector sensor data.
            </summary>
            <since_tizen> 3 </since_tizen>
        </member>
        <member name="M:Tizen.Sensor.GyroscopeRotationVectorSensor.ReadData">
            <summary>
            Read gyroscope rotation vector sensor data synchronously.
            </summary>
        </member>
        <member name="T:Tizen.Sensor.HeartRateMonitor">
            <summary>
            The HeartRateMonitor class is used for registering callbacks for the heart rate monitor and getting the heart rate data.
            </summary>
            <since_tizen> 3 </since_tizen>
        </member>
        <member name="P:Tizen.Sensor.HeartRateMonitor.HeartRate">
            <summary>
            Gets the value of the heart rate monitor.
            </summary>
            <since_tizen> 3 </since_tizen>
            <value> The heart rate. </value>
        </member>
        <member name="P:Tizen.Sensor.HeartRateMonitor.IsSupported">
            <summary>
            Returns true or false based on whether the heart rate monitor is supported by the device.
            </summary>
            <since_tizen> 3 </since_tizen>
            <value><c>true</c> if supported; otherwise <c>false</c>.</value>
        </member>
        <member name="P:Tizen.Sensor.HeartRateMonitor.Count">
            <summary>
            Returns the number of heart rate monitors available on the device.
            </summary>
            <since_tizen> 3 </since_tizen>
            <value> The count of heart rate monitors. </value>
        </member>
        <member name="M:Tizen.Sensor.HeartRateMonitor.#ctor(System.UInt32)">
            <summary>
            Initializes a new instance of the <see cref="T:Tizen.Sensor.HeartRateMonitor"/> class.
            </summary>
            <since_tizen> 3 </since_tizen>
            <privilege>http://tizen.org/privilege/healthinfo</privilege>
            <privlevel>public</privlevel>
            <feature>http://tizen.org/feature/sensor.heart_rate_monitor</feature>
            <exception cref="T:System.ArgumentException">Thrown when an invalid argument is used.</exception>
            <exception cref="T:System.NotSupportedException">Thrown when the sensor is not supported.</exception>
            <exception cref="T:System.UnauthorizedAccessException">Thrown when the application has no privilege to use the sensor.</exception>
            <exception cref="T:System.InvalidOperationException">Thrown when the operation is invalid for the current state.</exception>
            <param name='index'>
            Index. Default value for this is 0. Index refers to a particular heart rate monitor in case of multiple sensors.
            </param>
        </member>
        <member name="E:Tizen.Sensor.HeartRateMonitor.DataUpdated">
            <summary>
            An event handler for storing the callback functions for the event corresponding to the change in the heart rate monitor data.
            </summary>
            <since_tizen> 3 </since_tizen>
        </member>
        <member name="M:Tizen.Sensor.HeartRateMonitor.ReadData">
            <summary>
            Read heart rate monitor data synchronously.
            </summary>
        </member>
        <member name="T:Tizen.Sensor.HeartRateMonitorBatch">
            <summary>
            The HeartRateMonitorBatch class registers callbacks of batch jobs for heart rate monitoring and provides batch data of the heart rate.
            </summary>
            <since_tizen> 8 </since_tizen>
        </member>
        <member name="M:Tizen.Sensor.HeartRateMonitorBatch.ConvertBatchData">
            <summary>
            List of converted HeartRateMonitorBatchData.
            </summary>
            <since_tizen> 8 </since_tizen>
        </member>
        <member name="P:Tizen.Sensor.HeartRateMonitorBatch.Accuracy">
            <summary>
            Gets the accuracy of the HeartRateMonitorBatch data.
            </summary>
            <since_tizen> 8 </since_tizen>
            <value> Accuracy </value>
        </member>
        <member name="P:Tizen.Sensor.HeartRateMonitorBatch.IsSupported">
            <summary>
            Returns true or false based on whether the HeartRateMonitorBatch sensor is supported by the device.
            </summary>
            <since_tizen> 8 </since_tizen>
            <value><c>true</c> if supported; otherwise <c>false</c>.</value>
        </member>
        <member name="P:Tizen.Sensor.HeartRateMonitorBatch.Count">
            <summary>
            Returns the number of HeartRateMonitorBatch sensors available on the device.
            </summary>
            <since_tizen> 8 </since_tizen>
            <value> The count of HeartRateMonitorBatch sensors. </value>
            <exception cref="T:System.InvalidOperationException">Thrown when the operation is invalid for the current state.</exception>
        </member>
        <member name="M:Tizen.Sensor.HeartRateMonitorBatch.#ctor(System.UInt32)">
            <summary>
            Initializes a new instance of the <see cref="T:Tizen.Sensor.HeartRateMonitorBatch"/> class.
            </summary>
            <since_tizen> 8 </since_tizen>
            <privilege>http://tizen.org/privilege/healthinfo</privilege>
            <privlevel>public</privlevel>
            <feature>http://tizen.org/feature/sensor.heart_rate_monitor.batch</feature>
            <exception cref="T:System.ArgumentException">Thrown when an invalid argument is used.</exception>
            <exception cref="T:System.NotSupportedException">Thrown when the sensor is not supported.</exception>
            <exception cref="T:System.UnauthorizedAccessException">Thrown when the application has no privilege to use the sensor.</exception>
            <exception cref="T:System.InvalidOperationException">Thrown when the operation is invalid for the current state.</exception>
            <param name='index'>
            Index. Default value for this is 0. Index refers to a particular HeartRateMonitorBatch in case of multiple sensors.
            </param>
        </member>
        <member name="E:Tizen.Sensor.HeartRateMonitorBatch.DataUpdated">
            <summary>
            An event handler for storing the callback functions for the event corresponding to the change in the HeartRateMonitorBatch data.
            </summary>
            <since_tizen> 8 </since_tizen>
        </member>
        <member name="E:Tizen.Sensor.HeartRateMonitorBatch.AccuracyChanged">
            <summary>
            An event handler for accuracy changed events.
            </summary>
            <since_tizen> 8 </since_tizen>
        </member>
        <member name="M:Tizen.Sensor.HeartRateMonitorBatch.ReadData">
            <summary>
            Reads HeartRateMonitorBatch data synchronously.
            </summary>
        </member>
        <member name="T:Tizen.Sensor.HeartRateMonitorLEDGreenBatch">
            <summary>
            The HeartRateMonitorLEDGreenBatch class registers callbacks for the HRMLEDGreen batch and provides batch data of HRMLEDGreen batch.
            </summary>
            <since_tizen> 8 </since_tizen>
        </member>
        <member name="M:Tizen.Sensor.HeartRateMonitorLEDGreenBatch.ConvertBatchData">
            <summary>
            List of converted HeartRateMonitorLEDGreenBatchData.
            </summary>
            <since_tizen> 8 </since_tizen>
        </member>
        <member name="P:Tizen.Sensor.HeartRateMonitorLEDGreenBatch.Accuracy">
            <summary>
            Gets the accuracy of the auto HeartRateMonitorLEDGreenBatch data.
            </summary>
            <since_tizen> 8 </since_tizen>
            <value> Accuracy </value>
        </member>
        <member name="P:Tizen.Sensor.HeartRateMonitorLEDGreenBatch.IsSupported">
            <summary>
            Returns true or false based on whether the HeartRateMonitorLEDGreenBatch sensor is supported by the device.
            </summary>
            <since_tizen> 8 </since_tizen>
            <value><c>true</c> if supported; otherwise <c>false</c>.</value>
        </member>
        <member name="P:Tizen.Sensor.HeartRateMonitorLEDGreenBatch.Count">
            <summary>
            Returns the number of HeartRateMonitorLEDGreenBatch sensors available on the device.
            </summary>
            <since_tizen> 8 </since_tizen>
            <value> The count of HeartRateMonitorLEDGreenBatch sensors. </value>
            <exception cref="T:System.InvalidOperationException">Thrown when the operation is invalid for the current state.</exception>
        </member>
        <member name="M:Tizen.Sensor.HeartRateMonitorLEDGreenBatch.#ctor(System.UInt32)">
            <summary>
            Initializes a new instance of the <see cref="T:Tizen.Sensor.HeartRateMonitorLEDGreenBatch"/> class.
            </summary>
            <since_tizen> 8 </since_tizen>
            <privilege>http://tizen.org/privilege/healthinfo</privilege>
            <privlevel>public</privlevel>
            <feature>http://tizen.org/feature/sensor.heart_rate_monitor.led_green.batch</feature>
            <exception cref="T:System.ArgumentException">Thrown when an invalid argument is used.</exception>
            <exception cref="T:System.NotSupportedException">Thrown when the sensor is not supported.</exception>
            <exception cref="T:System.UnauthorizedAccessException">Thrown when the application has no privilege to use the sensor.</exception>
            <exception cref="T:System.InvalidOperationException">Thrown when the operation is invalid for the current state.</exception>
            <param name='index'>
            Index. Default value for this is 0. Index refers to a particular HeartRateMonitorLEDGreenBatch sensor in case of multiple sensors.
            </param>
        </member>
        <member name="E:Tizen.Sensor.HeartRateMonitorLEDGreenBatch.DataUpdated">
            <summary>
            An event handler for storing the callback functions for the event corresponding to the change in the HeartRateMonitorLEDGreenBatch sensor data.
            </summary>
            <since_tizen> 8 </since_tizen>
        </member>
        <member name="E:Tizen.Sensor.HeartRateMonitorLEDGreenBatch.AccuracyChanged">
            <summary>
            An event handler for accuracy changed events.
            </summary>
            <since_tizen> 8 </since_tizen>
        </member>
        <member name="M:Tizen.Sensor.HeartRateMonitorLEDGreenBatch.ReadData">
            <summary>
            Reads HeartRateMonitorLEDGreenBatch data synchronously.
            </summary>
        </member>
        <member name="T:Tizen.Sensor.HumiditySensor">
            <summary>
            The HumiditySensor class is used for registering callbacks for the humidity sensor and getting the humidity data.
            </summary>
            <since_tizen> 3 </since_tizen>
        </member>
        <member name="P:Tizen.Sensor.HumiditySensor.Humidity">
            <summary>
            Gets the value of the humidity sensor.
            </summary>
            <since_tizen> 3 </since_tizen>
            <value> Humidity </value>
        </member>
        <member name="P:Tizen.Sensor.HumiditySensor.IsSupported">
            <summary>
            Returns true or false based on whether the humidity sensor is supported by the device.
            </summary>
            <since_tizen> 3 </since_tizen>
            <value><c>true</c> if supported; otherwise <c>false</c>.</value>
        </member>
        <member name="P:Tizen.Sensor.HumiditySensor.Count">
            <summary>
            Returns the number of humidity sensors available on the device.
            </summary>
            <since_tizen> 3 </since_tizen>
            <value> The count of humidity sensors. </value>
        </member>
        <member name="M:Tizen.Sensor.HumiditySensor.#ctor(System.UInt32)">
            <summary>
            Initializes a new instance of the <see cref="T:Tizen.Sensor.HumiditySensor"/> class.
            </summary>
            <since_tizen> 3 </since_tizen>
            <feature>http://tizen.org/feature/sensor.humidity</feature>
            <exception cref="T:System.ArgumentException">Thrown when an invalid argument is used.</exception>
            <exception cref="T:System.NotSupportedException">Thrown when the sensor is not supported.</exception>
            <exception cref="T:System.InvalidOperationException">Thrown when the operation is invalid for the current state.</exception>
            <param name='index'>
            Index. Default value for this is 0. Index refers to a particular humidity sensor in case of multiple sensors.
            </param>
        </member>
        <member name="E:Tizen.Sensor.HumiditySensor.DataUpdated">
            <summary>
            An event handler for storing the callback functions for the event corresponding to the change in the humidity sensor data.
            </summary>
            <since_tizen> 3 </since_tizen>
        </member>
        <member name="M:Tizen.Sensor.HumiditySensor.ReadData">
            <summary>
            Read humidity sensor data synchronously.
            </summary>
        </member>
        <member name="T:Tizen.Sensor.InVehicleActivityDetector">
            <summary>
            The InVehicleActivityDetector class is used for registering callbacks for the in-vehicle activity detector and getting the in-vehicle state.
            </summary>
            <since_tizen> 3 </since_tizen>
        </member>
        <member name="P:Tizen.Sensor.InVehicleActivityDetector.InVehicle">
            <summary>
            Gets the state of the in-vehicle activity detector.
            </summary>
            <since_tizen> 3 </since_tizen>
            <value> The in-vehicle state. </value>
        </member>
        <member name="P:Tizen.Sensor.InVehicleActivityDetector.IsSupported">
            <summary>
            Returns true or false based on whether the in-vehicle activity detector is supported by the device.
            </summary>
            <since_tizen> 3 </since_tizen>
            <value><c>true</c> if supported; otherwise <c>false</c>.</value>
        </member>
        <member name="P:Tizen.Sensor.InVehicleActivityDetector.Count">
            <summary>
            Returns the number of in-vehicle activity detectors available on the device.
            </summary>
            <since_tizen> 3 </since_tizen>
            <value> The count of in-vehicle activity detectors. </value>
        </member>
        <member name="M:Tizen.Sensor.InVehicleActivityDetector.#ctor(System.UInt32)">
            <summary>
            Initializes a new instance of the <see cref="T:Tizen.Sensor.InVehicleActivityDetector"/> class.
            </summary>
            <since_tizen> 3 </since_tizen>
            <feature>http://tizen.org/feature/sensor.activity_recognition</feature>
            <exception cref="T:System.ArgumentException">Thrown when an invalid argument is used.</exception>
            <exception cref="T:System.NotSupportedException">Thrown when the sensor is not supported.</exception>
            <exception cref="T:System.InvalidOperationException">Thrown when the operation is invalid for the current state.</exception>
            <param name='index'>
            Index. Default value for this is 0. Index refers to a particular in-vehicle activity detector in case of multiple sensors.
            </param>
        </member>
        <member name="M:Tizen.Sensor.InVehicleActivityDetector.ReadData">
            <summary>
            Read in-vehicle activity detector data synchronously.
            </summary>
        </member>
        <member name="E:Tizen.Sensor.InVehicleActivityDetector.DataUpdated">
            <summary>
            An event handler for storing the callback functions for the event corresponding to the change in the in-vehicle activity detector data.
            </summary>
            <since_tizen> 3 </since_tizen>
        </member>
        <member name="T:Tizen.Sensor.LightSensor">
            <summary>
            The LightSensor class is used for registering callbacks for the light sensor and getting the light data.
            </summary>
            <since_tizen> 3 </since_tizen>
        </member>
        <member name="P:Tizen.Sensor.LightSensor.Level">
            <summary>
            Gets the level of the light.
            </summary>
            <since_tizen> 3 </since_tizen>
            <value> The light level. </value>
        </member>
        <member name="P:Tizen.Sensor.LightSensor.IsSupported">
            <summary>
            Returns true or false based on whether the light sensor is supported by the device.
            </summary>
            <since_tizen> 3 </since_tizen>
            <value><c>true</c> if supported; otherwise <c>false</c>.</value>
        </member>
        <member name="P:Tizen.Sensor.LightSensor.Count">
            <summary>
            Returns the number of light sensors available on the device.
            </summary>
            <since_tizen> 3 </since_tizen>
            <value> The count of light sensors. </value>
        </member>
        <member name="M:Tizen.Sensor.LightSensor.#ctor(System.UInt32)">
            <summary>
            Initializes a new instance of the <see cref="T:Tizen.Sensor.LightSensor"/> class.
            </summary>
            <since_tizen> 3 </since_tizen>
            <feature>http://tizen.org/feature/sensor.photometer</feature>
            <exception cref="T:System.ArgumentException">Thrown when an invalid argument is used.</exception>
            <exception cref="T:System.NotSupportedException">Thrown when the sensor is not supported.</exception>
            <exception cref="T:System.InvalidOperationException">Thrown when the operation is invalid for the current state.</exception>
            <param name='index'>
            Index. Default value for this is 0. Index refers to a particular light sensor in case of multiple sensors.
            </param>
        </member>
        <member name="E:Tizen.Sensor.LightSensor.DataUpdated">
            <summary>
            An event handler for storing the callback functions for the event corresponding to the change in the light sensor data.
            </summary>
            <since_tizen> 3 </since_tizen>
        </member>
        <member name="M:Tizen.Sensor.LightSensor.ReadData">
            <summary>
            Read light sensor data synchronously.
            </summary>
        </member>
        <member name="T:Tizen.Sensor.LinearAccelerationSensor">
            <summary>
            The LinearAccelerationSensor class is used for registering callbacks for the linear acceleration sensor and getting the linear acceleration data.
            </summary>
            <since_tizen> 3 </since_tizen>
        </member>
        <member name="P:Tizen.Sensor.LinearAccelerationSensor.X">
            <summary>
            Gets the X component of the linear acceleration.
            </summary>
            <since_tizen> 3 </since_tizen>
            <value> X </value>
        </member>
        <member name="P:Tizen.Sensor.LinearAccelerationSensor.Y">
            <summary>
            Gets the Y component of the linear acceleration.
            </summary>
            <since_tizen> 3 </since_tizen>
            <value> Y </value>
        </member>
        <member name="P:Tizen.Sensor.LinearAccelerationSensor.Z">
            <summary>
            Gets the Z component of the linear acceleration.
            </summary>
            <since_tizen> 3 </since_tizen>
            <value> Z </value>
        </member>
        <member name="P:Tizen.Sensor.LinearAccelerationSensor.IsSupported">
            <summary>
            Returns true or false based on whether the linear acceleration sensor is supported by the device.
            </summary>
            <since_tizen> 3 </since_tizen>
            <value><c>true</c> if supported; otherwise <c>false</c>.</value>
        </member>
        <member name="P:Tizen.Sensor.LinearAccelerationSensor.Count">
            <summary>
            Returns the number of linear acceleration sensors available on the device.
            </summary>
            <since_tizen> 3 </since_tizen>
            <value> The count of linear acceleration sensors. </value>
        </member>
        <member name="M:Tizen.Sensor.LinearAccelerationSensor.#ctor(System.UInt32)">
            <summary>
            Initializes a new instance of the <see cref="T:Tizen.Sensor.LinearAccelerationSensor"/> class.
            </summary>
            <since_tizen> 3 </since_tizen>
            <feature>http://tizen.org/feature/sensor.linear_acceleration</feature>
            <exception cref="T:System.ArgumentException">Thrown when an invalid argument is used.</exception>
            <exception cref="T:System.NotSupportedException">Thrown when the sensor is not supported.</exception>
            <exception cref="T:System.InvalidOperationException">Thrown when the operation is invalid for the current state.</exception>
            <param name='index'>
            Index. Default value for this is 0. Index refers to a particular linear acceleration sensor in case of multiple sensors.
            </param>
        </member>
        <member name="E:Tizen.Sensor.LinearAccelerationSensor.DataUpdated">
            <summary>
            An event handler for storing the callback functions for the event corresponding to the change in the linear acceleration sensor data.
            </summary>
            <since_tizen> 3 </since_tizen>
        </member>
        <member name="E:Tizen.Sensor.LinearAccelerationSensor.AccuracyChanged">
            <summary>
            An event handler for accuracy changed events.
            </summary>
            <since_tizen> 3 </since_tizen>
        </member>
        <member name="M:Tizen.Sensor.LinearAccelerationSensor.ReadData">
            <summary>
            Read linear acceleration sensor data synchronously.
            </summary>
        </member>
        <member name="T:Tizen.Sensor.Magnetometer">
            <summary>
            The Magnetometer class is used for registering callbacks for the magnetometer and getting the magnetometer data.
            </summary>
            <since_tizen> 3 </since_tizen>
        </member>
        <member name="P:Tizen.Sensor.Magnetometer.X">
            <summary>
            Gets the X component of the magnetometer.
            </summary>
            <since_tizen> 3 </since_tizen>
            <value> X </value>
        </member>
        <member name="P:Tizen.Sensor.Magnetometer.Y">
            <summary>
            Gets the Y component of the magnetometer.
            </summary>
            <since_tizen> 3 </since_tizen>
            <value> Y </value>
        </member>
        <member name="P:Tizen.Sensor.Magnetometer.Z">
            <summary>
            Gets the Z component of the magnetometer.
            </summary>
            <since_tizen> 3 </since_tizen>
            <value> Z </value>
        </member>
        <member name="P:Tizen.Sensor.Magnetometer.IsSupported">
            <summary>
            Returns true or false based on whether magnetometer is supported by the device.
            </summary>
            <since_tizen> 3 </since_tizen>
            <value><c>true</c> if supported; otherwise <c>false</c>.</value>
        </member>
        <member name="P:Tizen.Sensor.Magnetometer.Count">
            <summary>
            Returns the number of magnetometers available on the device.
            </summary>
            <since_tizen> 3 </since_tizen>
            <value> The count of magnetometers. </value>
        </member>
        <member name="M:Tizen.Sensor.Magnetometer.#ctor(System.UInt32)">
            <summary>
            Initializes a new instance of the <see cref="T:Tizen.Sensor.Magnetometer"/> class.
            </summary>
            <since_tizen> 3 </since_tizen>
            <feature>http://tizen.org/feature/sensor.magnetometer</feature>
            <exception cref="T:System.ArgumentException">Thrown when an invalid argument is used.</exception>
            <exception cref="T:System.NotSupportedException">Thrown when the sensor is not supported.</exception>
            <exception cref="T:System.InvalidOperationException">Thrown when the operation is invalid for the current state.</exception>
            <param name='index'>
            Index. Default value for this is 0. Index refers to a particular magnetometer in case of multiple sensors.
            </param>
        </member>
        <member name="E:Tizen.Sensor.Magnetometer.DataUpdated">
            <summary>
            An event handler for storing the callback functions for the event corresponding to the change in the magnetometer data.
            </summary>
            <since_tizen> 3 </since_tizen>
        </member>
        <member name="E:Tizen.Sensor.Magnetometer.AccuracyChanged">
            <summary>
            An event handler for accuracy changed events.
            </summary>
            <since_tizen> 3 </since_tizen>
        </member>
        <member name="M:Tizen.Sensor.Magnetometer.ReadData">
            <summary>
            Read magnetometer data synchronously.
            </summary>
        </member>
        <member name="T:Tizen.Sensor.MagnetometerRotationVectorSensor">
            <summary>
            The MagnetometerRotationVectorSensor class is used for registering callbacks for the magnetometer rotation vector sensor and getting the magnetometer rotation vector data.
            </summary>
            <since_tizen> 3 </since_tizen>
        </member>
        <member name="P:Tizen.Sensor.MagnetometerRotationVectorSensor.X">
            <summary>
            Gets the X component of the magnetometer rotation vector.
            </summary>
            <since_tizen> 3 </since_tizen>
            <value> X </value>
        </member>
        <member name="P:Tizen.Sensor.MagnetometerRotationVectorSensor.Y">
            <summary>
            Gets the Y component of the magnetometer rotation vector.
            </summary>
            <since_tizen> 3 </since_tizen>
            <value> Y </value>
        </member>
        <member name="P:Tizen.Sensor.MagnetometerRotationVectorSensor.Z">
            <summary>
            Gets the Z component of the magnetometer rotation vector.
            </summary>
            <since_tizen> 3 </since_tizen>
            <value> Z </value>
        </member>
        <member name="P:Tizen.Sensor.MagnetometerRotationVectorSensor.W">
            <summary>
            Gets the W component of the magnetometer rotation vector.
            </summary>
            <since_tizen> 3 </since_tizen>
            <value> W </value>
        </member>
        <member name="P:Tizen.Sensor.MagnetometerRotationVectorSensor.Accuracy">
            <summary>
            Gets the accuracy of the magnetometer rotation vector data.
            </summary>
            <since_tizen> 3 </since_tizen>
            <value> Accuracy </value>
        </member>
        <member name="P:Tizen.Sensor.MagnetometerRotationVectorSensor.IsSupported">
            <summary>
            Returns true or false based on whether the magnetometer rotation vector sensor is supported by the device.
            </summary>
            <since_tizen> 3 </since_tizen>
            <value><c>true</c> if supported; otherwise <c>false</c>.</value>
        </member>
        <member name="P:Tizen.Sensor.MagnetometerRotationVectorSensor.Count">
            <summary>
            Returns the number of magnetometer rotation vector sensors available on the device.
            </summary>
            <since_tizen> 3 </since_tizen>
            <value> The count of magnetometer rotation vector sensors. </value>
        </member>
        <member name="M:Tizen.Sensor.MagnetometerRotationVectorSensor.#ctor(System.UInt32)">
            <summary>
            Initializes a new instance of the <see cref="T:Tizen.Sensor.MagnetometerRotationVectorSensor"/> class.
            </summary>
            <since_tizen> 3 </since_tizen>
            <feature>http://tizen.org/feature/sensor.geomagnetic_rotation_vector</feature>
            <exception cref="T:System.ArgumentException">Thrown when an invalid argument is used.</exception>
            <exception cref="T:System.NotSupportedException">Thrown when the sensor is not supported.</exception>
            <exception cref="T:System.InvalidOperationException">Thrown when the operation is invalid for the current state.</exception>
            <param name='index'>
            Index. Default value for this is 0. Index refers to a particular magnetometer rotation vector sensor in case of multiple sensors.
            </param>
        </member>
        <member name="E:Tizen.Sensor.MagnetometerRotationVectorSensor.DataUpdated">
            <summary>
            An event handler for storing the callback functions for the event corresponding to the change in the magnetometer rotation vector sensor data.
            </summary>
            <since_tizen> 3 </since_tizen>
        </member>
        <member name="E:Tizen.Sensor.MagnetometerRotationVectorSensor.AccuracyChanged">
            <summary>
            An event handler for accuracy changed events.
            </summary>
            <since_tizen> 3 </since_tizen>
        </member>
        <member name="M:Tizen.Sensor.MagnetometerRotationVectorSensor.ReadData">
            <summary>
            Read magnetometer rotation vector sensor data synchronously.
            </summary>
        </member>
        <member name="T:Tizen.Sensor.OrientationSensor">
            <summary>
            The OrientationSensor class is used for registering callbacks for the orientation sensor and getting the orientation data.
            </summary>
            <since_tizen> 3 </since_tizen>
        </member>
        <member name="P:Tizen.Sensor.OrientationSensor.Azimuth">
            <summary>
            Gets the azimuth component of the orientation.
            </summary>
            <since_tizen> 3 </since_tizen>
            <value> Azimuth </value>
        </member>
        <member name="P:Tizen.Sensor.OrientationSensor.Pitch">
            <summary>
            Gets the pitch component of the orientation.
            </summary>
            <since_tizen> 3 </since_tizen>
            <value> Pitch </value>
        </member>
        <member name="P:Tizen.Sensor.OrientationSensor.Roll">
            <summary>
            Gets the roll component of the orientation.
            </summary>
            <since_tizen> 3 </since_tizen>
            <value> Roll </value>
        </member>
        <member name="P:Tizen.Sensor.OrientationSensor.IsSupported">
            <summary>
            Returns true or false based on whether the orientation sensor is supported by the device.
            </summary>
            <since_tizen> 3 </since_tizen>
            <value><c>true</c> if supported; otherwise <c>false</c>.</value>
        </member>
        <member name="P:Tizen.Sensor.OrientationSensor.Count">
            <summary>
            Returns the number of orientation sensors available on the device.
            </summary>
            <since_tizen> 3 </since_tizen>
            <value> The count of orientation sensors. </value>
        </member>
        <member name="M:Tizen.Sensor.OrientationSensor.#ctor(System.UInt32)">
            <summary>
            Initializes a new instance of the <see cref="T:Tizen.Sensor.OrientationSensor"/> class.
            </summary>
            <since_tizen> 3 </since_tizen>
            <feature>http://tizen.org/feature/sensor.tiltmeter</feature>
            <exception cref="T:System.ArgumentException">Thrown when an invalid argument is used.</exception>
            <exception cref="T:System.NotSupportedException">Thrown when the sensor is not supported.</exception>
            <exception cref="T:System.InvalidOperationException">Thrown when the operation is invalid for the current state.</exception>
            <param name='index'>
            Index. Default value for this is 0. Index refers to a particular orientation sensor in case of multiple sensors.
            </param>
        </member>
        <member name="E:Tizen.Sensor.OrientationSensor.DataUpdated">
            <summary>
            An event handler for storing the callback functions for the event corresponding to the change in the orientation sensor data.
            </summary>
            <since_tizen> 3 </since_tizen>
        </member>
        <member name="E:Tizen.Sensor.OrientationSensor.AccuracyChanged">
            <summary>
            An event handler for accuracy changed events.
            </summary>
            <since_tizen> 3 </since_tizen>
        </member>
        <member name="M:Tizen.Sensor.OrientationSensor.ReadData">
            <summary>
            Read orientation sensor data synchronously.
            </summary>
        </member>
        <member name="T:Tizen.Sensor.Pedometer">
            <summary>
            The Pedometer Sensor class is used for registering callbacks for the pedometer and getting the pedometer data.
            </summary>
            <since_tizen> 3 </since_tizen>
        </member>
        <member name="P:Tizen.Sensor.Pedometer.StepCount">
            <summary>
            Gets the step count.
            </summary>
            <since_tizen> 3 </since_tizen>
            <value> The step count. </value>
        </member>
        <member name="P:Tizen.Sensor.Pedometer.WalkStepCount">
            <summary>
            Gets the walking step count.
            </summary>
            <since_tizen> 3 </since_tizen>
            <value> The walk step count. </value>
        </member>
        <member name="P:Tizen.Sensor.Pedometer.RunStepCount">
            <summary>
            Gets the running step count.
            </summary>
            <since_tizen> 3 </since_tizen>
            <value> The run step count. </value>
        </member>
        <member name="P:Tizen.Sensor.Pedometer.MovingDistance">
            <summary>
            Gets the moving distance.
            </summary>
            <since_tizen> 3 </since_tizen>
            <value> The moving distance. </value>
        </member>
        <member name="P:Tizen.Sensor.Pedometer.CalorieBurned">
            <summary>
            Gets the calorie burned.
            </summary>
            <since_tizen> 3 </since_tizen>
            <value> The calorie burned. </value>
        </member>
        <member name="P:Tizen.Sensor.Pedometer.LastSpeed">
            <summary>
            Gets the last speed.
            </summary>
            <since_tizen> 3 </since_tizen>
            <value> The last speed. </value>
        </member>
        <member name="P:Tizen.Sensor.Pedometer.LastSteppingFrequency">
            <summary>
            Gets the last stepping frequency.
            </summary>
            <since_tizen> 3 </since_tizen>
            <value> The last stepping frequency. </value>
        </member>
        <member name="P:Tizen.Sensor.Pedometer.LastStepStatus">
            <summary>
            Gets the last step status.
            </summary>
            <since_tizen> 3 </since_tizen>
            <value> The last step status. </value>
        </member>
        <member name="P:Tizen.Sensor.Pedometer.IsSupported">
            <summary>
            Returns true or false based on whether the pedometer sensor is supported by the device.
            </summary>
            <since_tizen> 3 </since_tizen>
            <value><c>true</c> if supported; otherwise <c>false</c>.</value>
        </member>
        <member name="P:Tizen.Sensor.Pedometer.Count">
            <summary>
            Returns the number of pedometer sensors available on the device.
            </summary>
            <since_tizen> 3 </since_tizen>
            <value> The count of pedometer sensors. </value>
        </member>
        <member name="M:Tizen.Sensor.Pedometer.#ctor(System.UInt32)">
            <summary>
            Initializes a new instance of the <see cref="T:Tizen.Sensor.Pedometer"/> class.
            </summary>
            <since_tizen> 3 </since_tizen>
            <privilege>http://tizen.org/privilege/healthinfo</privilege>
            <privlevel>public</privlevel>
            <feature>http://tizen.org/feature/sensor.pedometer</feature>
            <exception cref="T:System.ArgumentException">Thrown when an invalid argument is used.</exception>
            <exception cref="T:System.NotSupportedException">Thrown when the sensor is not supported.</exception>
            <exception cref="T:System.UnauthorizedAccessException">Thrown when the application has no privilege to use the sensor.</exception>
            <exception cref="T:System.InvalidOperationException">Thrown when the operation is invalid for the current state.</exception>
            <param name='index'>
            Index. Default value for this is 0. Index refers to a particular pedometer sensor in case of multiple sensors.
            </param>
        </member>
        <member name="E:Tizen.Sensor.Pedometer.DataUpdated">
            <summary>
            An event handler for storing the callback functions for the event corresponding to the change in the pedometer sensor data.
            </summary>
            <since_tizen> 3 </since_tizen>
        </member>
        <member name="M:Tizen.Sensor.Pedometer.ReadData">
            <summary>
            Read pedometer sensor data synchronously.
            </summary>
        </member>
        <member name="T:Tizen.Sensor.PickUpGestureDetector">
            <summary>
            The PickUpGestureDetector class is used for registering callbacks for the pick up activity detector and getting the pick up state.
            </summary>
            <since_tizen> 3 </since_tizen>
        </member>
        <member name="P:Tizen.Sensor.PickUpGestureDetector.PickUp">
            <summary>
            Gets the state of the pick up gesture.
            </summary>
            <since_tizen> 3 </since_tizen>
            <value> The pick up state. </value>
        </member>
        <member name="P:Tizen.Sensor.PickUpGestureDetector.IsSupported">
            <summary>
            Returns true or false based on whether the pick up gesture detector is supported by the device.
            </summary>
            <since_tizen> 3 </since_tizen>
            <value><c>true</c> if supported; otherwise <c>false</c>.</value>
        </member>
        <member name="P:Tizen.Sensor.PickUpGestureDetector.Count">
            <summary>
            Returns the number of pick up gesture detectors available on the device.
            </summary>
            <since_tizen> 3 </since_tizen>
            <value> The count of pick up gesture detectors. </value>
        </member>
        <member name="M:Tizen.Sensor.PickUpGestureDetector.#ctor(System.UInt32)">
            <summary>
            Initializes a new instance of the <see cref="T:Tizen.Sensor.PickUpGestureDetector"/> class.
            </summary>
            <since_tizen> 3 </since_tizen>
            <feature>http://tizen.org/feature/sensor.gesture_recognition</feature>
            <exception cref="T:System.ArgumentException">Thrown when an invalid argument is used.</exception>
            <exception cref="T:System.NotSupportedException">Thrown when the sensor is not supported.</exception>
            <exception cref="T:System.InvalidOperationException">Thrown when the operation is invalid for the current state.</exception>
            <param name='index'>
            Index. Default value for this is 0. Index refers to a particular pick up gesture detector in case of multiple sensors.
            </param>
        </member>
        <member name="M:Tizen.Sensor.PickUpGestureDetector.ReadData">
            <summary>
            Read pick up gesture detector data synchronously.
            </summary>
        </member>
        <member name="E:Tizen.Sensor.PickUpGestureDetector.DataUpdated">
            <summary>
            An event handler for storing the callback functions for the event corresponding to the change in the pick up gesture detector data.	
            </summary>
            <since_tizen> 3 </since_tizen>
        </member>
        <member name="T:Tizen.Sensor.PressureSensor">
            <summary>
            The PressureSensor class is used for registering callbacks for the pressure sensor and getting the pressure data.
            </summary>
            <since_tizen> 3 </since_tizen>
        </member>
        <member name="P:Tizen.Sensor.PressureSensor.Pressure">
            <summary>
            Gets the value of the pressure sensor.
            </summary>
            <since_tizen> 3 </since_tizen>
            <value> Pressure </value>
        </member>
        <member name="P:Tizen.Sensor.PressureSensor.IsSupported">
            <summary>
            Returns true or false based on whether the pressure sensor is supported by the device.
            </summary>
            <since_tizen> 3 </since_tizen>
            <value><c>true</c> if supported; otherwise <c>false</c>.</value>
        </member>
        <member name="P:Tizen.Sensor.PressureSensor.Count">
            <summary>
            Returns the number of pressure sensors available on the device.
            </summary>
            <since_tizen> 3 </since_tizen>
            <value> The count of pressure sensors. </value>
        </member>
        <member name="M:Tizen.Sensor.PressureSensor.#ctor(System.UInt32)">
            <summary>
            Initializes a new instance of the <see cref="T:Tizen.Sensor.PressureSensor"/> class.
            </summary>
            <since_tizen> 3 </since_tizen>
            <feature>http://tizen.org/feature/sensor.barometer</feature>
            <exception cref="T:System.ArgumentException">Thrown when an invalid argument is used.</exception>
            <exception cref="T:System.NotSupportedException">Thrown when the sensor is not supported.</exception>
            <exception cref="T:System.InvalidOperationException">Thrown when the operation is invalid for the current state.</exception>
            <param name='index'>
            Index. Default value for this is 0. Index refers to a particular pressure sensor in case of multiple sensors.
            </param>
        </member>
        <member name="E:Tizen.Sensor.PressureSensor.DataUpdated">
            <summary>
            An event handler for storing the callback functions for the event corresponding to the change in the pressure sensor data.
            </summary>
            <since_tizen> 3 </since_tizen>
        </member>
        <member name="M:Tizen.Sensor.PressureSensor.ReadData">
            <summary>
            Read pressure sensor data synchronously.
            </summary>
        </member>
        <member name="T:Tizen.Sensor.ProximitySensor">
            <summary>
            The ProximitySensor class is used for registering callbacks for the proximity sensor and getting the proximity data.
            </summary>
            <since_tizen> 3 </since_tizen>
        </member>
        <member name="P:Tizen.Sensor.ProximitySensor.Proximity">
            <summary>
            Gets the proximity state.
            </summary>
            <since_tizen> 3 </since_tizen>
            <value> The proximity state. </value>
        </member>
        <member name="P:Tizen.Sensor.ProximitySensor.IsSupported">
            <summary>
            Returns true or false based on whether the proximity sensor is supported by the device.
            </summary>
            <since_tizen> 3 </since_tizen>
            <value><c>true</c> if supported; otherwise <c>false</c>.</value>
        </member>
        <member name="P:Tizen.Sensor.ProximitySensor.Count">
            <summary>
            Returns the number of proximity sensors available on the device.
            </summary>
            <since_tizen> 3 </since_tizen>
            <value> The count of proximity sensors. </value>
        </member>
        <member name="M:Tizen.Sensor.ProximitySensor.#ctor(System.UInt32)">
            <summary>
            Initializes a new instance of the <see cref="T:Tizen.Sensor.ProximitySensor"/> class.
            </summary>
            <since_tizen> 3 </since_tizen>
            <feature>http://tizen.org/feature/sensor.proximity</feature>
            <exception cref="T:System.ArgumentException">Thrown when an invalid argument is used.</exception>
            <exception cref="T:System.NotSupportedException">Thrown when the sensor is not supported.</exception>
            <exception cref="T:System.InvalidOperationException">Thrown when the operation is invalid for the current state.</exception>
            <param name='index'>
            Index. Default value for this is 0. Index refers to a particular proximity sensor in case of multiple sensors.
            </param>
        </member>
        <member name="E:Tizen.Sensor.ProximitySensor.DataUpdated">
            <summary>
            An event handler for storing the callback functions for the event corresponding to the change in the proximity sensor data.
            </summary>
            <since_tizen> 3 </since_tizen>
        </member>
        <member name="M:Tizen.Sensor.ProximitySensor.ReadData">
            <summary>
            Read proximity sensor data synchronously.
            </summary>
        </member>
        <member name="T:Tizen.Sensor.RotationVectorSensor">
            <summary>
            The RotationVectorSensor class is used for registering callbacks for the rotation vector sensor and getting the rotation vector data.
            </summary>
            <since_tizen> 3 </since_tizen>
        </member>
        <member name="P:Tizen.Sensor.RotationVectorSensor.X">
            <summary>
            Gets the X component of the rotation vector.
            </summary>
            <since_tizen> 3 </since_tizen>
            <value> X </value>
        </member>
        <member name="P:Tizen.Sensor.RotationVectorSensor.Y">
            <summary>
            Gets the Y component of the rotation vector.
            </summary>
            <since_tizen> 3 </since_tizen>
            <value> Y </value>
        </member>
        <member name="P:Tizen.Sensor.RotationVectorSensor.Z">
            <summary>
            Gets the Z component of the rotation vector.
            </summary>
            <since_tizen> 3 </since_tizen>
            <value> Z </value>
        </member>
        <member name="P:Tizen.Sensor.RotationVectorSensor.W">
            <summary>
            Gets the W component of the rotation vector.
            </summary>
            <since_tizen> 3 </since_tizen>
            <value> W </value>
        </member>
        <member name="P:Tizen.Sensor.RotationVectorSensor.Accuracy">
            <summary>
            Gets the accuracy of the rotation vector data.
            </summary>
            <since_tizen> 3 </since_tizen>
            <value> Accuracy </value>
        </member>
        <member name="P:Tizen.Sensor.RotationVectorSensor.IsSupported">
            <summary>
            Returns true or false based on whether the rotation vector sensor is supported by the device.
            </summary>
            <since_tizen> 3 </since_tizen>
            <value><c>true</c> if supported; otherwise <c>false</c>.</value>
        </member>
        <member name="P:Tizen.Sensor.RotationVectorSensor.Count">
            <summary>
            Returns the number of rotation vector sensors available on the device.
            </summary>
            <since_tizen> 3 </since_tizen>
            <value> The count of rotation vector sensors. </value>
        </member>
        <member name="M:Tizen.Sensor.RotationVectorSensor.#ctor(System.UInt32)">
            <summary>
            Initializes a new instance of the <see cref="T:Tizen.Sensor.RotationVectorSensor"/> class.
            </summary>
            <since_tizen> 3 </since_tizen>
            <feature>http://tizen.org/feature/sensor.rotation_vector</feature>
            <exception cref="T:System.ArgumentException">Thrown when an invalid argument is used.</exception>
            <exception cref="T:System.NotSupportedException">Thrown when the sensor is not supported.</exception>
            <exception cref="T:System.InvalidOperationException">Thrown when the operation is invalid for the current state.</exception>
            <param name='index'>
            Index. Default value for this is 0. Index refers to a particular rotation vector sensor in case of multiple sensors.
            </param>
        </member>
        <member name="E:Tizen.Sensor.RotationVectorSensor.DataUpdated">
            <summary>
            An event handler for storing the callback functions for the event corresponding to the change in the rotation vector sensor data.
            </summary>
            <since_tizen> 3 </since_tizen>
        </member>
        <member name="E:Tizen.Sensor.RotationVectorSensor.AccuracyChanged">
            <summary>
            An event handler for accuracy changed events.
            </summary>
            <since_tizen> 3 </since_tizen>
        </member>
        <member name="M:Tizen.Sensor.RotationVectorSensor.ReadData">
            <summary>
            Read rotation vector sensor data synchronously.
            </summary>
        </member>
        <member name="T:Tizen.Sensor.RunningActivityDetector">
            <summary>
            The RunningActivityDetector class is used for registering callbacks for running the activity detector and getting the running state.
            </summary>
            <since_tizen> 3 </since_tizen>
        </member>
        <member name="P:Tizen.Sensor.RunningActivityDetector.Running">
            <summary>
            Gets the state of the running activity detector.
            </summary>
            <since_tizen> 3 </since_tizen>
            <value> The running state. </value>
        </member>
        <member name="P:Tizen.Sensor.RunningActivityDetector.IsSupported">
            <summary>
            Returns true or false based on whether the running activity detector is supported by the device.
            </summary>
            <since_tizen> 3 </since_tizen>
            <value><c>true</c> if supported; otherwise <c>false</c>.</value>
        </member>
        <member name="P:Tizen.Sensor.RunningActivityDetector.Count">
            <summary>
            Returns the number of running activity detectors available on the device.
            </summary>
            <since_tizen> 3 </since_tizen>
            <value> The count of running activity detectors. </value>
        </member>
        <member name="M:Tizen.Sensor.RunningActivityDetector.#ctor(System.UInt32)">
            <summary>
            Initializes a new instance of the <see cref="T:Tizen.Sensor.RunningActivityDetector"/> class.
            </summary>
            <since_tizen> 3 </since_tizen>
            <feature>http://tizen.org/feature/sensor.activity_recognition</feature>
            <exception cref="T:System.ArgumentException">Thrown when an invalid argument is used.</exception>
            <exception cref="T:System.NotSupportedException">Thrown when the sensor is not supported.</exception>
            <exception cref="T:System.InvalidOperationException">Thrown when the operation is invalid for the current state.</exception>
            <param name='index'>
            Index. Default value for this is 0. Index refers to a particular running activity detector in case of multiple sensors.
            </param>
        </member>
        <member name="M:Tizen.Sensor.RunningActivityDetector.ReadData">
            <summary>
            Read running activity detector data synchronously.
            </summary>
        </member>
        <member name="E:Tizen.Sensor.RunningActivityDetector.DataUpdated">
            <summary>
            An event handler for storing the callback functions for the event corresponding to the change in running the activity detector data.
            </summary>
            <since_tizen> 3 </since_tizen>
        </member>
        <member name="T:Tizen.Sensor.SleepMonitor">
            <summary>
            The SleepMonitor class is used for registering callbacks for the sleep monitor and getting the sleep data.
            </summary>
            <since_tizen> 3 </since_tizen>
        </member>
        <member name="P:Tizen.Sensor.SleepMonitor.SleepState">
            <summary>
            Gets the value of the sleep state.
            </summary>
            <since_tizen> 3 </since_tizen>
            <value> The sleep state. </value>
        </member>
        <member name="P:Tizen.Sensor.SleepMonitor.IsSupported">
            <summary>
            Returns true or false based on whether the sleep monitor is supported by the device.
            </summary>
            <since_tizen> 3 </since_tizen>
            <value><c>true</c> if supported; otherwise <c>false</c>.</value>
        </member>
        <member name="P:Tizen.Sensor.SleepMonitor.Count">
            <summary>
            Returns the number of sleep monitors available on the device.
            </summary>
            <since_tizen> 3 </since_tizen>
            <value> The count of sleep monitors. </value>
        </member>
        <member name="M:Tizen.Sensor.SleepMonitor.#ctor(System.UInt32)">
            <summary>
            Initializes a new instance of the <see cref="T:Tizen.Sensor.SleepMonitor"/> class.
            </summary>
            <since_tizen> 3 </since_tizen>
            <privilege>http://tizen.org/privilege/healthinfo</privilege>
            <privlevel>public</privlevel>
            <feature>http://tizen.org/feature/sensor.sleep_monitor</feature>
            <exception cref="T:System.ArgumentException">Thrown when an invalid argument is used.</exception>
            <exception cref="T:System.NotSupportedException">Thrown when the sensor is not supported.</exception>
            <exception cref="T:System.UnauthorizedAccessException">Thrown when the application has no privilege to use the sensor.</exception>
            <exception cref="T:System.InvalidOperationException">Thrown when the operation is invalid for the current state.</exception>
            <param name='index'>
            Index. Default value for this is 0. Index refers to a particular sleep monitor in case of multiple sensors.
            </param>
        </member>
        <member name="E:Tizen.Sensor.SleepMonitor.DataUpdated">
            <summary>
            An event handler for storing the callback functions for the event corresponding to the change in the sleep monitor data.
            </summary>
            <since_tizen> 3 </since_tizen>
        </member>
        <member name="M:Tizen.Sensor.SleepMonitor.ReadData">
            <summary>
            Read sleep monitor data synchronously.
            </summary>
        </member>
        <member name="T:Tizen.Sensor.StationaryActivityDetector">
            <summary>
            The StationaryActivityDetector class is used for registering callbacks for the stationary activity detector and getting the stationary state.
            </summary>
            <since_tizen> 3 </since_tizen>
        </member>
        <member name="P:Tizen.Sensor.StationaryActivityDetector.Stationary">
            <summary>
            Gets the state of the stationary activity detector.
            </summary>
            <since_tizen> 3 </since_tizen>
            <value> The stationary state. </value>
        </member>
        <member name="P:Tizen.Sensor.StationaryActivityDetector.IsSupported">
            <summary>
            Returns true or false based on whether the stationary activity detector is supported by the device.
            </summary>
            <since_tizen> 3 </since_tizen>
            <value><c>true</c> if supported; otherwise <c>false</c>.</value>
        </member>
        <member name="P:Tizen.Sensor.StationaryActivityDetector.Count">
            <summary>
            Returns the number of stationary activity detectors available on the device.
            </summary>
            <since_tizen> 3 </since_tizen>
            <value> The count of stationary activity detectors. </value>
        </member>
        <member name="M:Tizen.Sensor.StationaryActivityDetector.#ctor(System.UInt32)">
            <summary>
            Initializes a new instance of the <see cref="T:Tizen.Sensor.StationaryActivityDetector"/> class.
            </summary>
            <since_tizen> 3 </since_tizen>
            <feature>http://tizen.org/feature/sensor.activity_recognition</feature>
            <exception cref="T:System.ArgumentException">Thrown when an invalid argument is used.</exception>
            <exception cref="T:System.NotSupportedException">Thrown when the sensor is not supported.</exception>
            <exception cref="T:System.InvalidOperationException">Thrown when the operation is invalid for the current state.</exception>
            <param name='index'>
            Index. Default value for this is 0. Index refers to a particular stationary activity detector in case of multiple sensors.
            </param>
        </member>
        <member name="M:Tizen.Sensor.StationaryActivityDetector.ReadData">
            <summary>
            Read stationary activity detector data synchronously.
            </summary>
        </member>
        <member name="E:Tizen.Sensor.StationaryActivityDetector.DataUpdated">
            <summary>
            An event handler for storing the callback functions for the event corresponding to the change in the stationary activity detector data.
            </summary>
            <since_tizen> 3 </since_tizen>
        </member>
        <member name="T:Tizen.Sensor.TemperatureSensor">
            <summary>
            The TemperatureSensor class is used for registering callbacks for the temperature sensor and getting the temperature data.
            </summary>
            <since_tizen> 3 </since_tizen>
        </member>
        <member name="P:Tizen.Sensor.TemperatureSensor.Temperature">
            <summary>
            Gets the value of the temperature sensor.
            </summary>
            <since_tizen> 3 </since_tizen>
            <value> Temperature (Celsius) </value>
        </member>
        <member name="P:Tizen.Sensor.TemperatureSensor.IsSupported">
            <summary>
            Returns true or false based on whether the temperature sensor is supported by the device.
            </summary>
            <since_tizen> 3 </since_tizen>
            <value><c>true</c> if supported; otherwise <c>false</c>.</value>
        </member>
        <member name="P:Tizen.Sensor.TemperatureSensor.Count">
            <summary>
            Returns the number of temperature sensors available on the device.
            </summary>
            <since_tizen> 3 </since_tizen>
            <value> The count of temperature sensors. </value>
        </member>
        <member name="M:Tizen.Sensor.TemperatureSensor.#ctor(System.UInt32)">
            <summary>
            Initializes a new instance of the <see cref="T:Tizen.Sensor.TemperatureSensor"/> class.
            </summary>
            <since_tizen> 3 </since_tizen>
            <feature>http://tizen.org/feature/sensor.temperature</feature>
            <exception cref="T:System.ArgumentException">Thrown when an invalid argument is used.</exception>
            <exception cref="T:System.NotSupportedException">Thrown when the sensor is not supported.</exception>
            <exception cref="T:System.InvalidOperationException">Thrown when the operation is invalid for the current state.</exception>
            <param name='index'>
            Index. Default value for this is 0. Index refers to a particular temperature sensor in case of multiple sensors.
            </param>
        </member>
        <member name="E:Tizen.Sensor.TemperatureSensor.DataUpdated">
            <summary>
            An event handler for storing the callback functions for the event corresponding to the change in the temperature sensor data.
            </summary>
            <since_tizen> 3 </since_tizen>
        </member>
        <member name="M:Tizen.Sensor.TemperatureSensor.ReadData">
            <summary>
            Read temperature sensor data synchronously.
            </summary>
        </member>
        <member name="T:Tizen.Sensor.UltravioletSensor">
            <summary>
            The UltravioletSensor class is used for registering callbacks for the ultraviolet sensor and getting the ultraviolet data.
            </summary>
            <since_tizen> 3 </since_tizen>
        </member>
        <member name="P:Tizen.Sensor.UltravioletSensor.UltravioletIndex">
            <summary>
            Gets the value of the ultraviolet sensor.
            </summary>
            <since_tizen> 3 </since_tizen>
            <value> The ultraviolet index. </value>
        </member>
        <member name="P:Tizen.Sensor.UltravioletSensor.IsSupported">
            <summary>
            Returns true or false based on whether the ultraviolet sensor is supported by the device.
            </summary>
            <since_tizen> 3 </since_tizen>
            <value><c>true</c> if supported; otherwise <c>false</c>.</value>
        </member>
        <member name="P:Tizen.Sensor.UltravioletSensor.Count">
            <summary>
            Returns the number of ultraviolet sensors available on the device.
            </summary>
            <since_tizen> 3 </since_tizen>
            <value> The count of ultraviolet sensors. </value>
        </member>
        <member name="M:Tizen.Sensor.UltravioletSensor.#ctor(System.UInt32)">
            <summary>
            Initializes a new instance of the <see cref="T:Tizen.Sensor.UltravioletSensor"/> class.
            </summary>
            <since_tizen> 3 </since_tizen>
            <feature>http://tizen.org/feature/sensor.ultraviolet</feature>
            <exception cref="T:System.ArgumentException">Thrown when an invalid argument is used.</exception>
            <exception cref="T:System.NotSupportedException">Thrown when the sensor is not supported.</exception>
            <exception cref="T:System.InvalidOperationException">Thrown when the operation is invalid for the current state.</exception>
            <param name='index'>
            Index. Default value for this is 0. Index refers to a particular ultraviolet sensor in case of multiple sensors.
            </param>
        </member>
        <member name="E:Tizen.Sensor.UltravioletSensor.DataUpdated">
            <summary>
            An event handler for storing the callback functions for the event corresponding to the change in the ultraviolet sensor data.
            </summary>
            <since_tizen> 3 </since_tizen>
        </member>
        <member name="M:Tizen.Sensor.UltravioletSensor.ReadData">
            <summary>
            Read ultraviolet sensor data synchronously.
            </summary>
        </member>
        <member name="T:Tizen.Sensor.UncalibratedGyroscope">
            <summary>
            The UncalibratedGyroscope sensor class is used for registering callbacks for the uncalibrated gyroscope and getting the uncalibrated gyroscope data.
            </summary>
            <since_tizen> 3 </since_tizen>
        </member>
        <member name="P:Tizen.Sensor.UncalibratedGyroscope.X">
            <summary>
            Gets the X component of the acceleration.
            </summary>
            <since_tizen> 3 </since_tizen>
            <value> X </value>
        </member>
        <member name="P:Tizen.Sensor.UncalibratedGyroscope.Y">
            <summary>
            Gets the Y component of the acceleration.
            </summary>
            <since_tizen> 3 </since_tizen>
            <value> Y </value>
        </member>
        <member name="P:Tizen.Sensor.UncalibratedGyroscope.Z">
            <summary>
            Gets the Z component of the acceleration.
            </summary>
            <since_tizen> 3 </since_tizen>
            <value> Z </value>
        </member>
        <member name="P:Tizen.Sensor.UncalibratedGyroscope.BiasX">
            <summary>
            Gets the BiasX component of the uncalibrated gyroscope data.
            </summary>
            <since_tizen> 3 </since_tizen>
            <value> The X bias. </value>
        </member>
        <member name="P:Tizen.Sensor.UncalibratedGyroscope.BiasY">
            <summary>
            Gets the BiasY component of the uncalibrated gyroscope data.
            </summary>
            <since_tizen> 3 </since_tizen>
            <value> The Y bias. </value>
        </member>
        <member name="P:Tizen.Sensor.UncalibratedGyroscope.BiasZ">
            <summary>
            Gets the BiasZ component of the uncalibrated gyroscope data.
            </summary>
            <since_tizen> 3 </since_tizen>
            <value> The Z bias. </value>
        </member>
        <member name="P:Tizen.Sensor.UncalibratedGyroscope.IsSupported">
            <summary>
            Returns true or false based on whether the uncalibrated gyroscope sensor is supported by the device.
            </summary>
            <since_tizen> 3 </since_tizen>
            <value><c>true</c> if supported; otherwise <c>false</c>.</value>
        </member>
        <member name="P:Tizen.Sensor.UncalibratedGyroscope.Count">
            <summary>
            Returns the number of the uncalibrated gyroscope sensors available on the device.
            </summary>
            <since_tizen> 3 </since_tizen>
            <value> The count of the uncalibrated gyroscope sensors. </value>
        </member>
        <member name="M:Tizen.Sensor.UncalibratedGyroscope.#ctor(System.UInt32)">
            <summary>
            Initializes a new instance of the <see cref="T:Tizen.Sensor.UncalibratedGyroscope"/> class.
            </summary>
            <since_tizen> 3 </since_tizen>
            <feature>http://tizen.org/feature/sensor.gyroscope.uncalibrated</feature>
            <exception cref="T:System.ArgumentException">Thrown when an invalid argument is used.</exception>
            <exception cref="T:System.NotSupportedException">Thrown when the sensor is not supported.</exception>
            <exception cref="T:System.InvalidOperationException">Thrown when the operation is invalid for the current state.</exception>
            <param name='index'>
            Index. Default value for this is 0. Index refers to a particular uncalibrated gyroscope sensor in case of multiple sensors.
            </param>
        </member>
        <member name="E:Tizen.Sensor.UncalibratedGyroscope.DataUpdated">
            <summary>
            An event handler for storing the callback functions for the event corresponding to the change in the uncalibrated gyroscope sensor data.
            </summary>
            <since_tizen> 3 </since_tizen>
        </member>
        <member name="M:Tizen.Sensor.UncalibratedGyroscope.ReadData">
            <summary>
            Read uncalibrated gyroscope data synchronously.
            </summary>
        </member>
        <member name="T:Tizen.Sensor.UncalibratedMagnetometer">
            <summary>
            The UncalibratedMagnetometer sensor class is used for registering callbacks for the uncalibrated magnetometer and getting the uncalibrated magnetometer data.
            </summary>
            <since_tizen> 3 </since_tizen>
        </member>
        <member name="P:Tizen.Sensor.UncalibratedMagnetometer.X">
            <summary>
            Gets the X component of the acceleration.
            </summary>
            <since_tizen> 3 </since_tizen>
            <value> X </value>
        </member>
        <member name="P:Tizen.Sensor.UncalibratedMagnetometer.Y">
            <summary>
            Gets the Y component of the acceleration.
            </summary>
            <since_tizen> 3 </since_tizen>
            <value> Y </value>
        </member>
        <member name="P:Tizen.Sensor.UncalibratedMagnetometer.Z">
            <summary>
            Gets the Z component of the acceleration.
            </summary>
            <since_tizen> 3 </since_tizen>
            <value> Z </value>
        </member>
        <member name="P:Tizen.Sensor.UncalibratedMagnetometer.BiasX">
            <summary>
            Gets the BiasX component of the uncalibrated magnetometer data.
            </summary>
            <since_tizen> 3 </since_tizen>
            <value> The X bias. </value>
        </member>
        <member name="P:Tizen.Sensor.UncalibratedMagnetometer.BiasY">
            <summary>
            Gets the BiasY component of the uncalibrated magnetometer data.
            </summary>
            <since_tizen> 3 </since_tizen>
            <value> The Y bias. </value>
        </member>
        <member name="P:Tizen.Sensor.UncalibratedMagnetometer.BiasZ">
            <summary>
            Gets the BiasZ component of the uncalibrated magnetometer data.
            </summary>
            <since_tizen> 3 </since_tizen>
            <value> The Z bias. </value>
        </member>
        <member name="P:Tizen.Sensor.UncalibratedMagnetometer.IsSupported">
            <summary>
            Returns true or false based on whether the uncalibrated magnetometer sensor is supported by the device.
            </summary>
            <since_tizen> 3 </since_tizen>
            <value><c>true</c> if supported; otherwise <c>false</c>.</value>
        </member>
        <member name="P:Tizen.Sensor.UncalibratedMagnetometer.Count">
            <summary>
            Returns the number of uncalibrated magnetometer sensors available on the device.
            </summary>
            <since_tizen> 3 </since_tizen>
            <value> The count of uncalibrated magnetometer sensors. </value>
        </member>
        <member name="M:Tizen.Sensor.UncalibratedMagnetometer.#ctor(System.UInt32)">
            <summary>
            Initializes a new instance of the <see cref="T:Tizen.Sensor.UncalibratedMagnetometer"/> class.
            </summary>
            <since_tizen> 3 </since_tizen>
            <feature>http://tizen.org/feature/sensor.magnetometer.uncalibrated</feature>
            <exception cref="T:System.ArgumentException">Thrown when an invalid argument is used.</exception>
            <exception cref="T:System.NotSupportedException">Thrown when the sensor is not supported.</exception>
            <exception cref="T:System.InvalidOperationException">Thrown when the operation is invalid for the current state.</exception>
            <param name='index'>
            Index. Default value for this is 0. Index refers to a particular uncalibrated magnetometer sensor in case of multiple sensors.
            </param>
        </member>
        <member name="E:Tizen.Sensor.UncalibratedMagnetometer.DataUpdated">
            <summary>
            An event handler for storing the callback functions for the event corresponding to the change in the uncalibrated magnetometer sensor data.
            </summary>
            <since_tizen> 3 </since_tizen>
        </member>
        <member name="E:Tizen.Sensor.UncalibratedMagnetometer.AccuracyChanged">
            <summary>
            An event handler for accuracy changed events.
            </summary>
            <since_tizen> 3 </since_tizen>
        </member>
        <member name="M:Tizen.Sensor.UncalibratedMagnetometer.ReadData">
            <summary>
            Read uncalibrated magnetometer data synchronously.
            </summary>
        </member>
        <member name="T:Tizen.Sensor.WalkingActivityDetector">
            <summary>
            The WalkingActivityDetector class is used for registering callbacks for the walking activity detector and getting the walking state.
            </summary>
            <since_tizen> 3 </since_tizen>
        </member>
        <member name="P:Tizen.Sensor.WalkingActivityDetector.Walking">
            <summary>
            Gets the state of the walking activity detector.
            </summary>
            <since_tizen> 3 </since_tizen>
            <value> The walking state. </value>
        </member>
        <member name="P:Tizen.Sensor.WalkingActivityDetector.IsSupported">
            <summary>
            Returns true or false based on whether the walking activity detector is supported by the device.
            </summary>
            <since_tizen> 3 </since_tizen>
            <value><c>true</c> if supported; otherwise <c>false</c>.</value>
        </member>
        <member name="P:Tizen.Sensor.WalkingActivityDetector.Count">
            <summary>
            Returns the number of walking activity detectors available on the device.
            </summary>
            <since_tizen> 3 </since_tizen>
            <value> The count of walking activity detectors. </value>
        </member>
        <member name="M:Tizen.Sensor.WalkingActivityDetector.#ctor(System.UInt32)">
            <summary>
            Initializes a new instance of the <see cref="T:Tizen.Sensor.WalkingActivityDetector"/> class.
            </summary>
            <since_tizen> 3 </since_tizen>
            <feature>http://tizen.org/feature/sensor.activity_recognition</feature>
            <exception cref="T:System.ArgumentException">Thrown when an invalid argument is used.</exception>
            <exception cref="T:System.NotSupportedException">Thrown when the sensor is not supported.</exception>
            <exception cref="T:System.InvalidOperationException">Thrown when the operation is invalid for the current state.</exception>
            <param name='index'>
            Index. Default value for this is 0. Index refers to a particular walking activity detector in case of multiple sensors.
            </param>
        </member>
        <member name="M:Tizen.Sensor.WalkingActivityDetector.ReadData">
            <summary>
            Read walking activity detector data synchronously.
            </summary>
        </member>
        <member name="E:Tizen.Sensor.WalkingActivityDetector.DataUpdated">
            <summary>
            An event handler for storing the callback functions for the event corresponding to the change in the walking activity gesture detector data.
            </summary>
            <since_tizen> 3 </since_tizen>
        </member>
        <member name="T:Tizen.Sensor.WristUpGestureDetector">
            <summary>
            The WristUpGestureDetector class is used for registering callbacks for the wrist up gesture detector and getting the wrist up state.
            </summary>
            <since_tizen> 3 </since_tizen>
        </member>
        <member name="P:Tizen.Sensor.WristUpGestureDetector.WristUp">
            <summary>
            Gets the state of the wrist up gesture.
            </summary>
            <since_tizen> 3 </since_tizen>
            <value> The wrist up state. </value>
        </member>
        <member name="P:Tizen.Sensor.WristUpGestureDetector.IsSupported">
            <summary>
            Returns true or false based on whether the wrist up gesture detector is supported by the device.
            </summary>
            <since_tizen> 3 </since_tizen>
            <value><c>true</c> if supported; otherwise <c>false</c>.</value>
        </member>
        <member name="P:Tizen.Sensor.WristUpGestureDetector.Count">
            <summary>
            Returns the number of wrist up gesture detectors available on the device.
            </summary>
            <since_tizen> 3 </since_tizen>
            <value> The count of wrist up gesture detectors. </value>
        </member>
        <member name="M:Tizen.Sensor.WristUpGestureDetector.#ctor(System.UInt32)">
            <summary>
            Initializes a new instance of the <see cref="T:Tizen.Sensor.WristUpGestureDetector"/> class.
            </summary>
            <since_tizen> 3 </since_tizen>
            <feature>http://tizen.org/feature/sensor.wrist_up</feature>
            <exception cref="T:System.ArgumentException">Thrown when an invalid argument is used.</exception>
            <exception cref="T:System.NotSupportedException">Thrown when the sensor is not supported.</exception>
            <exception cref="T:System.InvalidOperationException">Thrown when the operation is invalid for the current state.</exception>
            <param name='index'>
            Index. Default value for this is 0. Index refers to a particular wrist up gesture detector in case of multiple sensors.
            </param>
        </member>
        <member name="M:Tizen.Sensor.WristUpGestureDetector.ReadData">
            <summary>
            Read wrist up gesture detector data synchronously.
            </summary>
        </member>
        <member name="E:Tizen.Sensor.WristUpGestureDetector.DataUpdated">
            <summary>
            An event handler for storing the callback functions for the event corresponding to the change in the wrist up gesture detector data.
            </summary>
            <since_tizen> 3 </since_tizen>
        </member>
        <member name="T:Tizen.Sensor.Sensor">
            <summary>
            The Sensor class is used for storing the hardware information about a particular sensor.
            </summary>
            <since_tizen> 3 </since_tizen>
        </member>
        <member name="M:Tizen.Sensor.Sensor.ReadData">
            <summary>
            Read a sensor data synchronously.
            </summary>
        </member>
        <member name="M:Tizen.Sensor.Sensor.Finalize">
            <summary>
            Destroy the Sensor object.
            </summary>
        </member>
        <member name="P:Tizen.Sensor.Sensor.Name">
            <summary>
            Property: Gets the name of the sensor.
            </summary>
            <since_tizen> 3 </since_tizen>
            <value> The name of the sensor. </value>
        </member>
        <member name="P:Tizen.Sensor.Sensor.Vendor">
            <summary>
            Property: Gets the vendor.
            </summary>
            <since_tizen> 3 </since_tizen>
            <value> The vendor name of the sensor. </value>
        </member>
        <member name="P:Tizen.Sensor.Sensor.MinValue">
            <summary>
            Property: Gets the minimum value of the range of the sensor data.
            </summary>
            <since_tizen> 3 </since_tizen>
            <value> The lower bound of the range of the sensor reading. </value>
        </member>
        <member name="P:Tizen.Sensor.Sensor.MaxValue">
            <summary>
            Property: Gets the maximum value of the range of the sensor data.
            </summary>
            <since_tizen> 3 </since_tizen>
            <value> The upper bound of the range of the sensor reading. </value>
        </member>
        <member name="P:Tizen.Sensor.Sensor.Resolution">
            <summary>
            Property: Gets the resolution.
            </summary>
            <since_tizen> 3 </since_tizen>
            <value> The resolution. </value>
        </member>
        <member name="P:Tizen.Sensor.Sensor.MinInterval">
            <summary>
            Property: Gets the minimum interval.
            </summary>
            <since_tizen> 3 </since_tizen>
            <value> The minimum update interval. </value>
        </member>
        <member name="P:Tizen.Sensor.Sensor.FifoCount">
            <summary>
            Property: Gets the FIFO count.
            </summary>
            <since_tizen> 3 </since_tizen>
            <value> The size of the hardware FIFO. </value>
        </member>
        <member name="P:Tizen.Sensor.Sensor.MaxBatchCount">
            <summary>
            Property: Gets the maximum batch count.
            </summary>
            <since_tizen> 3 </since_tizen>
            <value> The maximum batch count. </value>
        </member>
        <member name="P:Tizen.Sensor.Sensor.Interval">
            <summary>
            Sets the interval of the sensor for the sensor data event.
            Callbacks will be called at the frequency of this interval.
            </summary>
            <since_tizen> 3 </since_tizen>
            <exception cref="T:System.InvalidOperationException">Thrown when the operation is invalid for the current state.</exception>
            <value> The interval of the sensor. </value>
        </member>
        <member name="P:Tizen.Sensor.Sensor.MaxBatchLatency">
            <summary>
            Sets the maximum batch latency for the sensor corresponding to the sensor data event.
            </summary>
            <since_tizen> 3 </since_tizen>
            <exception cref="T:System.InvalidOperationException">Thrown when the operation is invalid for the current state.</exception>
            <value> The maximum batch latency. </value>
        </member>
        <member name="P:Tizen.Sensor.Sensor.PausePolicy">
            <summary>
            Sets the pause policy of the sensor.
            </summary>
            <since_tizen> 3 </since_tizen>
            <value>The pause policy.</value>
            <exception cref="T:System.InvalidOperationException">Thrown when the operation is invalid for the current state.</exception>
            <value> The pause policy. </value>
        </member>
        <member name="P:Tizen.Sensor.Sensor.TimeSpan">
            <summary>
            Gets or sets the time span.
            </summary>
            <since_tizen> 3 </since_tizen>
            <value> The time span. </value>
        </member>
        <member name="P:Tizen.Sensor.Sensor.Timestamp">
            <summary>
            Gets or sets the timestamp.
            </summary>
            <since_tizen> 8 </since_tizen>
            <value> Timestamp. </value>
        </member>
        <member name="P:Tizen.Sensor.Sensor.IsSensing">
            <summary>
            Indicates whether this sensor is sensing.
            </summary>
            <since_tizen> 3 </since_tizen>
            <value><c>true</c> if this sensor is sensing; otherwise <c>false</c>.</value>
        </member>
        <member name="M:Tizen.Sensor.Sensor.Start">
            <summary>
            Starts the sensor.
            After this, event handlers will start receiving events.
            </summary>
            <since_tizen> 3 </since_tizen>
            <exception cref="T:System.InvalidOperationException">Thrown when the operation is invalid for the current state.</exception>
        </member>
        <member name="M:Tizen.Sensor.Sensor.Stop">
            <summary>
            Stops the sensor.
            After this, event handlers will stop receiving events.
            </summary>
            <since_tizen> 3 </since_tizen>
            <exception cref="T:System.InvalidOperationException">Thrown when the operation is invalid for the current state.</exception>
        </member>
        <member name="M:Tizen.Sensor.Sensor.Dispose">
            <summary>
            Destroy the current object.
            </summary>
            <since_tizen> 3 </since_tizen>
        </member>
        <member name="M:Tizen.Sensor.Sensor.Dispose(System.Boolean)">
            <summary>
            Releases all resources currently used by this instance.
            </summary>
            <param name="disposing">
            true if managed resources should be disposed
            otherwise, false.
            </param>
            <since_tizen> 3 </since_tizen>
        </member>
        <member name="T:Tizen.Sensor.SensorType">
            <summary>
            The SensorType Enum defintion for all sensor types.
            </summary>
        </member>
        <member name="F:Tizen.Sensor.SensorType.All">
            <summary>
            All sensors. This can be used to retrieve the Sensor class object for all available sensors.
            </summary>
        </member>
        <member name="F:Tizen.Sensor.SensorType.Accelerometer">
            <summary>
            Accelerometer sensor.
            </summary>
        </member>
        <member name="F:Tizen.Sensor.SensorType.GravitySensor">
            <summary>
            Gravity sensor.
            </summary>
        </member>
        <member name="F:Tizen.Sensor.SensorType.LinearAccelerationSensor">
            <summary>
            Linear Acceleration sensor.
            </summary>
        </member>
        <member name="F:Tizen.Sensor.SensorType.Magnetometer">
            <summary>
            Magnetometer sensor.
            </summary>
        </member>
        <member name="F:Tizen.Sensor.SensorType.RotationVectorSensor">
            <summary>
            Rotation Vector sensor.
            </summary>
        </member>
        <member name="F:Tizen.Sensor.SensorType.OrientationSensor">
            <summary>
            Orientation sensor.
            </summary>
        </member>
        <member name="F:Tizen.Sensor.SensorType.Gyroscope">
            <summary>
            The Gyroscope sensor.
            </summary>
        </member>
        <member name="F:Tizen.Sensor.SensorType.LightSensor">
            <summary>
            Light sensor.
            </summary>
        </member>
        <member name="F:Tizen.Sensor.SensorType.ProximitySensor">
            <summary>
            Proximity sensor.
            </summary>
        </member>
        <member name="F:Tizen.Sensor.SensorType.PressureSensor">
            <summary>
            Pressure sensor.
            </summary>
        </member>
        <member name="F:Tizen.Sensor.SensorType.UltravioletSensor">
            <summary>
            Ultraviolet sensor.
            </summary>
        </member>
        <member name="F:Tizen.Sensor.SensorType.TemperatureSensor">
            <summary>
            Temperature sensor.
            </summary>
        </member>
        <member name="F:Tizen.Sensor.SensorType.HumiditySensor">
            <summary>
            Humidity sensor.
            </summary>
        </member>
        <member name="F:Tizen.Sensor.SensorType.HeartRateMonitor">
            <summary>
            Hear rate monitor sensor.
            </summary>
        </member>
        <member name="F:Tizen.Sensor.SensorType.UncalibratedGyroscope">
            <summary>
            The Uncalibrated Gyroscope sensor.
            </summary>
        </member>
        <member name="F:Tizen.Sensor.SensorType.UncalibratedMagnetometer">
            <summary>
            Uncalibrated Geomagnetic sensor.
            </summary>
        </member>
        <member name="F:Tizen.Sensor.SensorType.GyroscopeRotationVectorSensor">
            <summary>
            The Gyroscope-based rotation vector sensor.
            </summary>
        </member>
        <member name="F:Tizen.Sensor.SensorType.MagnetometerRotationVectorSensor">
            <summary>
            Geomagnetic-based rotation vector sensor.
            </summary>
        </member>
        <member name="F:Tizen.Sensor.SensorType.GyroscopeOrientationSensor">
            <summary>
            The Gyroscope-based orientation sensor.
            </summary>
        </member>
        <member name="F:Tizen.Sensor.SensorType.MagnetometerOrientationSensor">
            <summary>
            Geomagnetic-based orientation sensor.
            </summary>
        </member>
        <member name="F:Tizen.Sensor.SensorType.HRMBatch">
            <summary>
            Pedometer sensor.
            </summary>
        </member>
        <member name="F:Tizen.Sensor.SensorType.HRMLEDGreenBatch">
            <summary>
            Pedometer sensor.
            </summary>
        </member>
        <member name="F:Tizen.Sensor.SensorType.Pedometer">
            <summary>
            Pedometer sensor.
            </summary>
        </member>
        <member name="F:Tizen.Sensor.SensorType.SleepMonitor">
            <summary>
            Sleep monitor sensor.
            </summary>
        </member>
        <member name="F:Tizen.Sensor.SensorType.AutoRotation">
            <summary>
            Auto-rotation sensor.
            </summary>
        </member>
        <member name="F:Tizen.Sensor.SensorType.StationaryActivityDetector">
            <summary>
            Stationary activity detector.
            </summary>
        </member>
        <member name="F:Tizen.Sensor.SensorType.WalkingActivityDetector">
            <summary>
            Walking activity detector.
            </summary>
        </member>
        <member name="F:Tizen.Sensor.SensorType.RunningActivityDetector">
            <summary>
            Running activity detector.
            </summary>
        </member>
        <member name="F:Tizen.Sensor.SensorType.InVehicleActivityDetector">
            <summary>
            InVehicle activity detector.
            </summary>
        </member>
        <member name="F:Tizen.Sensor.SensorType.WristUpGestureDetector">
            <summary>
            Wrist up gesture detector.
            </summary>
        </member>
        <member name="F:Tizen.Sensor.SensorType.PickUpGestureDetector">
            <summary>
            Pick up gesture detector.
            </summary>
        </member>
        <member name="F:Tizen.Sensor.SensorType.FaceDownGestureDetector">
            <summary>
            Face down gesture detector.
            </summary>
        </member>
        <member name="T:Tizen.Sensor.SensorAttribute">
            <summary>
            The sensor attribute.
            </summary>
        </member>
        <member name="F:Tizen.Sensor.SensorAttribute.AxisOrientation">
            <summary>
            The axis orientation.
            </summary>
        </member>
        <member name="F:Tizen.Sensor.SensorAttribute.PausePolicy">
            <summary>
            The pause policy.
            </summary>
        </member>
        <member name="T:Tizen.Sensor.SensorDataAccuracy">
            <summary>
            The SensorDataAccuracy Enum definition for all possible sensor data accuracy values.
            </summary>
            <since_tizen> 3 </since_tizen>
        </member>
        <member name="F:Tizen.Sensor.SensorDataAccuracy.Undefined">
            <summary>
            Undefined sensor data accuracy.
            </summary>
            <since_tizen> 3 </since_tizen>
        </member>
        <member name="F:Tizen.Sensor.SensorDataAccuracy.Bad">
            <summary>
            Sensor data not accurate.
            </summary>
            <since_tizen> 3 </since_tizen>
        </member>
        <member name="F:Tizen.Sensor.SensorDataAccuracy.Normal">
            <summary>
            Moderately accurate sensor data.
            </summary>
            <since_tizen> 3 </since_tizen>
        </member>
        <member name="F:Tizen.Sensor.SensorDataAccuracy.Good">
            <summary>
            Highly accurate sensor data.
            </summary>
            <since_tizen> 3 </since_tizen>
        </member>
        <member name="F:Tizen.Sensor.SensorDataAccuracy.VeryGood">
            <summary>
            Very highly accurate sensor data.
            </summary>
            <since_tizen> 3 </since_tizen>
        </member>
        <member name="T:Tizen.Sensor.SensorPausePolicy">
            <summary>
            The Sensor Option Enum definition for pause policies of sensor.
            </summary>
            <since_tizen> 3 </since_tizen>
        </member>
        <member name="F:Tizen.Sensor.SensorPausePolicy.None">
            <summary>
            Receives data when the LCD is off and in the power save mode.
            </summary>
            <since_tizen> 3 </since_tizen>
        </member>
        <member name="F:Tizen.Sensor.SensorPausePolicy.DisplayOff">
            <summary>
            Does not receive data when the LCD is off.
            </summary>
            <since_tizen> 3 </since_tizen>
        </member>
        <member name="F:Tizen.Sensor.SensorPausePolicy.PowerSaveMode">
            <summary>
            Does not receive data in the power save mode.
            </summary>
            <since_tizen> 3 </since_tizen>
        </member>
        <member name="F:Tizen.Sensor.SensorPausePolicy.All">
            <summary>
            Does not receive data when the LCD is off and in the power save mode.
            </summary>
            <since_tizen> 3 </since_tizen>
        </member>
        <member name="T:Tizen.Sensor.PedometerState">
            <summary>
            The pedometer state.
            </summary>
            <since_tizen> 3 </since_tizen>
        </member>
        <member name="F:Tizen.Sensor.PedometerState.Unknown">
            <summary>
            Unknown.
            </summary>
            <since_tizen> 3 </since_tizen>
        </member>
        <member name="F:Tizen.Sensor.PedometerState.Stop">
            <summary>
            Stop state.
            </summary>
            <since_tizen> 3 </since_tizen>
        </member>
        <member name="F:Tizen.Sensor.PedometerState.Walk">
            <summary>
            Walking state.
            </summary>
            <since_tizen> 3 </since_tizen>
        </member>
        <member name="F:Tizen.Sensor.PedometerState.Run">
            <summary>
            Running state.
            </summary>
            <since_tizen> 3 </since_tizen>
        </member>
        <member name="T:Tizen.Sensor.SleepMonitorState">
            <summary>
            The sleep monitor state.
            </summary>
            <since_tizen> 3 </since_tizen>
        </member>
        <member name="F:Tizen.Sensor.SleepMonitorState.Unknown">
            <summary>
            Unknown.
            </summary>
            <since_tizen> 3 </since_tizen>
        </member>
        <member name="F:Tizen.Sensor.SleepMonitorState.Wake">
            <summary>
            The wake state.
            </summary>
            <since_tizen> 3 </since_tizen>
        </member>
        <member name="F:Tizen.Sensor.SleepMonitorState.Sleep">
            <summary>
            The sleeping state.
            </summary>
            <since_tizen> 3 </since_tizen>
        </member>
        <member name="T:Tizen.Sensor.ProximitySensorState">
            <summary>
            The proximity sensor state.
            </summary>
            <since_tizen> 3 </since_tizen>
        </member>
        <member name="F:Tizen.Sensor.ProximitySensorState.Unknown">
            <summary>
            Unknown.
            </summary>
            <since_tizen> 3 </since_tizen>
        </member>
        <member name="F:Tizen.Sensor.ProximitySensorState.Near">
            <summary>
            Near sate.
            </summary>
            <since_tizen> 3 </since_tizen>
        </member>
        <member name="F:Tizen.Sensor.ProximitySensorState.Far">
            <summary>
            Far state.
            </summary>
            <since_tizen> 3 </since_tizen>
        </member>
        <member name="T:Tizen.Sensor.DetectorState">
            <summary>
            The detector sensor state.
            </summary>
            <since_tizen> 3 </since_tizen>
        </member>
        <member name="F:Tizen.Sensor.DetectorState.Unknown">
            <summary>
            Unknown.
            </summary>
            <since_tizen> 3 </since_tizen>
        </member>
        <member name="F:Tizen.Sensor.DetectorState.NotDetected">
            <summary>
            None sate.
            </summary>
            <since_tizen> 3 </since_tizen>
        </member>
        <member name="F:Tizen.Sensor.DetectorState.Detected">
            <summary>
            Detected state.
            </summary>
            <since_tizen> 3 </since_tizen>
        </member>
        <member name="T:Tizen.Sensor.AutoRotationState">
            <summary>
            The auto-rotation state.
            </summary>
            <since_tizen> 7 </since_tizen>
        </member>
        <member name="F:Tizen.Sensor.AutoRotationState.Degree_0">
            <summary>
            Degree_0 sate.
            </summary>
            <since_tizen> 7 </since_tizen>
        </member>
        <member name="F:Tizen.Sensor.AutoRotationState.Degree_90">
            <summary>
            Degree_90 state.
            </summary>
            <since_tizen> 7 </since_tizen>
        </member>
        <member name="F:Tizen.Sensor.AutoRotationState.Degree_180">
            <summary>
            Degree_180 state.
            </summary>
            <since_tizen> 7 </since_tizen>
        </member>
        <member name="F:Tizen.Sensor.AutoRotationState.Degree_270">
            <summary>
            Degree_270 state.
            </summary>
            <since_tizen> 7 </since_tizen>
        </member>
        <member name="T:Tizen.Sensor.HeartRateMonitorBatchState">
            <summary>
            HeartRateMonitorBatchState types.
            </summary>
            <since_tizen> 8 </since_tizen>
        </member>
        <member name="F:Tizen.Sensor.HeartRateMonitorBatchState.SENSOR_HRM_BATCH_STATE_NODATA_FLUSH">
            <summary>
            Flush but there is no batched data
            </summary>
        </member>
        <member name="F:Tizen.Sensor.HeartRateMonitorBatchState.SENSOR_HRM_BATCH_STATE_VERYLOW_RELIABILITY">
            <summary>
            Very low measurement reliability 
            </summary>
        </member>
        <member name="F:Tizen.Sensor.HeartRateMonitorBatchState.SENSOR_HRM_BATCH_STATE_LOW_RELIABILITY">
            <summary>
             Low measurement reliability
            </summary>
        </member>
        <member name="F:Tizen.Sensor.HeartRateMonitorBatchState.SENSOR_HRM_BATCH_STATE_DETACHED_AUTO">
            <summary>
            Device detachment is detected during auto measurement
            </summary>
        </member>
        <member name="F:Tizen.Sensor.HeartRateMonitorBatchState.SENSOR_HRM_BATCH_STATE_DETACHED">
            <summary>
            Device detachment is detected
            </summary>
        </member>
        <member name="F:Tizen.Sensor.HeartRateMonitorBatchState.SENSOR_HRM_BATCH_STATE_DETECT_MOVE">
            <summary>
            The Movement is detected during on-demand measurement
            </summary>
        </member>
        <member name="F:Tizen.Sensor.HeartRateMonitorBatchState.SENSOR_HRM_BATCH_STATE_ATTACHED">
            <summary>
            Device attachment is detected
            </summary>
        </member>
        <member name="F:Tizen.Sensor.HeartRateMonitorBatchState.SENSOR_HRM_BATCH_STATE_NONE">
            <summary>
            Initial state before measurement
            </summary>
        </member>
        <member name="F:Tizen.Sensor.HeartRateMonitorBatchState.SENSOR_HRM_BATCH_STATE_OK">
            <summary>
            SENSOR_HRM_BATCH_STATE_OK
            </summary>
        </member>
    </members>
</doc>
