<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Tizen.Applications.WidgetApplication</name>
    </assembly>
    <members>
        <member name="T:Tizen.Applications.WidgetApplication">
            <summary>
            Represents a widget application.
            </summary>
            <since_tizen> 3 </since_tizen>
        </member>
        <member name="M:Tizen.Applications.WidgetApplication.#ctor(System.Collections.Generic.IDictionary{System.Type,System.String})">
            <summary>
            Initializes the WidgetApplication class with the type and application ID.
            </summary>
            <param name="typeInfo">Map structure for the derived class type and widget ID.</param>
            <since_tizen> 3 </since_tizen>
        </member>
        <member name="M:Tizen.Applications.WidgetApplication.#ctor(System.Type)">
            <summary>
            Initializes the WidgetApplication class with the type.
            </summary>
            <remarks>Widget ID will be replaced as the application ID.</remarks>
            <param name="type">Derived class type.</param>
            <since_tizen> 3 </since_tizen>
        </member>
        <member name="M:Tizen.Applications.WidgetApplication.GetInstances(System.Type)">
            <summary>
            Gets all instances of the widget associated with the type.
            </summary>
            <param name="type">Class type for the widget.</param>
            <since_tizen> 3 </since_tizen>
        </member>
        <member name="M:Tizen.Applications.WidgetApplication.Run(System.String[])">
            <summary>
            Runs the widget application's main loop.
            </summary>
            <param name="args">Arguments from the commandline.</param>
            <since_tizen> 3 </since_tizen>
        </member>
        <member name="T:Tizen.Applications.WidgetBase">
            <summary>
            The abstract class for widget instances.
            </summary>
            <since_tizen> 3 </since_tizen>
        </member>
        <member name="F:Tizen.Applications.WidgetBase.Window">
            <summary>
            Window object for this widget instance.
            It will be created after OnCreate method is invoked.
            </summary>
            <since_tizen> 3 </since_tizen>
        </member>
        <member name="T:Tizen.Applications.WidgetBase.WidgetDestroyType">
            <summary>
            Delete type.
            </summary>
            <since_tizen> 3 </since_tizen>
        </member>
        <member name="F:Tizen.Applications.WidgetBase.WidgetDestroyType.Permanent">
            <summary>
            User deleted this widget from the viewer.
            </summary>
        </member>
        <member name="F:Tizen.Applications.WidgetBase.WidgetDestroyType.Temporary">
            <summary>
            Widget is deleted because of other reasons. (For example, widget process is terminated temporarily by the system)
            </summary>
        </member>
        <member name="M:Tizen.Applications.WidgetBase.#ctor">
            <summary>
            Constructor.
            </summary>
            <since_tizen> 3 </since_tizen>
        </member>
        <member name="P:Tizen.Applications.WidgetBase.Id">
            <summary>
            ID for this widget instance.
            It will be created after OnCreate method is invoked.
            </summary>
            <since_tizen> 6 </since_tizen>
        </member>
        <member name="M:Tizen.Applications.WidgetBase.SetContent(Tizen.Applications.Bundle)">
            <summary>
            Sets the content information to the widget.
            </summary>
            <param name="info">The data set to save.</param>
            <feature>http://tizen.org/feature/shell.appwidget</feature>
            <exception cref="T:System.ArgumentException">Thrown when failed because of an invalid argument.</exception>
            <exception cref="T:System.NotSupportedException">Thrown when the API is not supported in this device.</exception>
            <exception cref="T:System.InvalidOperationException">Thrown in case of an unrecoverable error.</exception>
            <since_tizen> 3 </since_tizen>
        </member>
        <member name="M:Tizen.Applications.WidgetBase.SetTitle(System.String)">
            <summary>
            Sends the title to the widget.
            </summary>
            <param name="title">When an accessibility mode is turned on, this string will be read.</param>
            <feature>http://tizen.org/feature/shell.appwidget</feature>
            <exception cref="T:System.ArgumentException">Thrown when failed because of an invalid argument.</exception>
            <exception cref="T:System.NotSupportedException">Thrown when the API is not supported in this device.</exception>
            <exception cref="T:System.InvalidOperationException">Thrown in case of an unrecoverable error.</exception>
            <since_tizen> 3 </since_tizen>
        </member>
        <member name="M:Tizen.Applications.WidgetBase.Exit">
            <summary>
            Finishes the context for the widget instance.
            </summary>
            <feature>http://tizen.org/feature/shell.appwidget</feature>
            <exception cref="T:System.NotSupportedException">Thrown when the API is not supported in this device.</exception>
            <exception cref="T:System.InvalidOperationException">Thrown in case of an unrecoverable error.</exception>
            <since_tizen> 3 </since_tizen>
        </member>
        <member name="M:Tizen.Applications.WidgetBase.OnCreate(Tizen.Applications.Bundle,System.Int32,System.Int32)">
            <summary>
            Overrides this method if want to handle the behavior when the widget instance is started.
            </summary>
            <param name="content">The data set for the previous status.</param>
            <param name="w">The pixel value for the widget width.</param>
            <param name="h">The pixel value for the widget height.</param>
            <since_tizen> 3 </since_tizen>
        </member>
        <member name="M:Tizen.Applications.WidgetBase.OnDestroy(Tizen.Applications.WidgetBase.WidgetDestroyType,Tizen.Applications.Bundle)">
            <summary>
            Overrides this method if want to handle the behavior when the widget instance is destroyed.
            </summary>
            <param name="reason">The reason for destruction.</param>
            <param name="content">The data set to save.</param>
            <since_tizen> 3 </since_tizen>
        </member>
        <member name="M:Tizen.Applications.WidgetBase.OnPause">
            <summary>
            Overrides this method if want to handle the behavior when the widget instance is paused.
            </summary>
            <since_tizen> 3 </since_tizen>
        </member>
        <member name="M:Tizen.Applications.WidgetBase.OnResume">
            <summary>
            Overrides this method if want to handle the behavior when the widget instance is resumed.
            </summary>
            <since_tizen> 3 </since_tizen>
        </member>
        <member name="M:Tizen.Applications.WidgetBase.OnResize(System.Int32,System.Int32)">
            <summary>
            Overrides this method if want to handle the behavior when the widget instance is resized.
            </summary>
            <param name="w">Widget width.</param>
            <param name="h">Widget height.</param>
            <since_tizen> 3 </since_tizen>
        </member>
        <member name="M:Tizen.Applications.WidgetBase.OnUpdate(Tizen.Applications.Bundle,System.Boolean)">
            <summary>
            Overrides this method if want to handle the behavior when the widget instance is updated.
            </summary>
            <param name="content">The data set for updating this widget will be provided by the requester.</param>
            <param name="isForce">Although the widget is paused, if it is true, the widget can be updated.</param>
            <since_tizen> 3 </since_tizen>
        </member>
    </members>
</doc>
