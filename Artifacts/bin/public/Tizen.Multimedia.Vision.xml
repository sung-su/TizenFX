<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Tizen.Multimedia.Vision</name>
    </assembly>
    <members>
        <member name="T:Interop">
            <summary>
            Interop APIs.
            </summary>
            <summary>
            Interop APIs.
            </summary>
            <summary>
            Interop APIs.
            </summary>
            <summary>
            Interop APIs.
            </summary>
            <summary>
            Interop APIs.
            </summary>
            <summary>
            Interop APIs.
            </summary>
            <summary>
            Interop APIs.
            </summary>
        </member>
        <member name="T:Interop.MediaVision">
            <summary>
            Interop for Media Vision APIs.
            </summary>
            <summary>
            Interop for Media Vision APIs.
            </summary>
            <summary>
            Interop for Media Vision APIs.
            </summary>
            <summary>
            Interop for Media Vision APIs.
            </summary>
            <summary>
            Interop for Media Vision APIs.
            </summary>
            <summary>
            Interop for Media Vision APIs.
            </summary>
            <summary>
            Interop for Media Vision APIs.
            </summary>
        </member>
        <member name="T:Interop.MediaVision.BarcodeDetector">
            <summary>
            Interop for Barcode Detector APIs.
            </summary>
        </member>
        <member name="T:Interop.MediaVision.BarcodeGenerator">
            <summary>
            Interop for Barcode Generator APIs.
            </summary>
        </member>
        <member name="T:Interop.MediaVision.MediaSource">
            <summary>
            Interop for Media Vision Source APIs.
            </summary>
        </member>
        <member name="T:Interop.MediaVision.EngineConfig">
            <summary>
            Interop for Engine Configuration APIs.
            </summary>
        </member>
        <member name="T:Interop.MediaVision.Face">
            <summary>
            Interop for Face APIs.
            </summary>
        </member>
        <member name="T:Interop.MediaVision.FaceRecognitionModel">
            <summary>
            Interop for FaceRecognitionModel APIs.
            </summary>
        </member>
        <member name="T:Interop.MediaVision.FaceTrackingModel">
            <summary>
            Interop for FaceTrackingModel APIs.
            </summary>
        </member>
        <member name="T:Interop.MediaVision.FaceRecognition">
            <summary>
            Interop for FaceRecognition APIs.
            </summary>
        </member>
        <member name="T:Interop.MediaVision.Image">
            <summary>
            Interop for Image APIs.
            </summary>
        </member>
        <member name="T:Interop.MediaVision.ImageTrackingModel">
            <summary>
            Interop for ImageTrackingModel APIs.
            </summary>
        </member>
        <member name="T:Interop.MediaVision.Inference">
            <summary>
            Interop for Face APIs.
            </summary>
        </member>
        <member name="T:Interop.MediaVision.RoiTracker">
            <summary>
            Interop for ROI tracker APIs.
            </summary>
        </member>
        <member name="T:Interop.MediaVision.Surveillance">
            <summary>
            Interop for Surveillance APIs.
            </summary>
        </member>
        <member name="T:Tizen.Multimedia.Vision.Barcode">
            <summary>
            Represents a detected barcode.
            </summary>
            <since_tizen> 4</since_tizen>
        </member>
        <member name="M:Tizen.Multimedia.Vision.Barcode.#ctor(Tizen.Multimedia.Vision.Quadrangle,System.String,Tizen.Multimedia.Vision.BarcodeType)">
            <summary>
            Initializes a new instance of the <see cref="T:Tizen.Multimedia.Vision.Barcode"/> class.
            </summary>
            <since_tizen> 4</since_tizen>
        </member>
        <member name="P:Tizen.Multimedia.Vision.Barcode.Region">
            <summary>
            The quadrangle location of the detected barcode.
            </summary>
            <since_tizen> 4</since_tizen>
        </member>
        <member name="P:Tizen.Multimedia.Vision.Barcode.Message">
            <summary>
            The decoded message of the barcode.
            </summary>
            <since_tizen> 4</since_tizen>
        </member>
        <member name="P:Tizen.Multimedia.Vision.Barcode.Type">
            <summary>
            The type of the detected barcode.
            </summary>
            <since_tizen> 4</since_tizen>
        </member>
        <member name="M:Tizen.Multimedia.Vision.Barcode.ToString">
            <summary>
            Returns a string that represents the current object.
            </summary>
            <returns>A string that represents the current object.</returns>
            <since_tizen> 4 </since_tizen>
        </member>
        <member name="T:Tizen.Multimedia.Vision.BarcodeDetectionConfiguration">
            <summary>
            Represents a configuration of <see cref="T:Tizen.Multimedia.Vision.BarcodeDetector"/>.
            </summary>
            <seealso cref="T:Tizen.Multimedia.Vision.BarcodeDetector"/>
            <since_tizen> 4 </since_tizen>
        </member>
        <member name="M:Tizen.Multimedia.Vision.BarcodeDetectionConfiguration.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Tizen.Multimedia.Vision.BarcodeDetectionConfiguration"/> class.
            </summary>
            <exception cref="T:System.NotSupportedException">The feature is not supported.</exception>
            <since_tizen> 4 </since_tizen>
        </member>
        <member name="P:Tizen.Multimedia.Vision.BarcodeDetectionConfiguration.Target">
            <summary>
            Gets or sets the target of the barcode detection.
            </summary>
            <exception cref="T:System.ArgumentException"><paramref name="value"/> is not valid.</exception>
            <exception cref="T:System.ObjectDisposedException">The <see cref="T:Tizen.Multimedia.Vision.BarcodeDetectionConfiguration"/> already has been disposed of.</exception>
            <since_tizen> 4 </since_tizen>
        </member>
        <member name="T:Tizen.Multimedia.Vision.BarcodeDetectionTarget">
            <summary>
            Specifies the target of <see cref="T:Tizen.Multimedia.Vision.BarcodeDetector"/>.
            </summary>
            <since_tizen> 4 </since_tizen>
        </member>
        <member name="F:Tizen.Multimedia.Vision.BarcodeDetectionTarget.All">
            <summary>
            1D and 2D.
            </summary>
            <since_tizen> 3 </since_tizen>
        </member>
        <member name="F:Tizen.Multimedia.Vision.BarcodeDetectionTarget.Barcode1D">
            <summary>
            1D barcode only.
            </summary>
            <since_tizen> 3 </since_tizen>
        </member>
        <member name="F:Tizen.Multimedia.Vision.BarcodeDetectionTarget.Barcode2D">
            <summary>
            2D barcode only.
            </summary>
            <since_tizen> 3 </since_tizen>
        </member>
        <member name="T:Tizen.Multimedia.Vision.BarcodeDetector">
            <summary>
            Provides the ability to detect barcodes on image sources.
            </summary>
            <since_tizen> 4 </since_tizen>
        </member>
        <member name="M:Tizen.Multimedia.Vision.BarcodeDetector.DetectAsync(Tizen.Multimedia.Vision.MediaVisionSource,Tizen.Multimedia.Rectangle)">
            <summary>
            Detects barcodes on the source and reads the message from it.
            </summary>
            <param name="source">The <see cref="T:Tizen.Multimedia.Vision.MediaVisionSource"/> instance.</param>
            <param name="roi">Region of interest - rectangular area on the source which will be used for
                barcode detection. Note that roi should be inside area on the source.</param>
            <exception cref="T:System.ArgumentNullException"><paramref name="source"/> is null.</exception>
            <exception cref="T:System.NotSupportedException">The feature is not supported.</exception>
            <exception cref="T:System.ObjectDisposedException"><paramref name="source"/> already has been disposed of.</exception>
            <returns>A task that represents the asynchronous detect operation.</returns>
            <seealso cref="T:Tizen.Multimedia.Vision.Barcode"/>
            <since_tizen> 4</since_tizen>
        </member>
        <member name="M:Tizen.Multimedia.Vision.BarcodeDetector.DetectAsync(Tizen.Multimedia.Vision.MediaVisionSource,Tizen.Multimedia.Rectangle,Tizen.Multimedia.Vision.BarcodeDetectionConfiguration)">
            <summary>
            Detects barcodes on the source and reads the message from it with <see cref="T:Tizen.Multimedia.Vision.BarcodeDetectionConfiguration"/>.
            </summary>
            <param name="source">The <see cref="T:Tizen.Multimedia.Vision.MediaVisionSource"/> instance.</param>
            <param name="roi">Region of interest - rectangular area on the source which will be used for
                barcode detection. Note that roi should be inside area on the source.</param>
            <param name="config">The configuration of the barcode detector. This value can be null.</param>
            <returns>A task that represents the asynchronous detect operation.</returns>
            <exception cref="T:System.ArgumentNullException"><paramref name="source"/> is null.</exception>
            <exception cref="T:System.NotSupportedException">The feature is not supported.</exception>
            <exception cref="T:System.ObjectDisposedException">
                <paramref name="source"/> already has been disposed of.<br/>
                -or-<br/>
                <paramref name="config"/> already has been disposed of.
            </exception>
            <seealso cref="T:Tizen.Multimedia.Vision.Barcode"/>
            <since_tizen> 4</since_tizen>
        </member>
        <member name="T:Tizen.Multimedia.Vision.BarcodeGenerationConfiguration">
            <summary>
            Represents a configuration of <see cref="T:Tizen.Multimedia.Vision.BarcodeGenerator"/> instances.
            </summary>
            <seealso cref="T:Tizen.Multimedia.Vision.BarcodeGenerator"/>
            <since_tizen> 4 </since_tizen>
        </member>
        <member name="M:Tizen.Multimedia.Vision.BarcodeGenerationConfiguration.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Tizen.Multimedia.Vision.BarcodeGenerationConfiguration"/> class.
            </summary>
            <exception cref="T:System.NotSupportedException">The feature is not supported.</exception>
            <since_tizen> 4 </since_tizen>
        </member>
        <member name="P:Tizen.Multimedia.Vision.BarcodeGenerationConfiguration.TextVisibility">
            <summary>
            Gets or sets the text visibility of the barcode to be generated.
            </summary>
            <exception cref="T:System.ArgumentException"><paramref name="value"/> is not valid.</exception>
            <exception cref="T:System.ObjectDisposedException">The <see cref="T:Tizen.Multimedia.Vision.BarcodeGenerationConfiguration"/> already has been disposed of.</exception>
            <since_tizen> 4 </since_tizen>
        </member>
        <member name="P:Tizen.Multimedia.Vision.BarcodeGenerationConfiguration.ForegroundColor">
            <summary>
            Gets or sets the foreground color of the barcode to be generated.
            </summary>
            <remarks>
            The alpha value of the color will be ignored.
            </remarks>
            <exception cref="T:System.ObjectDisposedException">The <see cref="T:Tizen.Multimedia.Vision.BarcodeGenerationConfiguration"/> already has been disposed of.</exception>
            <since_tizen> 4 </since_tizen>
        </member>
        <member name="P:Tizen.Multimedia.Vision.BarcodeGenerationConfiguration.BackgroundColor">
            <summary>
            Gets or sets the background color of the barcode to be generated.
            </summary>
            <remarks>
            The alpha value of the color will be ignored.
            </remarks>
            <exception cref="T:System.ObjectDisposedException">The <see cref="T:Tizen.Multimedia.Vision.BarcodeGenerationConfiguration"/> already has been disposed of.</exception>
            <since_tizen> 4 </since_tizen>
        </member>
        <member name="T:Tizen.Multimedia.Vision.BarcodeGenerator">
            <summary>
            Provides the ability to generate barcodes and QR codes.
            Different encoding types <see cref="T:Tizen.Multimedia.Vision.QrMode"/>, error correction codes <see cref="T:Tizen.Multimedia.Vision.ErrorCorrectionLevel"/>,
            and code versions are supported for QRCodes.
            </summary>
            <seealso cref="T:Tizen.Multimedia.Vision.BarcodeGenerationConfiguration"/>
            <since_tizen> 4 </since_tizen>
        </member>
        <member name="M:Tizen.Multimedia.Vision.BarcodeGenerator.GenerateSource(System.String,Tizen.Multimedia.Vision.QrConfiguration)">
            <summary>
            Generates a QR image with the specified message.
            </summary>
            <param name="message">The message to be encoded in the barcode.</param>
            <param name="qrConfig">The <see cref="T:Tizen.Multimedia.Vision.QrConfiguration"/> instance.</param>
            <returns><see cref="T:Tizen.Multimedia.Vision.MediaVisionSource"/> containing the generated QR image.</returns>
            <exception cref="T:System.ArgumentNullException">
                <paramref name="qrConfig"/> is null.<br/>
                -or-<br/>
                <paramref name="message"/> is null.
            </exception>
            <exception cref="T:System.ArgumentException">
                <paramref name="message"/> is too long.<br/>
                -or-<br/>
                <paramref name="message"/> contains characters which are illegal by the <see cref="T:Tizen.Multimedia.Vision.QrMode"/>.
                </exception>
            <exception cref="T:System.NotSupportedException">The feature is not supported.</exception>
            <seealso cref="T:Tizen.Multimedia.Vision.QrMode"/>
            <since_tizen> 4 </since_tizen>
        </member>
        <member name="M:Tizen.Multimedia.Vision.BarcodeGenerator.GenerateSource(System.String,Tizen.Multimedia.Vision.QrConfiguration,Tizen.Multimedia.Vision.BarcodeGenerationConfiguration)">
            <summary>
            Generates a QR image with the specified message with <see cref="T:Tizen.Multimedia.Vision.BarcodeGenerationConfiguration"/>.
            </summary>
            <param name="message">The message to be encoded in the barcode.</param>
            <param name="qrConfig">The <see cref="T:Tizen.Multimedia.Vision.QrConfiguration"/> instance.</param>
            <param name="config">The configuration of the barcode generator. This value can be null.</param>
            <returns><see cref="T:Tizen.Multimedia.Vision.MediaVisionSource"/> containing the generated QR image.</returns>
            <remarks>
                <see cref="P:Tizen.Multimedia.Vision.BarcodeGenerationConfiguration.TextVisibility"/> must be <see cref="F:Tizen.Multimedia.Visibility.Invisible"/>,
                because the text visibility is not supported in the QR code.
            </remarks>
            <exception cref="T:System.ArgumentNullException">
                <paramref name="qrConfig"/> is null.<br/>
                -or-<br/>
                <paramref name="message"/> is null.
            </exception>
            <exception cref="T:System.ArgumentException">
                <paramref name="message"/> is too long.<br/>
                -or-<br/>
                <paramref name="message"/> contains characters which are illegal by the <see cref="T:Tizen.Multimedia.Vision.QrMode"/>.
            </exception>
            <exception cref="T:System.NotSupportedException">
                The feature is not supported.<br/>
                -or-<br/>
                <see cref="P:Tizen.Multimedia.Vision.BarcodeGenerationConfiguration.TextVisibility"/> is the <see cref="F:Tizen.Multimedia.Visibility.Visible"/>.
            </exception>
            <exception cref="T:System.ObjectDisposedException"><paramref name="config"/> already has been disposed of.</exception>
            <seealso cref="T:Tizen.Multimedia.Vision.QrMode"/>
            <since_tizen> 4 </since_tizen>
        </member>
        <member name="M:Tizen.Multimedia.Vision.BarcodeGenerator.GenerateSource(System.String,Tizen.Multimedia.Vision.BarcodeType)">
            <summary>
            Generates a barcode image with the specified message.
            </summary>
            <param name="message">The message to be encoded in the barcode.</param>
            <param name="type">Type of the barcode to be generated.</param>
            <returns><see cref="T:Tizen.Multimedia.Vision.MediaVisionSource"/> containing the generated barcode image.</returns>
            <exception cref="T:System.ArgumentNullException"><paramref name="message"/> is null.</exception>
            <exception cref="T:System.ArgumentException">
                <paramref name="message"/> is too long.<br/>
                -or-<br/>
                <paramref name="type"/> is <see cref="F:Tizen.Multimedia.Vision.BarcodeType.QR"/>.<br/>
                -or-<br/>
                <paramref name="type"/> is invalid.<br/>
                -or-<br/>
                <paramref name="message"/> contains illegal characters.
            </exception>
            <exception cref="T:System.NotSupportedException">The feature is not supported.</exception>
            <since_tizen> 4 </since_tizen>
        </member>
        <member name="M:Tizen.Multimedia.Vision.BarcodeGenerator.GenerateSource(System.String,Tizen.Multimedia.Vision.BarcodeType,Tizen.Multimedia.Vision.BarcodeGenerationConfiguration)">
            <summary>
            Generates a barcode image with the specified message and <see cref="T:Tizen.Multimedia.Vision.BarcodeGenerationConfiguration"/>.
            </summary>
            <param name="message">The message to be encoded in the barcode.</param>
            <param name="type">Type of the barcode to be generated.</param>
            <param name="config">The configuration of the barcode generator. This value can be null.</param>
            <returns><see cref="T:Tizen.Multimedia.Vision.MediaVisionSource"/> containing the generated barcode image.</returns>
            <exception cref="T:System.ArgumentNullException"><paramref name="message"/> is null.</exception>
            <exception cref="T:System.ArgumentException">
                <paramref name="message"/> is too long.<br/>
                -or-<br/>
                <paramref name="type"/> is <see cref="F:Tizen.Multimedia.Vision.BarcodeType.QR"/>.<br/>
                -or-<br/>
                <paramref name="type"/> is invalid.<br/>
                -or-<br/>
                <paramref name="message"/> contains illegal characters.
            </exception>
            <exception cref="T:System.NotSupportedException">The feature is not supported.</exception>
            <exception cref="T:System.ObjectDisposedException"><paramref name="config"/> already has been disposed of.</exception>
            <since_tizen> 4 </since_tizen>
        </member>
        <member name="M:Tizen.Multimedia.Vision.BarcodeGenerator.GenerateImage(System.String,Tizen.Multimedia.Vision.QrConfiguration,Tizen.Multimedia.Vision.BarcodeImageConfiguration)">
            <summary>
            Generates a QR image file with the specified message.
            </summary>
            <remarks>
                <see cref="P:Tizen.Multimedia.Vision.BarcodeGenerationConfiguration.TextVisibility"/> must be <see cref="F:Tizen.Multimedia.Visibility.Invisible"/>,
                because the text visibility is not supported in the QR code.
            </remarks>
            <param name="message">The message to be encoded in the barcode.</param>
            <param name="qrConfig">The <see cref="T:Tizen.Multimedia.Vision.QrConfiguration"/> instance.</param>
            <param name="imageConfig">The <see cref="T:Tizen.Multimedia.Vision.BarcodeImageConfiguration"/> that contains information about the file to be generated.</param>
            <exception cref="T:System.ArgumentNullException">
                <paramref name="message"/> is null.<br/>
                -or-<br/>
                <paramref name="qrConfig"/> is null.<br/>
                -or-<br/>
                <paramref name="imageConfig"/> is null.
            </exception>
            <exception cref="T:System.ArgumentException">
                <paramref name="message"/> is too long.<br/>
                -or-<br/>
                <paramref name="message"/> contains characters which are illegal by the <see cref="T:Tizen.Multimedia.Vision.QrMode"/>.
            </exception>
            <exception cref="T:System.UnauthorizedAccessException">No permission to write a file.</exception>
            <exception cref="T:System.NotSupportedException">The feature is not supported.</exception>
            <seealso cref="T:Tizen.Multimedia.Vision.QrMode"/>
            <since_tizen> 4 </since_tizen>
        </member>
        <member name="M:Tizen.Multimedia.Vision.BarcodeGenerator.GenerateImage(System.String,Tizen.Multimedia.Vision.QrConfiguration,Tizen.Multimedia.Vision.BarcodeImageConfiguration,Tizen.Multimedia.Vision.BarcodeGenerationConfiguration)">
            <summary>
            Generates a QR image file with the specified message and <see cref="T:Tizen.Multimedia.Vision.BarcodeGenerationConfiguration"/>.
            </summary>
            <remarks>
                <see cref="P:Tizen.Multimedia.Vision.BarcodeGenerationConfiguration.TextVisibility"/> must be <see cref="F:Tizen.Multimedia.Visibility.Invisible"/>,
                because the text visibility is not supported in the QR code.
            </remarks>
            <param name="message">The message to be encoded in the barcode.</param>
            <param name="qrConfig">The <see cref="T:Tizen.Multimedia.Vision.QrConfiguration"/> instance.</param>
            <param name="imageConfig">The <see cref="T:Tizen.Multimedia.Vision.BarcodeImageConfiguration"/> that contains
                information about the file to be generated.</param>
            <param name="config">The configuration of the barcode generator. This value can be null.</param>
            <exception cref="T:System.ArgumentNullException">
                <paramref name="message"/> is null.<br/>
                -or-<br/>
                <paramref name="qrConfig"/> is null.<br/>
                -or-<br/>
                <paramref name="imageConfig"/> is null.
            </exception>
            <exception cref="T:System.ArgumentException">
                <paramref name="message"/> is too long.<br/>
                -or-<br/>
                <paramref name="message"/> contains characters which are illegal by the <see cref="T:Tizen.Multimedia.Vision.QrMode"/>.
            </exception>
            <exception cref="T:System.UnauthorizedAccessException">No permission to write a file.</exception>
            <exception cref="T:System.NotSupportedException">
                The feature is not supported.<br/>
                -or-<br/>
                <see cref="P:Tizen.Multimedia.Vision.BarcodeGenerationConfiguration.TextVisibility"/> is the <see cref="F:Tizen.Multimedia.Visibility.Visible"/>.
            </exception>
            <exception cref="T:System.ObjectDisposedException"><paramref name="config"/> already has been disposed of.</exception>
            <since_tizen> 4 </since_tizen>
        </member>
        <member name="M:Tizen.Multimedia.Vision.BarcodeGenerator.GenerateImage(System.String,Tizen.Multimedia.Vision.BarcodeType,Tizen.Multimedia.Vision.BarcodeImageConfiguration)">
            <summary>
            Generates a barcode image file with the specified message.
            </summary>
            <param name="message">The message to be encoded in the barcode.</param>
            <param name="type">Type of the barcode to be generated.</param>
            <param name="imageConfig">The <see cref="T:Tizen.Multimedia.Vision.BarcodeImageConfiguration"/> that contains
                information about the file to be generated.</param>
            <exception cref="T:System.ArgumentNullException">
                <paramref name="message"/> is null.<br/>
                -or-<br/>
                <paramref name="imageConfig"/> is null.
            </exception>
            <exception cref="T:System.ArgumentException">
                <paramref name="message"/> is too long.<br/>
                -or-<br/>
                <paramref name="type"/> is <see cref="F:Tizen.Multimedia.Vision.BarcodeType.QR"/>.<br/>
                -or-<br/>
                <paramref name="type"/> is invalid.<br/>
                -or-<br/>
                <paramref name="message"/> contains illegal characters.
            </exception>
            <exception cref="T:System.UnauthorizedAccessException">No permission to write a file.</exception>
            <exception cref="T:System.NotSupportedException">The feature is not supported.</exception>
            <since_tizen> 4 </since_tizen>
        </member>
        <member name="M:Tizen.Multimedia.Vision.BarcodeGenerator.GenerateImage(System.String,Tizen.Multimedia.Vision.BarcodeType,Tizen.Multimedia.Vision.BarcodeImageConfiguration,Tizen.Multimedia.Vision.BarcodeGenerationConfiguration)">
            <summary>
            Generates a barcode image file with the specified message and <see cref="T:Tizen.Multimedia.Vision.BarcodeGenerationConfiguration"/>.
            </summary>
            <param name="message">The message to be encoded in the barcode.</param>
            <param name="type">Type of the barcode to be generated.</param>
            <param name="imageConfig">The <see cref="T:Tizen.Multimedia.Vision.BarcodeImageConfiguration"/> that contains
                information about the file to be generated.</param>
            <param name="config">The configuration of the barcode generator. This value can be null.</param>
            <exception cref="T:System.ArgumentNullException">
                <paramref name="message"/> is null.<br/>
                -or-<br/>
                <paramref name="imageConfig"/> is null.
            </exception>
            <exception cref="T:System.ArgumentException">
                <paramref name="message"/> is too long.<br/>
                -or-<br/>
                <paramref name="type"/> is <see cref="F:Tizen.Multimedia.Vision.BarcodeType.QR"/>.<br/>
                -or-<br/>
                <paramref name="type"/> is invalid.<br/>
                -or-<br/>
                <paramref name="message"/> contains illegal characters.
            </exception>
            <exception cref="T:System.UnauthorizedAccessException">No permission to write a file.</exception>
            <exception cref="T:System.NotSupportedException">The feature is not supported.</exception>
            <exception cref="T:System.ObjectDisposedException"><paramref name="config"/> already has been disposed of.</exception>
            <since_tizen> 4 </since_tizen>
        </member>
        <member name="T:Tizen.Multimedia.Vision.BarcodeImageConfiguration">
            <summary>
            Represents a configuration for the image to be generated by <see cref="T:Tizen.Multimedia.Vision.BarcodeGenerator"/>.
            </summary>
            <since_tizen> 4 </since_tizen>
        </member>
        <member name="M:Tizen.Multimedia.Vision.BarcodeImageConfiguration.#ctor(Tizen.Multimedia.Size,System.String,Tizen.Multimedia.Vision.BarcodeImageFormat)">
            <summary>
            Initializes a new instance of the <see cref="T:Tizen.Multimedia.Vision.BarcodeImageConfiguration"/> class.
            </summary>
            <remarks>
            The mediastorage privilege (http://tizen.org/privilege/mediastorage) is needed if the image path is relevant to media storage.<br/>
            The externalstorage privilege (http://tizen.org/privilege/externalstorage) is needed if the image path is relevant to external storage.
            </remarks>
            <param name="size">The <see cref="P:Tizen.Multimedia.Vision.BarcodeImageConfiguration.Size"/> of the generated image.</param>
            <param name="path">The path to the file to be generated.</param>
            <param name="imageFormat">The format of the output image.</param>
            <exception cref="T:System.ArgumentOutOfRangeException">
                The width of <paramref name="size"/> is less than or equal to zero.<br/>
                -or-<br/>
                The height of <paramref name="size"/> is less than or equal to zero.
            </exception>
            <exception cref="T:System.ArgumentNullException"><paramref name="path"/> is null.</exception>
            <exception cref="T:System.ArgumentException"><paramref name="imageFormat"/> is invalid.</exception>
            <example>
            <code>
            var imageConfig = new BarcodeImageConfiguration(new Size(500, 400), "/opt/usr/test-barcode-generate-new", BarcodeImageFormat.JPG);
            </code>
            </example>
            <since_tizen> 4 </since_tizen>
        </member>
        <member name="M:Tizen.Multimedia.Vision.BarcodeImageConfiguration.#ctor(System.Int32,System.Int32,System.String,Tizen.Multimedia.Vision.BarcodeImageFormat)">
            <summary>
            Initializes a new instance of the <see cref="T:Tizen.Multimedia.Vision.BarcodeImageConfiguration"/> class.
            </summary>
            <remarks>
            The mediastorage privilege (http://tizen.org/privilege/mediastorage) is needed if the image path is relevant to media storage.<br/>
            The externalstorage privilege (http://tizen.org/privilege/externalstorage) is needed if the image path is relevant to external storage.
            </remarks>
            <param name="width">The width of the image to be generated.</param>
            <param name="height">The height of the image to be generated.</param>
            <param name="path">The path to the file to be generated.</param>
            <param name="imageFormat">The format of the output image.</param>
            <exception cref="T:System.ArgumentOutOfRangeException">
                <paramref name="width"/> is less than or equal to zero.<br/>
                -or-<br/>
                <paramref name="height"/> is less than or equal to zero.
            </exception>
            <exception cref="T:System.ArgumentNullException"><paramref name="path"/> is null.</exception>
            <exception cref="T:System.ArgumentException"><paramref name="imageFormat"/> is invalid.</exception>
            <example>
            <code>
            var imageConfig = new BarcodeImageConfiguration(500, 400, "/opt/usr/test-barcode-generate-new", BarcodeImageFormat.JPG);
            </code>
            </example>
            <since_tizen> 4 </since_tizen>
        </member>
        <member name="P:Tizen.Multimedia.Vision.BarcodeImageConfiguration.Size">
            <summary>
            Gets the size of the image.
            </summary>
            <since_tizen> 4 </since_tizen>
        </member>
        <member name="P:Tizen.Multimedia.Vision.BarcodeImageConfiguration.Width">
            <summary>
            Gets the width of the image.
            </summary>
            <since_tizen> 4 </since_tizen>
        </member>
        <member name="P:Tizen.Multimedia.Vision.BarcodeImageConfiguration.Height">
            <summary>
            Gets the height of the image.
            </summary>
            <since_tizen> 4 </since_tizen>
        </member>
        <member name="P:Tizen.Multimedia.Vision.BarcodeImageConfiguration.Path">
            <summary>
            Gets the path to the file that has to be generated.
            </summary>
            <remarks>
            The mediastorage privilege (http://tizen.org/privilege/mediastorage) is needed if the image path is relevant to media storage.<br/>
            The externalstorage privilege (http://tizen.org/privilege/externalstorage) is needed if the image path is relevant to external storage.
            </remarks>
            <since_tizen> 4 </since_tizen>
        </member>
        <member name="P:Tizen.Multimedia.Vision.BarcodeImageConfiguration.Format">
            <summary>
            Gets the format of the output image.
            </summary>
            <since_tizen> 4 </since_tizen>
        </member>
        <member name="T:Tizen.Multimedia.Vision.BarcodeImageFormat">
            <summary>
            Specifies the supported image formats for <see cref="T:Tizen.Multimedia.Vision.BarcodeGenerator"/>
            </summary>
            <seealso cref="T:Tizen.Multimedia.Vision.BarcodeImageConfiguration"/>
            <since_tizen> 4 </since_tizen>
        </member>
        <member name="F:Tizen.Multimedia.Vision.BarcodeImageFormat.Bmp">
            <summary>
            BMP image format.
            </summary>
            <since_tizen> 3 </since_tizen>
        </member>
        <member name="F:Tizen.Multimedia.Vision.BarcodeImageFormat.Jpeg">
            <summary>
            JPEG image format.
            </summary>
            <since_tizen> 3</since_tizen>
        </member>
        <member name="F:Tizen.Multimedia.Vision.BarcodeImageFormat.Png">
            <summary>
            PNG image format.
            </summary>
            <since_tizen> 3 </since_tizen>
        </member>
        <member name="T:Tizen.Multimedia.Vision.BarcodeType">
            <summary>
            Specifies the supported barcode types.
            </summary>
            <remarks>
            QR codes (versions 1 to 40) and set of 1D barcodes are supported.
            </remarks>
            <seealso cref="T:Tizen.Multimedia.Vision.BarcodeDetector"/>
            <seealso cref="T:Tizen.Multimedia.Vision.BarcodeGenerator"/>
            <since_tizen> 4 </since_tizen>
        </member>
        <member name="F:Tizen.Multimedia.Vision.BarcodeType.QR">
            <summary>
            2D barcode - Quick Response code.
            </summary>
            <since_tizen> 3 </since_tizen>
        </member>
        <member name="F:Tizen.Multimedia.Vision.BarcodeType.UpcA">
            <summary>
            1D barcode - Universal Product Code with 12-digit.
            </summary>
            <since_tizen> 3 </since_tizen>
        </member>
        <member name="F:Tizen.Multimedia.Vision.BarcodeType.UpcE">
            <summary>
            1D barcode - Universal Product Code with 6-digit.
            </summary>
            <since_tizen> 3 </since_tizen>
        </member>
        <member name="F:Tizen.Multimedia.Vision.BarcodeType.Ean8">
            <summary>
            1D barcode - International Article Number with 8-digit.
            </summary>
            <since_tizen> 3 </since_tizen>
        </member>
        <member name="F:Tizen.Multimedia.Vision.BarcodeType.Ean13">
            <summary>
            1D barcode - International Article Number with 13-digit.
            </summary>
            <since_tizen> 3</since_tizen>
        </member>
        <member name="F:Tizen.Multimedia.Vision.BarcodeType.Code128">
            <summary>
            1D barcode - Code 128.
            </summary>
            <since_tizen> 3 </since_tizen>
        </member>
        <member name="F:Tizen.Multimedia.Vision.BarcodeType.Code39">
            <summary>
            1D barcode - Code 39.
            </summary>
            <since_tizen> 3 </since_tizen>
        </member>
        <member name="F:Tizen.Multimedia.Vision.BarcodeType.I25">
            <summary>
            1D barcode - Interleaved Two of Five.
            </summary>
            <since_tizen> 3 </since_tizen>
        </member>
        <member name="F:Tizen.Multimedia.Vision.BarcodeType.Ean2">
            <summary>
            1D barcode - International Article Number with 2-digit.
            </summary>
            <since_tizen> 8 </since_tizen>
        </member>
        <member name="F:Tizen.Multimedia.Vision.BarcodeType.Ean5">
            <summary>
            1D barcode - International Article Number with 5-digit.
            </summary>
            <since_tizen> 8 </since_tizen>
        </member>
        <member name="F:Tizen.Multimedia.Vision.BarcodeType.Code93">
            <summary>
            1D barcode - Code 93.
            </summary>
            <since_tizen> 8 </since_tizen>
        </member>
        <member name="F:Tizen.Multimedia.Vision.BarcodeType.Codabar">
            <summary>
            1D barcode - Codabar
            </summary>
            <since_tizen> 8 </since_tizen>
        </member>
        <member name="F:Tizen.Multimedia.Vision.BarcodeType.Databar">
            <summary>
            1D barcode - Databar
            </summary>
            <since_tizen> 8 </since_tizen>
        </member>
        <member name="F:Tizen.Multimedia.Vision.BarcodeType.DataBarExpand">
            <summary>
            1D barcode - Databar expand
            </summary>
            <since_tizen> 8 </since_tizen>
        </member>
        <member name="T:Tizen.Multimedia.Vision.DeepLearningFaceRecognitionResult">
            <summary>
            Represents the result of <see cref="T:Tizen.Multimedia.Vision.DeepLearningFaceRecognizer"/> operations.
            </summary>
            <since_tizen> 10 </since_tizen>
        </member>
        <member name="P:Tizen.Multimedia.Vision.DeepLearningFaceRecognitionResult.Label">
            <summary>
            Gets the label of the recognized face.
            </summary>
            <since_tizen> 10 </since_tizen>
        </member>
        <member name="M:Tizen.Multimedia.Vision.DeepLearningFaceRecognitionResult.ToString">
            <summary>
            Returns a string that represents the current object.
            </summary>
            <returns>A string that represents the current object.</returns>
            <since_tizen> 10 </since_tizen>
        </member>
        <member name="T:Tizen.Multimedia.Vision.DeepLearningFaceRecognizer">
            <summary>
            Provides the ability to recognize face based on previously registered face data.
            </summary>
            <since_tizen> 10 </since_tizen>
        </member>
        <member name="M:Tizen.Multimedia.Vision.DeepLearningFaceRecognizer.#ctor">
            <summary>Initializes a new instance of the <see cref="T:Tizen.Multimedia.Vision.DeepLearningFaceRecognizer"/> class.</summary>
            <remarks>
            This class is different from <see cref="T:Tizen.Multimedia.Vision.FaceRecognizer"/> in aspect of using internal machine learning algorithm.
            </remarks>
            <exception cref="T:System.NotSupportedException">The required features are not supported.</exception>
            <feature>http://tizen.org/feature/vision.face_recognition</feature>
            <since_tizen> 10 </since_tizen>
        </member>
        <member name="M:Tizen.Multimedia.Vision.DeepLearningFaceRecognizer.Finalize">
            <summary>
            Finalizes an instance of the DeepLearningFaceRecognizer class.
            </summary>
        </member>
        <member name="M:Tizen.Multimedia.Vision.DeepLearningFaceRecognizer.RegisterFace(Tizen.Multimedia.Vision.MediaVisionSource,System.String)">
            <summary>
            Registers face data to internal database.
            </summary>
            <param name="source">The face data to register.</param>
            <param name="label">The name of face data.</param>
            <exception cref="T:System.ObjectDisposedException">The DeepLearningFaceRecognizer already has been disposed.</exception>
            <exception cref="T:System.ArgumentNullException"><paramref name="source"/> or <paramref name="label"/> is null.</exception>
            <exception cref="T:System.InvalidOperationException">In case of any invalid operations.</exception>
            <since_tizen> 10 </since_tizen>
        </member>
        <member name="M:Tizen.Multimedia.Vision.DeepLearningFaceRecognizer.UnregisterFace(System.String)">
            <summary>
            Unregisters face data from internal database.
            </summary>
            <param name="label">The name of face data.</param>
            <exception cref="T:System.ObjectDisposedException">The DeepLearningFaceRecognizer already has been disposed.</exception>
            <exception cref="T:System.ArgumentNullException"><paramref name="label"/> is null.</exception>
            <exception cref="T:System.InvalidOperationException">In case of any invalid operations.</exception>
            <since_tizen> 10 </since_tizen>
        </member>
        <member name="M:Tizen.Multimedia.Vision.DeepLearningFaceRecognizer.Recognize(Tizen.Multimedia.Vision.MediaVisionSource)">
            <summary>
            Recognizes a face in by finding the closest match among the registered faces and returns the label of the found face.
            </summary>
            <remarks>
            If there's no recognized face, <see cref="P:Tizen.Multimedia.Vision.DeepLearningFaceRecognitionResult.Label"/> will be <see cref="F:System.String.Empty"/>.
            </remarks>
            <param name="source">The face data to recognize.</param>
            <returns>A label of recognized face.</returns>
            <exception cref="T:System.ObjectDisposedException">The DeepLearningFaceRecognizer already has been disposed.</exception>
            <exception cref="T:System.ArgumentNullException"><paramref name="source"/> is null.</exception>
            <exception cref="T:System.InvalidOperationException">In case of any invalid operations.</exception>
            <since_tizen> 10 </since_tizen>
        </member>
        <member name="M:Tizen.Multimedia.Vision.DeepLearningFaceRecognizer.Dispose(System.Boolean)">
            <summary>
            Releases the unmanaged resources used by the DeepLearningFaceRecognizer.
            </summary>
            <param name="disposing">true to release both managed and unmanaged resources; false to release only unmanaged resources.</param>
            <since_tizen> 10 </since_tizen>
        </member>
        <member name="M:Tizen.Multimedia.Vision.DeepLearningFaceRecognizer.Dispose">
            <summary>
            Releases all resources used by the DeepLearningFaceRecognizer.
            </summary>
            <since_tizen> 10 </since_tizen>
        </member>
        <member name="T:Tizen.Multimedia.Vision.EngineConfiguration">
            <summary>
            A base class for configuration classes.
            </summary>
            <since_tizen> 4 </since_tizen>
        </member>
        <member name="M:Tizen.Multimedia.Vision.EngineConfiguration.Finalize">
            <summary>
            Finalizes an instance of the EngineConfiguration class.
            </summary>
        </member>
        <member name="M:Tizen.Multimedia.Vision.EngineConfiguration.Dispose">
            <summary>
            Releases all resources used by the <see cref="T:Tizen.Multimedia.Vision.EngineConfiguration"/> object.
            </summary>
            <since_tizen> 4 </since_tizen>
        </member>
        <member name="M:Tizen.Multimedia.Vision.EngineConfiguration.Dispose(System.Boolean)">
            <summary>
            Releases the resources used by the <see cref="T:Tizen.Multimedia.Vision.EngineConfiguration"/> object.
            </summary>
            <param name="disposing">
            true to release both managed and unmanaged resources, otherwise false to release only unmanaged resources.
            </param>
            <since_tizen> 4 </since_tizen>
        </member>
        <member name="T:Tizen.Multimedia.Vision.ErrorCorrectionLevel">
            <summary>
            Specifies the supported QR code error correction levels.
            </summary>
            <since_tizen> 4 </since_tizen>
        </member>
        <member name="F:Tizen.Multimedia.Vision.ErrorCorrectionLevel.Low">
            <summary>
            Recovery up to 7% losses.
            </summary>
            <since_tizen> 3 </since_tizen>
        </member>
        <member name="F:Tizen.Multimedia.Vision.ErrorCorrectionLevel.Medium">
            <summary>
            Recovery up to 15% losses.
            </summary>
            <since_tizen> 3 </since_tizen>
        </member>
        <member name="F:Tizen.Multimedia.Vision.ErrorCorrectionLevel.Quartile">
            <summary>
            Recovery up to 25% losses.
            </summary>
            <since_tizen> 3 </since_tizen>
        </member>
        <member name="F:Tizen.Multimedia.Vision.ErrorCorrectionLevel.High">
            <summary>
            Recovery up to 30% losses.
            </summary>
            <since_tizen> 3 </since_tizen>
        </member>
        <member name="T:Tizen.Multimedia.Vision.EyeCondition">
            <summary>
            Specifies the eyes state types.
            </summary>
            <since_tizen> 4 </since_tizen>
        </member>
        <member name="F:Tizen.Multimedia.Vision.EyeCondition.Open">
            <summary>
            Eyes are open.
            </summary>
            <since_tizen> 3 </since_tizen>
        </member>
        <member name="F:Tizen.Multimedia.Vision.EyeCondition.Closed">
            <summary>
            Eyes are closed.
            </summary>
            <since_tizen> 3 </since_tizen>
        </member>
        <member name="F:Tizen.Multimedia.Vision.EyeCondition.NotFound">
            <summary>
            The eyes condition wasn't determined.
            </summary>
            <since_tizen> 3 </since_tizen>
        </member>
        <member name="T:Tizen.Multimedia.Vision.FaceDetectionConfiguration">
            <summary>
            Represents a configuration of <see cref="T:Tizen.Multimedia.Vision.FaceDetector"/> instances.
            </summary>
            <feature>http://tizen.org/feature/vision.face_recognition</feature>
            <since_tizen> 4 </since_tizen>
        </member>
        <member name="M:Tizen.Multimedia.Vision.FaceDetectionConfiguration.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Tizen.Multimedia.Vision.FaceDetectionConfiguration"/> class.
            </summary>
            <exception cref="T:System.NotSupportedException">The feature is not supported.</exception>
            <since_tizen> 4</since_tizen>
        </member>
        <member name="P:Tizen.Multimedia.Vision.FaceDetectionConfiguration.ModelFilePath">
            <summary>
            Gets or sets the face detection haarcascade xml file for face detection.
            </summary>
            <exception cref="T:System.ArgumentNullException"><paramref name="value"/> is null.</exception>
            <since_tizen> 4 </since_tizen>
        </member>
        <member name="P:Tizen.Multimedia.Vision.FaceDetectionConfiguration.MinHeight">
            <summary>
            Gets or sets the minimum height of a face which will be detected.
            </summary>
            <remarks>
            Default value is null (all detected faces will be applied), which can be changed to specify the minimum face height.
            </remarks>
            <exception cref="T:System.ArgumentOutOfRangeException"><paramref name="value"/> is less than zero.</exception>
            <since_tizen> 4 </since_tizen>
        </member>
        <member name="P:Tizen.Multimedia.Vision.FaceDetectionConfiguration.MinWidth">
            <summary>
            Gets or sets the minimum width of a face which will be detected.
            </summary>
            <remarks>
            Default value is null (all detected faces will be applied), which can be changed to specify the minimum face width.
            </remarks>
            <exception cref="T:System.ArgumentOutOfRangeException"><paramref name="value"/> is less than zero.</exception>
            <since_tizen> 4 </since_tizen>
        </member>
        <member name="P:Tizen.Multimedia.Vision.FaceDetectionConfiguration.Roi">
            <summary>
            Gets or sets the roi of the face detection.
            </summary>
            <remarks>
            Default value is null (the roi will be a full image), which can be changed to specify the roi for face detection.
            </remarks>
            <exception cref="T:System.ArgumentOutOfRangeException">
                The width of <paramref name="value"/> is less than or equal to zero.<br/>
                -or-<br/>
                The height of <paramref name="value"/> is less than or equal to zero.<br/>
                -or-<br/>
                The x position of <paramref name="value"/> is less than zero.<br/>
                -or-<br/>
                The y position of <paramref name="value"/> is less than zero.
            </exception>
            <since_tizen> 4 </since_tizen>
        </member>
        <member name="T:Tizen.Multimedia.Vision.FaceDetectionResult">
            <summary>
            Provides the ability to get the result of face detection using <see cref="T:Tizen.Multimedia.Vision.InferenceModelConfiguration"/> and
            <see cref="M:Tizen.Multimedia.Vision.FaceDetector.DetectAsync(Tizen.Multimedia.Vision.MediaVisionSource,Tizen.Multimedia.Vision.InferenceModelConfiguration)"/>.
            </summary>
            <since_tizen> 6 </since_tizen>
        </member>
        <member name="P:Tizen.Multimedia.Vision.FaceDetectionResult.Confidence">
            <summary>
            Gets the confidence of detected face.
            </summary>
            <since_tizen> 6 </since_tizen>
        </member>
        <member name="P:Tizen.Multimedia.Vision.FaceDetectionResult.Location">
            <summary>
            Gets the location of detected face.
            </summary>
            <since_tizen> 6 </since_tizen>
        </member>
        <member name="T:Tizen.Multimedia.Vision.FaceDetector">
            <summary>
            Provides the ability to detect faces on image sources.
            </summary>
            <remarks>
            If you want to use face detection based on inference engine(<see cref="T:Tizen.Multimedia.Vision.InferenceBackendType"/>),
            please use <see cref="M:Tizen.Multimedia.Vision.FaceDetector.DetectAsync(Tizen.Multimedia.Vision.MediaVisionSource,Tizen.Multimedia.Vision.InferenceModelConfiguration)"/>.
            </remarks>
            <since_tizen> 4 </since_tizen>
        </member>
        <member name="M:Tizen.Multimedia.Vision.FaceDetector.DetectAsync(Tizen.Multimedia.Vision.MediaVisionSource)">
            <summary>
            Detects faces on the source.<br/>
            Each time when DetectAsync is called, a set of the detected faces at the media source are received asynchronously.
            </summary>
            <param name="source">The source of the media where faces will be detected.</param>
            <returns>A task that represents the asynchronous detect operation.</returns>
            <exception cref="T:System.ArgumentNullException"><paramref name="source"/> is null.</exception>
            <exception cref="T:System.NotSupportedException">
                The feature is not supported.<br/>
                -or-<br/>
                The format of <paramref name="source"/> is not supported.
            </exception>
            <feature>http://tizen.org/feature/vision.face_recognition</feature>
            <since_tizen> 4 </since_tizen>
        </member>
        <member name="M:Tizen.Multimedia.Vision.FaceDetector.DetectAsync(Tizen.Multimedia.Vision.MediaVisionSource,Tizen.Multimedia.Vision.FaceDetectionConfiguration)">
            <summary>
            Detects faces on the source.<br/>
            Each time when DetectAsync is called, a set of the detected faces at the media source are received asynchronously.
            </summary>
            <param name="source">The source of the media where faces will be detected.</param>
            <param name="config">The configuration of engine will be used for detecting. This value can be null.</param>
            <returns>A task that represents the asynchronous detect operation.</returns>
            <exception cref="T:System.ArgumentNullException"><paramref name="source"/> is null.</exception>
            <exception cref="T:System.NotSupportedException">The feature is not supported.</exception>
            <feature>http://tizen.org/feature/vision.face_recognition</feature>
            <since_tizen> 4 </since_tizen>
        </member>
        <member name="M:Tizen.Multimedia.Vision.FaceDetector.DetectAsync(Tizen.Multimedia.Vision.MediaVisionSource,Tizen.Multimedia.Vision.InferenceModelConfiguration)">
            <summary>
            Detects faces on the source image using inference engine set in <paramref name="config"/>.<br/>
            Each time when DetectAsync is called, a set of the detected faces at the media source are received asynchronously.
            </summary>
            <remarks>
            If there's no detected face, empty collection will be returned.
            </remarks>
            <feature>http://tizen.org/feature/vision.inference</feature>
            <feature>http://tizen.org/feature/vision.inference.face</feature>
            <param name="source">The source of the media where faces will be detected.</param>
            <param name="config">The engine's configuration that will be used for detecting.</param>
            <returns>
            A task that represents the asynchronous detect operation.<br/>
            If there's no detected face, empty collection will be returned.
            </returns>
            <exception cref="T:System.ArgumentNullException"><paramref name="source"/> or <paramref name="config"/> is null.</exception>
            <exception cref="T:System.InvalidOperationException">Internal error.</exception>
            <exception cref="T:System.NotSupportedException">The feature is not supported.</exception>
            <exception cref="T:System.UnauthorizedAccessException">The caller has no required privilege.</exception>
            <seealso cref="T:Tizen.Multimedia.Vision.InferenceModelConfiguration"/>
            <since_tizen> 6 </since_tizen>
        </member>
        <member name="T:Tizen.Multimedia.Vision.FaceRecognitionConfiguration">
            <summary>
            Represents a configuration of <see cref="T:Tizen.Multimedia.Vision.FaceRecognizer"/> instances.
            </summary>
            <feature>http://tizen.org/feature/vision.face_recognition</feature>
            <since_tizen> 4 </since_tizen>
        </member>
        <member name="M:Tizen.Multimedia.Vision.FaceRecognitionConfiguration.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Tizen.Multimedia.Vision.FaceRecognitionConfiguration"/> class.
            </summary>
            <exception cref="T:System.NotSupportedException">The feature is not supported.</exception>
            <since_tizen> 4 </since_tizen>
        </member>
        <member name="P:Tizen.Multimedia.Vision.FaceRecognitionConfiguration.ModelType">
            <summary>
            Gets or sets the method used for face recognition model learning.
            Default value is <see cref="F:Tizen.Multimedia.Vision.FaceRecognitionModelType.Lbph"/>.
            </summary>
            <exception cref="T:System.ArgumentException"><paramref name="value"/> is not valid.</exception>
            <since_tizen> 4 </since_tizen>
        </member>
        <member name="T:Tizen.Multimedia.Vision.FaceRecognitionModel">
            <summary>
            Represents the face recognition model interface.
            </summary>
            <feature>http://tizen.org/feature/vision.face_recognition</feature>
            <since_tizen> 4 </since_tizen>
        </member>
        <member name="M:Tizen.Multimedia.Vision.FaceRecognitionModel.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Tizen.Multimedia.Vision.FaceRecognitionModel"/> class.
            </summary>
            <exception cref="T:System.NotSupportedException">The feature is not supported.</exception>
            <since_tizen> 4 </since_tizen>
        </member>
        <member name="M:Tizen.Multimedia.Vision.FaceRecognitionModel.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Tizen.Multimedia.Vision.FaceRecognitionModel"/> class with the specified path.
            </summary>
            <remarks>
            Models saved by <see cref="M:Tizen.Multimedia.Vision.FaceRecognitionModel.Save(System.String)"/> can be loaded.
            </remarks>
            <param name="modelPath">Path to the model to load.</param>
            <exception cref="T:System.ArgumentNullException"><paramref name="modelPath"/> is null.</exception>
            <exception cref="T:System.IO.FileNotFoundException"><paramref name="modelPath"/> is invalid.</exception>
            <exception cref="T:System.NotSupportedException">
                The feature is not supported.<br/>
                -or-<br/>
                <paramref name="modelPath"/> is not supported format.
            </exception>
            <exception cref="T:System.UnauthorizedAccessException">No permission to access the specified file.</exception>
            <seealso cref="M:Tizen.Multimedia.Vision.FaceRecognitionModel.Save(System.String)"/>
            <since_tizen> 4 </since_tizen>
        </member>
        <member name="M:Tizen.Multimedia.Vision.FaceRecognitionModel.Finalize">
            <summary>
            Finalizes an instance of the FaceRecognitionModel class.
            </summary>
        </member>
        <member name="P:Tizen.Multimedia.Vision.FaceRecognitionModel.Labels">
            <summary>
            Gets labels that had been learned by the model.
            </summary>
            <exception cref="T:System.ObjectDisposedException">The <see cref="T:Tizen.Multimedia.Vision.FaceRecognitionModel"/> has already been disposed of.</exception>
            <since_tizen> 4</since_tizen>
        </member>
        <member name="M:Tizen.Multimedia.Vision.FaceRecognitionModel.Save(System.String)">
            <summary>
            Saves the recognition model to the file.
            </summary>
            <param name="path">Path to the file to save the model.</param>
            <exception cref="T:System.ArgumentNullException"><paramref name="path"/> is null.</exception>
            <exception cref="T:System.UnauthorizedAccessException">No permission to write to the specified path.</exception>
            <exception cref="T:System.ObjectDisposedException">The <see cref="T:Tizen.Multimedia.Vision.FaceRecognitionModel"/> has already been disposed of.</exception>
            <exception cref="T:System.IO.DirectoryNotFoundException">The directory for <paramref name="path"/> does not exist.</exception>
            <since_tizen> 4 </since_tizen>
        </member>
        <member name="M:Tizen.Multimedia.Vision.FaceRecognitionModel.Add(Tizen.Multimedia.Vision.MediaVisionSource,System.Int32)">
            <summary>
            Adds the face image example to be used for face recognition model learning.
            </summary>
            <param name="source">The <see cref="T:Tizen.Multimedia.Vision.MediaVisionSource"/> that contains face image.</param>
            <param name="label">The label that identifies face for which example is adding.
                Specify the same labels for the face images of a single person when calling this method.
                Has to be unique for each face.</param>
            <exception cref="T:System.ArgumentNullException"><paramref name="source"/> is null.</exception>
            <exception cref="T:System.ObjectDisposedException">
                The <see cref="T:Tizen.Multimedia.Vision.FaceRecognitionModel"/> has already been disposed of.<br/>
                -or-<br/>
                <paramref name="source"/> has already been dispose of.
            </exception>
            <seealso cref="M:Tizen.Multimedia.Vision.FaceRecognitionModel.Learn(Tizen.Multimedia.Vision.FaceRecognitionConfiguration)"/>
            <since_tizen> 4 </since_tizen>
        </member>
        <member name="M:Tizen.Multimedia.Vision.FaceRecognitionModel.Add(Tizen.Multimedia.Vision.MediaVisionSource,System.Int32,Tizen.Multimedia.Rectangle)">
            <summary>
            Adds the face image example to be used for face recognition model learning.
            </summary>
            <param name="source">The <see cref="T:Tizen.Multimedia.Vision.MediaVisionSource"/> that contains face image.</param>
            <param name="label">The label that identifies face for which example is adding.
                Specify the same labels for the face images of a single person when calling this method.
                Has to be unique for each face.</param>
            <param name="area">The rectangular region of the face image at the source image.</param>
            <exception cref="T:System.ArgumentNullException"><paramref name="source"/> is null.</exception>
            <exception cref="T:System.ObjectDisposedException">
                The <see cref="T:Tizen.Multimedia.Vision.FaceRecognitionModel"/> has already been disposed of.<br/>
                -or-<br/>
                <paramref name="source"/> has already been dispose of.
            </exception>
            <seealso cref="M:Tizen.Multimedia.Vision.FaceRecognitionModel.Learn(Tizen.Multimedia.Vision.FaceRecognitionConfiguration)"/>
            <since_tizen> 4 </since_tizen>
        </member>
        <member name="M:Tizen.Multimedia.Vision.FaceRecognitionModel.Remove(System.Int32)">
            <summary>
            Removes all face examples added with the specified label.
            </summary>
            <param name="label">The label that identifies face for which examples will be removed.</param>
            <exception cref="T:System.ObjectDisposedException">The <see cref="T:Tizen.Multimedia.Vision.FaceRecognitionModel"/> has already been disposed of.</exception>
            <returns>true if the examples are successfully removed; otherwise, false if there is no example labeled with the specified label.</returns>
            <seealso cref="M:Tizen.Multimedia.Vision.FaceRecognitionModel.Add(Tizen.Multimedia.Vision.MediaVisionSource,System.Int32)"/>
            <seealso cref="M:Tizen.Multimedia.Vision.FaceRecognitionModel.Add(Tizen.Multimedia.Vision.MediaVisionSource,System.Int32,Tizen.Multimedia.Rectangle)"/>
            <since_tizen> 4 </since_tizen>
        </member>
        <member name="M:Tizen.Multimedia.Vision.FaceRecognitionModel.Reset">
            <summary>
            Removes all face examples.
            </summary>
            <exception cref="T:System.ObjectDisposedException">The <see cref="T:Tizen.Multimedia.Vision.FaceRecognitionModel"/> has already been disposed of.</exception>
            <since_tizen> 4 </since_tizen>
        </member>
        <member name="M:Tizen.Multimedia.Vision.FaceRecognitionModel.Learn">
            <summary>
            Learns the face recognition model.
            </summary>
            <remarks>
            Before you start the learning process, face recognition models have to be filled with the training data - face image examples.
            These examples have to be provided by <see cref="M:Tizen.Multimedia.Vision.FaceRecognitionModel.Add(Tizen.Multimedia.Vision.MediaVisionSource,System.Int32)"/> or <see cref="M:Tizen.Multimedia.Vision.FaceRecognitionModel.Add(Tizen.Multimedia.Vision.MediaVisionSource,System.Int32,Tizen.Multimedia.Rectangle)"/>.
            Recognition accuracy is usually increased when the different examples of the identical faces are added more and more.
            But it depends on the used learning algorithm.
            </remarks>
            <exception cref="T:System.ObjectDisposedException">The <see cref="T:Tizen.Multimedia.Vision.FaceRecognitionModel"/> has already been disposed of.</exception>
            <exception cref="T:System.InvalidOperationException">No examples added.</exception>
            <seealso cref="M:Tizen.Multimedia.Vision.FaceRecognitionModel.Add(Tizen.Multimedia.Vision.MediaVisionSource,System.Int32)"/>
            <seealso cref="M:Tizen.Multimedia.Vision.FaceRecognitionModel.Add(Tizen.Multimedia.Vision.MediaVisionSource,System.Int32,Tizen.Multimedia.Rectangle)"/>
            <since_tizen> 4 </since_tizen>
        </member>
        <member name="M:Tizen.Multimedia.Vision.FaceRecognitionModel.Learn(Tizen.Multimedia.Vision.FaceRecognitionConfiguration)">
            <summary>
            Learns the face recognition model with <see cref="T:Tizen.Multimedia.Vision.FaceRecognitionConfiguration"/>.
            </summary>
            <remarks>
            Before you start the learning process, face recognition models have to be filled with the training data - face image examples.
            These examples have to be provided by <see cref="M:Tizen.Multimedia.Vision.FaceRecognitionModel.Add(Tizen.Multimedia.Vision.MediaVisionSource,System.Int32)"/> or <see cref="M:Tizen.Multimedia.Vision.FaceRecognitionModel.Add(Tizen.Multimedia.Vision.MediaVisionSource,System.Int32,Tizen.Multimedia.Rectangle)"/>.
            Recognition accuracy is usually increased when the different examples of the identical faces are added more and more.
            But it depends on the used learning algorithm.
            </remarks>
            <param name="config">The configuration used for learning of the recognition models. This value can be null.</param>
            <exception cref="T:System.ObjectDisposedException">
                The <see cref="T:Tizen.Multimedia.Vision.FaceRecognitionModel"/> has already been disposed of.<br/>
                -or-<br/>
                <paramref name="config"/> has already been disposed of.
            </exception>
            <exception cref="T:System.InvalidOperationException">No examples added.</exception>
            <seealso cref="M:Tizen.Multimedia.Vision.FaceRecognitionModel.Add(Tizen.Multimedia.Vision.MediaVisionSource,System.Int32)"/>
            <seealso cref="M:Tizen.Multimedia.Vision.FaceRecognitionModel.Add(Tizen.Multimedia.Vision.MediaVisionSource,System.Int32,Tizen.Multimedia.Rectangle)"/>
            <since_tizen> 4 </since_tizen>
        </member>
        <member name="M:Tizen.Multimedia.Vision.FaceRecognitionModel.Dispose">
            <summary>
            Releases all the resources used by the <see cref="T:Tizen.Multimedia.Vision.FaceRecognitionModel"/> object.
            </summary>
            <since_tizen> 4 </since_tizen>
        </member>
        <member name="M:Tizen.Multimedia.Vision.FaceRecognitionModel.Dispose(System.Boolean)">
            <summary>
            Releases the resources used by the <see cref="T:Tizen.Multimedia.Vision.FaceRecognitionModel"/> object.
            </summary>
            <param name="disposing">
            true to release both managed and unmanaged resources; otherwise false to release only unmanaged resources.
            </param>
            <since_tizen> 4 </since_tizen>
        </member>
        <member name="T:Tizen.Multimedia.Vision.FaceRecognitionModelType">
            <summary>
            Specifies the face recognition model learning algorithms.
            </summary>
            <since_tizen> 4 </since_tizen>
        </member>
        <member name="F:Tizen.Multimedia.Vision.FaceRecognitionModelType.EigenFaces">
            <summary>
            Eigenfaces.
            </summary>
            <since_tizen> 3 </since_tizen>
        </member>
        <member name="F:Tizen.Multimedia.Vision.FaceRecognitionModelType.FisherFaces">
            <summary>
            Fisherfaces.
            </summary>
            <since_tizen> 3 </since_tizen>
        </member>
        <member name="F:Tizen.Multimedia.Vision.FaceRecognitionModelType.Lbph">
            <summary>
            Local Binary Patterns Histograms (LBPH); The default type.
            </summary>
            <since_tizen> 3 </since_tizen>
        </member>
        <member name="T:Tizen.Multimedia.Vision.FaceRecognitionResult">
            <summary>
            Represents the result of <see cref="T:Tizen.Multimedia.Vision.FaceRecognizer"/> operations.
            </summary>
            <since_tizen> 4 </since_tizen>
        </member>
        <member name="P:Tizen.Multimedia.Vision.FaceRecognitionResult.Success">
            <summary>
            Gets the value indicating the recognition is successful.
            </summary>
            <since_tizen> 4 </since_tizen>
        </member>
        <member name="P:Tizen.Multimedia.Vision.FaceRecognitionResult.Label">
            <summary>
            Gets the label of the recognized face.
            </summary>
            <since_tizen> 4 </since_tizen>
        </member>
        <member name="P:Tizen.Multimedia.Vision.FaceRecognitionResult.Area">
            <summary>
            Gets the location of the recognized face.
            </summary>
            <since_tizen> 4 </since_tizen>
        </member>
        <member name="P:Tizen.Multimedia.Vision.FaceRecognitionResult.Confidence">
            <summary>
            The confidence of the recognition model that face has been recognized correctly (value from 0.0 to 1.0).
            No faces were recognized if confidence was 0.0. When model has been learned on large amount of examples,
            threshold for this value can be high (0.85-0.95). If model was learned for small amount of examples,
            then threshold can be reduced (0.5-0.85).
            </summary>
            <since_tizen> 4 </since_tizen>
        </member>
        <member name="T:Tizen.Multimedia.Vision.FaceRecognizer">
            <summary>
            Provides the ability to recognize faces, face expressions, and eye condition on image sources.
            </summary>
            <since_tizen> 4 </since_tizen>
        </member>
        <member name="M:Tizen.Multimedia.Vision.FaceRecognizer.RecognizeAsync(Tizen.Multimedia.Vision.MediaVisionSource,Tizen.Multimedia.Vision.FaceRecognitionModel)">
            <summary>
            Performs face recognition on the source with <see cref="T:Tizen.Multimedia.Vision.FaceRecognitionModel"/>.
            </summary>
            <param name="source">The <see cref="T:Tizen.Multimedia.Vision.MediaVisionSource"/> of the media to recognize faces for.</param>
            <param name="recognitionModel">The <see cref="T:Tizen.Multimedia.Vision.FaceRecognitionConfiguration"/> to be used for recognition.</param>
            <returns>A task that represents the asynchronous recognition operation.</returns>
            <exception cref="T:System.ArgumentNullException">
                <paramref name="source"/> is null.<br/>
                -or-<br/>
                <paramref name="recognitionModel"/> is null.
            </exception>
            <exception cref="T:System.NotSupportedException">The feature is not supported.</exception>
            <exception cref="T:System.ObjectDisposedException"><paramref name="source"/> has already been disposed of.</exception>
            <exception cref="T:System.InvalidOperationException"><paramref name="recognitionModel"/> is untrained model.</exception>
            <feature>http://tizen.org/feature/vision.face_recognition</feature>
            <since_tizen> 4 </since_tizen>
        </member>
        <member name="M:Tizen.Multimedia.Vision.FaceRecognizer.RecognizeAsync(Tizen.Multimedia.Vision.MediaVisionSource,Tizen.Multimedia.Vision.FaceRecognitionModel,Tizen.Multimedia.Rectangle)">
            <summary>
            Performs face recognition on the source with <see cref="T:Tizen.Multimedia.Vision.FaceRecognitionModel"/> and a bounding box.
            </summary>
            <param name="source">The <see cref="T:Tizen.Multimedia.Vision.MediaVisionSource"/> of the media to recognize faces for.</param>
            <param name="recognitionModel">The <see cref="T:Tizen.Multimedia.Vision.FaceRecognitionModel"/> to be used for recognition.</param>
            <param name="bound">Rectangular box bounding face image on the source.</param>
            <returns>A task that represents the asynchronous recognition operation.</returns>
            <exception cref="T:System.ArgumentNullException">
                <paramref name="source"/> is null.<br/>
                -or-<br/>
                <paramref name="recognitionModel"/> is null.
            </exception>
            <exception cref="T:System.NotSupportedException">The feature is not supported.</exception>
            <exception cref="T:System.ObjectDisposedException"><paramref name="source"/> has already been disposed of.</exception>
            <exception cref="T:System.InvalidOperationException"><paramref name="recognitionModel"/> is untrained model.</exception>
            <feature>http://tizen.org/feature/vision.face_recognition</feature>
            <since_tizen> 4 </since_tizen>
        </member>
        <member name="M:Tizen.Multimedia.Vision.FaceRecognizer.RecognizeAsync(Tizen.Multimedia.Vision.MediaVisionSource,Tizen.Multimedia.Vision.FaceRecognitionModel,Tizen.Multimedia.Vision.FaceRecognitionConfiguration)">
            <summary>
            Performs face recognition on the source with <see cref="T:Tizen.Multimedia.Vision.FaceRecognitionModel"/> and <see cref="T:Tizen.Multimedia.Vision.FaceRecognitionConfiguration"/>.
            </summary>
            <param name="source">The <see cref="T:Tizen.Multimedia.Vision.MediaVisionSource"/> of the media to recognize faces for.</param>
            <param name="recognitionModel">The <see cref="T:Tizen.Multimedia.Vision.FaceRecognitionModel"/> to be used for recognition.</param>
            <param name="config">The configuration used for recognition. This value can be null.</param>
            <returns>A task that represents the asynchronous recognition operation.</returns>
            <exception cref="T:System.ArgumentNullException">
                <paramref name="source"/> is null.<br/>
                -or-<br/>
                <paramref name="recognitionModel"/> is null.
            </exception>
            <exception cref="T:System.NotSupportedException">The feature is not supported.</exception>
            <exception cref="T:System.ObjectDisposedException">
                <paramref name="source"/> has already been disposed of.<br/>
                -or-<br/>
                <paramref name="config"/> has already been disposed of.
            </exception>
            <exception cref="T:System.InvalidOperationException"><paramref name="recognitionModel"/> is untrained model.</exception>
            <feature>http://tizen.org/feature/vision.face_recognition</feature>
            <since_tizen> 4 </since_tizen>
        </member>
        <member name="M:Tizen.Multimedia.Vision.FaceRecognizer.RecognizeAsync(Tizen.Multimedia.Vision.MediaVisionSource,Tizen.Multimedia.Vision.FaceRecognitionModel,Tizen.Multimedia.Rectangle,Tizen.Multimedia.Vision.FaceRecognitionConfiguration)">
            <summary>
            Performs face recognition on the source with <see cref="T:Tizen.Multimedia.Vision.FaceRecognitionModel"/>, <see cref="T:Tizen.Multimedia.Vision.FaceRecognitionConfiguration"/>
            and a bounding box.
            </summary>
            <param name="source">The <see cref="T:Tizen.Multimedia.Vision.MediaVisionSource"/> of the media to recognize faces for.</param>
            <param name="recognitionModel">The <see cref="T:Tizen.Multimedia.Vision.FaceRecognitionModel"/> to be used for recognition.</param>
            <param name="bound">Rectangular box bounding face image on the source.</param>
            <param name="config">The <see cref="T:Tizen.Multimedia.Vision.FaceRecognitionConfiguration"/> used for recognition. This value can be null.</param>
            <returns>A task that represents the asynchronous recognition operation.</returns>
            <exception cref="T:System.ArgumentNullException">
                <paramref name="source"/> is null.<br/>
                -or-<br/>
                <paramref name="recognitionModel"/> is null.
            </exception>
            <exception cref="T:System.NotSupportedException">The feature is not supported.</exception>
            <exception cref="T:System.ObjectDisposedException">
                <paramref name="source"/> has already been disposed of.<br/>
                -or-<br/>
                <paramref name="config"/> has already been disposed of.
            </exception>
            <exception cref="T:System.InvalidOperationException"><paramref name="recognitionModel"/> is untrained model.</exception>
            <feature>http://tizen.org/feature/vision.face_recognition</feature>
            <since_tizen> 4 </since_tizen>
        </member>
        <member name="M:Tizen.Multimedia.Vision.FaceRecognizer.RecognizeEyeConditionAsync(Tizen.Multimedia.Vision.MediaVisionSource,Tizen.Multimedia.Rectangle)">
            <summary>
            Determines eye-blink condition on media source.
            </summary>
            <param name="source">The source of the media to recognize eye-blink condition for.</param>
            <param name="bound">The bounding the face at the source.</param>
            <returns>A task that represents the asynchronous recognition operation.</returns>
            <exception cref="T:System.ArgumentNullException"><paramref name="source"/> is null.</exception>
            <exception cref="T:System.ObjectDisposedException"><paramref name="source"/> has already been disposed of.</exception>
            <exception cref="T:System.NotSupportedException">The feature is not supported.</exception>
            <feature>http://tizen.org/feature/vision.face_recognition</feature>
            <since_tizen> 4 </since_tizen>
        </member>
        <member name="M:Tizen.Multimedia.Vision.FaceRecognizer.RecognizeEyeConditionAsync(Tizen.Multimedia.Vision.MediaVisionSource,Tizen.Multimedia.Rectangle,Tizen.Multimedia.Vision.FaceRecognitionConfiguration)">
            <summary>
            Determines eye-blink condition on the media source.
            </summary>
            <param name="source">The source of the media to recognize eye-blink condition for.</param>
            <param name="bound">The bounding the face at the source.</param>
            <param name="config">The configuration used for eye-blink condition recognition. This value can be null.</param>
            <returns>A task that represents the asynchronous recognition operation.</returns>
            <exception cref="T:System.ArgumentNullException"><paramref name="source"/> is null.</exception>
            <exception cref="T:System.ObjectDisposedException">
                <paramref name="source"/> has already been disposed of.<br/>
                -or-<br/>
                <paramref name="config"/> has already been disposed of.
            </exception>
            <exception cref="T:System.NotSupportedException">The feature is not supported.</exception>
            <feature>http://tizen.org/feature/vision.face_recognition</feature>
            <since_tizen> 4 </since_tizen>
        </member>
        <member name="M:Tizen.Multimedia.Vision.FaceRecognizer.RecognizeFacialExpressionAsync(Tizen.Multimedia.Vision.MediaVisionSource,Tizen.Multimedia.Rectangle)">
            <summary>
            Determines facial expression on media source.
            </summary>
            <param name="source">The source of the media to recognize facial expression for.</param>
            <param name="bound">The location bounding the face at the source.</param>
            <returns>A task that represents the asynchronous recognition operation.</returns>
            <exception cref="T:System.ArgumentNullException"><paramref name="source"/> is null.</exception>
            <exception cref="T:System.ObjectDisposedException"><paramref name="source"/> has already been disposed of.</exception>
            <exception cref="T:System.NotSupportedException">The feature is not supported.</exception>
            <feature>http://tizen.org/feature/vision.face_recognition</feature>
            <since_tizen> 4 </since_tizen>
        </member>
        <member name="M:Tizen.Multimedia.Vision.FaceRecognizer.RecognizeFacialExpressionAsync(Tizen.Multimedia.Vision.MediaVisionSource,Tizen.Multimedia.Rectangle,Tizen.Multimedia.Vision.FaceRecognitionConfiguration)">
            <summary>
            Determines facial expression on media source.
            </summary>
            <param name="source">The source of the media to recognize facial expression for.</param>
            <param name="bound">The location bounding the face at the source.</param>
            <param name="config">The configuration used for expression recognition. This value can be null.</param>
            <returns>A task that represents the asynchronous recognition operation.</returns>
            <exception cref="T:System.ArgumentNullException"><paramref name="source"/> is null.</exception>
            <exception cref="T:System.ObjectDisposedException">
                <paramref name="source"/> has already been disposed of.<br/>
                -or-<br/>
                <paramref name="config"/> has already been disposed of.
            </exception>
            <exception cref="T:System.NotSupportedException">The feature is not supported.</exception>
            <feature>http://tizen.org/feature/vision.face_recognition</feature>
            <since_tizen> 4 </since_tizen>
        </member>
        <member name="T:Tizen.Multimedia.Vision.FaceTracker">
            <summary>
            Provides the ability to track faces on image sources.
            </summary>
            <since_tizen> 4 </since_tizen>
        </member>
        <member name="M:Tizen.Multimedia.Vision.FaceTracker.TrackAsync(Tizen.Multimedia.Vision.MediaVisionSource,Tizen.Multimedia.Vision.FaceTrackingModel,System.Boolean)">
            <summary>
            Performs face tracking on the source with the trackingModel.
            </summary>
            <param name="source">The source of the media to recognize face for.</param>
            <param name="trackingModel">The model will be used for tracking.</param>
            <param name="doLearn">The value indicating whether model learning while tracking. If it is true, then the model will try to learn
            (if it supports learning feature), otherwise the model will be not learned during the invoking tracking iteration.
            Learning process improves tracking correctness, but can decrease tracking performance.</param>
            <returns>A task that represents the asynchronous tracking operation.</returns>
            <exception cref="T:System.ArgumentNullException">
                <paramref name="source"/> is null.<br/>
                -or-<br/>
                <paramref name="trackingModel"/> is null.
            </exception>
            <exception cref="T:System.ObjectDisposedException">
                <paramref name="source"/> has already been disposed of.<br/>
                -or-<br/>
                <paramref name="trackingModel"/> has already been disposed of.
            </exception>
            <exception cref="T:System.NotSupportedException">The feature is not supported.</exception>
            <exception cref="T:System.InvalidOperationException"><paramref name="trackingModel"/> is not prepared.</exception>
            <feature>http://tizen.org/feature/vision.face_recognition</feature>
            <since_tizen> 4 </since_tizen>
        </member>
        <member name="T:Tizen.Multimedia.Vision.FaceTrackingModel">
            <summary>
            Represents the face tracking model.
            </summary>
            <feature>http://tizen.org/feature/vision.face_recognition</feature>
            <since_tizen> 4 </since_tizen>
        </member>
        <member name="M:Tizen.Multimedia.Vision.FaceTrackingModel.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Tizen.Multimedia.Vision.FaceTrackingModel"/> class.
            </summary>
            <exception cref="T:System.NotSupportedException">The feature is not supported.</exception>
            <since_tizen> 4 </since_tizen>
        </member>
        <member name="M:Tizen.Multimedia.Vision.FaceTrackingModel.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Tizen.Multimedia.Vision.FaceTrackingModel"/> class with the specified path.
            </summary>
            <remarks>
            Models saved by <see cref="M:Tizen.Multimedia.Vision.FaceTrackingModel.Save(System.String)"/> can be loaded.
            </remarks>
            <param name="modelPath">Path to the model to load.</param>
            <exception cref="T:System.ArgumentNullException"><paramref name="modelPath"/> is null.</exception>
            <exception cref="T:System.IO.FileNotFoundException"><paramref name="modelPath"/> is invalid.</exception>
            <exception cref="T:System.NotSupportedException">
                The feature is not supported.<br/>
                -or-<br/>
                <paramref name="modelPath"/> is not supported format.
            </exception>
            <exception cref="T:System.UnauthorizedAccessException">No permission to access the specified file.</exception>
            <seealso cref="M:Tizen.Multimedia.Vision.FaceTrackingModel.Save(System.String)"/>
            <since_tizen> 4 </since_tizen>
        </member>
        <member name="M:Tizen.Multimedia.Vision.FaceTrackingModel.Finalize">
            <summary>
            Finalizes an instance of the FaceTrackingModel class.
            </summary>
        </member>
        <member name="M:Tizen.Multimedia.Vision.FaceTrackingModel.Prepare(Tizen.Multimedia.Vision.MediaVisionSource,Tizen.Multimedia.Vision.Quadrangle)">
             <summary>
             Initializes the tracking model by the location of the face to be tracked.
            
             It is usually called once after the tracking model is created, and each time before tracking
             is started for the new sequence of sources, which is not the direct continuation of
             the sequence for which tracking has been performed before. But, it is allowed to call it
             between tracking sessions to allow Media Vision start to track more accurately.
             </summary>
             <remarks>
             <paramref name="region"/> needs to be the position of the face to be tracked when called first time for the tracking model.
             <paramref name="region"/> is fitted to the valid region of <paramref name="source"/> if <paramref name="region"/> has invalid points.
             </remarks>
             <param name="source">The source where face location is specified.
                 Usually it is the first frame of the video or the first image in the continuous
                 image sequence planned to be used for tracking.</param>
             <param name="region">The region determining position of the face to be tracked on the source.
                 If null, then tracking model will try to find previously tracked face by itself.</param>
             <exception cref="T:System.ArgumentNullException"><paramref name="source"/> is null.</exception>
             <exception cref="T:System.ObjectDisposedException">
                 The <see cref="T:Tizen.Multimedia.Vision.FaceTrackingModel"/> has already been disposed of.<br/>
                 -or-<br/>
                 <paramref name="source"/> has already bean disposed of.
             </exception>
             <since_tizen> 4 </since_tizen>
        </member>
        <member name="M:Tizen.Multimedia.Vision.FaceTrackingModel.Save(System.String)">
            <summary>
            Saves the tracking model to the file.
            </summary>
            <param name="path">Path to the file to save the model.</param>
            <exception cref="T:System.ArgumentNullException"><paramref name="path"/> is null.</exception>
            <exception cref="T:System.UnauthorizedAccessException">No permission to write to the specified path.</exception>
            <exception cref="T:System.ObjectDisposedException">The <see cref="T:Tizen.Multimedia.Vision.FaceTrackingModel"/> has already been disposed of.</exception>
            <exception cref="T:System.IO.DirectoryNotFoundException">The directory for <paramref name="path"/> does not exist.</exception>
            <since_tizen> 4 </since_tizen>
        </member>
        <member name="M:Tizen.Multimedia.Vision.FaceTrackingModel.Dispose">
            <summary>
            Releases all the resources used by the <see cref="T:Tizen.Multimedia.Vision.FaceTrackingModel"/> object.
            </summary>
            <since_tizen> 4 </since_tizen>
        </member>
        <member name="M:Tizen.Multimedia.Vision.FaceTrackingModel.Dispose(System.Boolean)">
            <summary>
            Releases the resources used by the <see cref="T:Tizen.Multimedia.Vision.FaceTrackingModel"/> object.
            </summary>
            <param name="disposing">
            true to release both managed and unmanaged resources; otherwise false to release only unmanaged resources.
            </param>
            <since_tizen> 4 </since_tizen>
        </member>
        <member name="T:Tizen.Multimedia.Vision.FaceTrackingResult">
            <summary>
            Represents the result of face tracking operation.
            </summary>
            <since_tizen> 4 </since_tizen>
        </member>
        <member name="P:Tizen.Multimedia.Vision.FaceTrackingResult.Success">
            <summary>
            Gets the value indicating the tracking is successful.
            </summary>
            <since_tizen> 4</since_tizen>
        </member>
        <member name="P:Tizen.Multimedia.Vision.FaceTrackingResult.Region">
            <summary>
            Gets the region which determines the new position of the tracked face on the source.
            </summary>
            <since_tizen> 4 </since_tizen>
        </member>
        <member name="P:Tizen.Multimedia.Vision.FaceTrackingResult.Confidence">
            <summary>
            The confidence of the tracking model that a new location of the face was determined correctly
            (value from 0.0 to 1.0). If no location was determined during the last track iteration, then the value is 0.0.
            </summary>
            <since_tizen> 4 </since_tizen>
        </member>
        <member name="T:Tizen.Multimedia.Vision.FacialExpression">
            <summary>
            Specifies the expression types for faces.
            </summary>
            <since_tizen> 4 </since_tizen>
        </member>
        <member name="F:Tizen.Multimedia.Vision.FacialExpression.Unknown">
            <summary>
            Unknown face expression.
            </summary>
            <since_tizen> 3 </since_tizen>
        </member>
        <member name="F:Tizen.Multimedia.Vision.FacialExpression.Neutral">
            <summary>
            Face expression is neutral.
            </summary>
            <since_tizen> 3 </since_tizen>
        </member>
        <member name="F:Tizen.Multimedia.Vision.FacialExpression.Smile">
            <summary>
            Face expression is smiling.
            </summary>
            <since_tizen> 3 </since_tizen>
        </member>
        <member name="F:Tizen.Multimedia.Vision.FacialExpression.Sadness">
            <summary>
            Face expression is sadness.
            </summary>
            <since_tizen> 3 </since_tizen>
        </member>
        <member name="F:Tizen.Multimedia.Vision.FacialExpression.Surprise">
            <summary>
            Face expression is surprise.
            </summary>
            <since_tizen> 3 </since_tizen>
        </member>
        <member name="F:Tizen.Multimedia.Vision.FacialExpression.Anger">
            <summary>
            Face expression is anger.
            </summary>
            <since_tizen> 3 </since_tizen>
        </member>
        <member name="F:Tizen.Multimedia.Vision.FacialExpression.Fear">
            <summary>
            Face expression is fear.
            </summary>
            <since_tizen> 3 </since_tizen>
        </member>
        <member name="F:Tizen.Multimedia.Vision.FacialExpression.Disgust">
            <summary>
            Face expression is disgust.
            </summary>
            <since_tizen> 3 </since_tizen>
        </member>
        <member name="T:Tizen.Multimedia.Vision.FacialLandmarkDetector">
            <summary>
            Provides the ability to detect facial landmarks on image source using inference engine.
            </summary>
            <since_tizen> 6 </since_tizen>
        </member>
        <member name="M:Tizen.Multimedia.Vision.FacialLandmarkDetector.DetectAsync(Tizen.Multimedia.Vision.MediaVisionSource,Tizen.Multimedia.Vision.InferenceModelConfiguration)">
            <summary>
            Detects facial landmarks on the source image using inference engine set in <paramref name="config"/>.<br/>
            </summary>
            <remarks>
            To set region-of-interest area in source image, please set <see cref="P:Tizen.Multimedia.Vision.InferenceModelConfiguration.Roi"/>.
            If not set, full image area will be used to detect facial landmark.
            </remarks>
            <feature>http://tizen.org/feature/vision.inference</feature>
            <feature>http://tizen.org/feature/vision.inference.face</feature>
            <param name="source">The source of the media where faces will be detected.</param>
            <param name="config">The engine's configuration that will be used for detecting.</param>
            <returns>
            A task that represents the asynchronous detect operation.<br/>
            If there's no detected facial landmark, empty collection will be returned.
            </returns>
            <exception cref="T:System.ArgumentNullException"><paramref name="source"/> or <paramref name="config"/> is null.</exception>
            <exception cref="T:System.InvalidOperationException">Internal error.</exception>
            <exception cref="T:System.NotSupportedException">The feature is not supported.</exception>
            <exception cref="T:System.UnauthorizedAccessException">The caller has no required privilege.</exception>
            <seealso cref="T:Tizen.Multimedia.Vision.InferenceModelConfiguration"/>
            <since_tizen> 6 </since_tizen>
        </member>
        <member name="T:Tizen.Multimedia.Vision.ImageClassificationResult">
            <summary>
            Provides the ability to get the result of face detection using <see cref="T:Tizen.Multimedia.Vision.InferenceModelConfiguration"/> and
            <see cref="T:Tizen.Multimedia.Vision.ImageClassifier"/>.
            </summary>
            <since_tizen> 6 </since_tizen>
        </member>
        <member name="P:Tizen.Multimedia.Vision.ImageClassificationResult.Indice">
            <summary>
            Gets the indice of detected object.
            </summary>
            <since_tizen> 6 </since_tizen>
        </member>
        <member name="P:Tizen.Multimedia.Vision.ImageClassificationResult.Name">
            <summary>
            Gets the name of detected object.
            </summary>
            <since_tizen> 6 </since_tizen>
        </member>
        <member name="P:Tizen.Multimedia.Vision.ImageClassificationResult.Confidence">
            <summary>
            Gets the confidence of detected object.
            </summary>
            <since_tizen> 6 </since_tizen>
        </member>
        <member name="T:Tizen.Multimedia.Vision.ImageClassifier">
            <summary>
            Provides the ability to classify image objects on image source using inference engine.
            </summary>
            <since_tizen> 6 </since_tizen>
        </member>
        <member name="M:Tizen.Multimedia.Vision.ImageClassifier.ClassifyAsync(Tizen.Multimedia.Vision.MediaVisionSource,Tizen.Multimedia.Vision.InferenceModelConfiguration)">
            <summary>
            Classifies image objects on the source image using inference engine set in <paramref name="config"/>.<br/>
            Each time when DetectAsync is called, a set of the detected faces at the media source are received asynchronously.
            </summary>
            <feature>http://tizen.org/feature/vision.inference</feature>
            <feature>http://tizen.org/feature/vision.inference.image</feature>
            <param name="source">The source of the media where faces will be detected.</param>
            <param name="config">The engine's configuration that will be used for classifying.</param>
            <returns>
            A task that represents the asynchronous classify operation.<br/>
            If there's no classified image object, empty collection will be returned.
            </returns>
            <exception cref="T:System.ArgumentNullException"><paramref name="source"/> or <paramref name="config"/> is null.</exception>
            <exception cref="T:System.InvalidOperationException">Internal error.</exception>
            <exception cref="T:System.NotSupportedException">The feature is not supported.</exception>
            <exception cref="T:System.UnauthorizedAccessException">The caller has no required privilege.</exception>
            <seealso cref="T:Tizen.Multimedia.Vision.InferenceModelConfiguration"/>
            <since_tizen> 6 </since_tizen>
        </member>
        <member name="T:Tizen.Multimedia.Vision.ImageFillConfiguration">
            <summary>
            Represents a configuration of fill operations of <see cref="T:Tizen.Multimedia.Vision.ImageObject"/> instances.
            </summary>
            <feature>http://tizen.org/feature/vision.image_recognition</feature>
            <since_tizen> 4 </since_tizen>
        </member>
        <member name="F:Tizen.Multimedia.Vision.ImageFillConfiguration.DefaultScaleFactor">
            <summary>
            A read-only field that represents the default value of <see cref="P:Tizen.Multimedia.Vision.ImageFillConfiguration.ObjectScaleFactor"/>.
            </summary>
            <since_tizen> 4 </since_tizen>
        </member>
        <member name="F:Tizen.Multimedia.Vision.ImageFillConfiguration.DefaultMaxKeypoints">
            <summary>
            A read-only field that represents the default value of <see cref="P:Tizen.Multimedia.Vision.ImageFillConfiguration.ObjectMaxKeyPoints"/>.
            </summary>
            <since_tizen> 4</since_tizen>
        </member>
        <member name="M:Tizen.Multimedia.Vision.ImageFillConfiguration.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Tizen.Multimedia.Vision.ImageFillConfiguration"/> class.
            </summary>
            <exception cref="T:System.NotSupportedException">The feature is not supported.</exception>
            <since_tizen> 4 </since_tizen>
        </member>
        <member name="P:Tizen.Multimedia.Vision.ImageFillConfiguration.ObjectScaleFactor">
            <summary>
            Gets or sets the scale factor the image to be recognized.<br/>
            The value of the factor will be used for resizing of the images (objects) for recognition.
            The default value is 1.2.
            </summary>
            <exception cref="T:System.ObjectDisposedException">The <see cref="T:Tizen.Multimedia.Vision.ImageFillConfiguration"/> already has been disposed of.</exception>
            <since_tizen> 4 </since_tizen>
        </member>
        <member name="P:Tizen.Multimedia.Vision.ImageFillConfiguration.ObjectMaxKeyPoints">
            <summary>
            Gets or sets the maximum key points should be detected on the image.<br/>
            The maximal number of key points can be selected on the image object to calculate descriptors.
            This key points will be used for image (object) recognition and has to be specified as integer number.
            The default value is 1000.
            </summary>
            <exception cref="T:System.ObjectDisposedException">The <see cref="T:Tizen.Multimedia.Vision.ImageFillConfiguration"/> already has been disposed of.</exception>
            <since_tizen> 4 </since_tizen>
        </member>
        <member name="T:Tizen.Multimedia.Vision.ImageObject">
            <summary>
            Represents an image object.
            </summary>
            <feature>http://tizen.org/feature/vision.image_recognition</feature>
            <since_tizen> 4 </since_tizen>
        </member>
        <member name="M:Tizen.Multimedia.Vision.ImageObject.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Tizen.Multimedia.Vision.ImageObject"/> class.
            </summary>
            <exception cref="T:System.NotSupportedException">The feature is not supported.</exception>
            <since_tizen> 4 </since_tizen>
        </member>
        <member name="M:Tizen.Multimedia.Vision.ImageObject.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Tizen.Multimedia.Vision.ImageObject"/> class from the specified file.
            </summary>
            <remarks>
            ImageObject has been saved by <see cref="M:Tizen.Multimedia.Vision.ImageObject.Save(System.String)"/> can be loaded.
            </remarks>
            <param name="path">Path to the image object to load.</param>
            <exception cref="T:System.ArgumentNullException"><paramref name="path"/> is null.</exception>
            <exception cref="T:System.IO.FileNotFoundException"><paramref name="path"/> is invalid.</exception>
            <exception cref="T:System.NotSupportedException">
                The feature is not supported.<br/>
                -or-<br/>
                <paramref name="path"/> is not supported file.
            </exception>
            <exception cref="T:System.UnauthorizedAccessException">No permission to access the specified file.</exception>
            <seealso cref="M:Tizen.Multimedia.Vision.ImageObject.Save(System.String)"/>
            <since_tizen> 4 </since_tizen>
        </member>
        <member name="M:Tizen.Multimedia.Vision.ImageObject.Finalize">
            <summary>
            Finalizes an instance of the ImageObject class.
            </summary>
        </member>
        <member name="P:Tizen.Multimedia.Vision.ImageObject.RecognitionRate">
            <summary>
            Gets a value that determines how well an image object can be recognized.
            </summary>
            <remarks>
            If recognition rate is too low, try to use another image or change some configuration parameters
            and fill the image object again.
            </remarks>
            <value>
            Recognition rate determines how well an image object can be recognized. This value can be from 0 to 1.
            If the recognition rate is 0 object can not be recognized and the bigger it is the more likely to recognize the object.
            </value>
            <exception cref="T:System.ObjectDisposedException">The <see cref="T:Tizen.Multimedia.Vision.ImageObject"/> has already been disposed of.</exception>
            <seealso cref="T:Tizen.Multimedia.Vision.ImageFillConfiguration"/>
            <seealso cref="M:Tizen.Multimedia.Vision.ImageObject.Fill(Tizen.Multimedia.Vision.MediaVisionSource)"/>
            <seealso cref="M:Tizen.Multimedia.Vision.ImageObject.Fill(Tizen.Multimedia.Vision.MediaVisionSource,Tizen.Multimedia.Vision.ImageFillConfiguration)"/>
            <seealso cref="M:Tizen.Multimedia.Vision.ImageObject.Fill(Tizen.Multimedia.Vision.MediaVisionSource,Tizen.Multimedia.Rectangle)"/>
            <seealso cref="M:Tizen.Multimedia.Vision.ImageObject.Fill(Tizen.Multimedia.Vision.MediaVisionSource,Tizen.Multimedia.Vision.ImageFillConfiguration,Tizen.Multimedia.Rectangle)"/>
            <since_tizen> 4 </since_tizen>
        </member>
        <member name="M:Tizen.Multimedia.Vision.ImageObject.GetLabel">
            <summary>
            Gets the label for the image object.
            </summary>
            <returns>
            The label value if the <see cref="T:Tizen.Multimedia.Vision.ImageObject"/> has label, otherwise null.
            </returns>
            <exception cref="T:System.ObjectDisposedException">The <see cref="T:Tizen.Multimedia.Vision.ImageObject"/> has already been disposed of.</exception>
            <seealso cref="M:Tizen.Multimedia.Vision.ImageObject.SetLabel(System.Int32)"/>
            <since_tizen> 4 </since_tizen>
        </member>
        <member name="M:Tizen.Multimedia.Vision.ImageObject.SetLabel(System.Int32)">
            <summary>
            Sets the label for the <see cref="T:Tizen.Multimedia.Vision.ImageObject"/>.
            </summary>
            <param name="label">The label which will be assigned to the image object.</param>
            <seealso cref="M:Tizen.Multimedia.Vision.ImageObject.GetLabel"/>
            <since_tizen> 4 </since_tizen>
        </member>
        <member name="M:Tizen.Multimedia.Vision.ImageObject.Fill(Tizen.Multimedia.Vision.MediaVisionSource)">
            <summary>
            Fills the image object.<br/>
            Extracts data from source image which will be needed for recognition of depicted object.
            </summary>
            <param name="source">The source image where image object is depicted.</param>
            <exception cref="T:System.ArgumentNullException"><paramref name="source"/> is null.</exception>
            <exception cref="T:System.ObjectDisposedException">
                The <see cref="T:Tizen.Multimedia.Vision.ImageObject"/> has already been disposed of.<br/>
                -or-<br/>
                <paramref name="source"/> has already been disposed of.
            </exception>
            <since_tizen> 4 </since_tizen>
        </member>
        <member name="M:Tizen.Multimedia.Vision.ImageObject.Fill(Tizen.Multimedia.Vision.MediaVisionSource,Tizen.Multimedia.Vision.ImageFillConfiguration)">
            <summary>
            Fills the image object.<br/>
            Extracts data from source image which will be needed for recognition of depicted object.
            </summary>
            <param name="source">The source image where image object is depicted.</param>
            <param name="config">The configuration used for extract recognition data from source. This value can be null.</param>
            <exception cref="T:System.ArgumentNullException"><paramref name="source"/> is null.</exception>
            <exception cref="T:System.ObjectDisposedException">
                The <see cref="T:Tizen.Multimedia.Vision.ImageObject"/> has already been disposed of.<br/>
                -or-<br/>
                <paramref name="source"/> has already been disposed of.<br/>
                -or-<br/>
                <paramref name="config"/> has already been disposed of.
            </exception>
            <since_tizen> 4 </since_tizen>
        </member>
        <member name="M:Tizen.Multimedia.Vision.ImageObject.Fill(Tizen.Multimedia.Vision.MediaVisionSource,Tizen.Multimedia.Rectangle)">
            <summary>
            Fills the image object.<br/>
            Extracts data from source image which will be needed for recognition of depicted object
            in location.
            </summary>
            <param name="source">The source image where image object is depicted.</param>
            <param name="rect">Rectangular bound of the image object on the source image.</param>
            <exception cref="T:System.ArgumentNullException"><paramref name="source"/> is null.</exception>
            <exception cref="T:System.ObjectDisposedException">
                The <see cref="T:Tizen.Multimedia.Vision.ImageObject"/> has already been disposed of.<br/>
                -or-<br/>
                <paramref name="source"/> has already been disposed of.
            </exception>
            <since_tizen> 4 </since_tizen>
        </member>
        <member name="M:Tizen.Multimedia.Vision.ImageObject.Fill(Tizen.Multimedia.Vision.MediaVisionSource,Tizen.Multimedia.Vision.ImageFillConfiguration,Tizen.Multimedia.Rectangle)">
            <summary>
            Fills the image object.<br/>
            Extracts data from source image which will be needed for recognition of depicted object
            in location.
            </summary>
            <param name="source">The source image where image object is depicted.</param>
            <param name="config">The configuration used for extract recognition data from source. This value can be null.</param>
            <param name="rect">Rectangular bound of the image object on the source image.</param>
            <exception cref="T:System.ArgumentNullException"><paramref name="source"/> is null.</exception>
            <exception cref="T:System.ObjectDisposedException">
                The <see cref="T:Tizen.Multimedia.Vision.ImageObject"/> has already been disposed of.<br/>
                -or-<br/>
                <paramref name="source"/> has already been disposed of.<br/>
                -or-<br/>
                <paramref name="config"/> has already been disposed of.
            </exception>
            <since_tizen> 4 </since_tizen>
        </member>
        <member name="M:Tizen.Multimedia.Vision.ImageObject.Save(System.String)">
            <summary>
            Saves the image object.
            </summary>
            <param name="path">Path to the file to save the model.</param>
            <exception cref="T:System.ArgumentNullException"><paramref name="path"/> is null.</exception>
            <exception cref="T:System.UnauthorizedAccessException">No permission to write to the specified path.</exception>
            <exception cref="T:System.ObjectDisposedException">The <see cref="T:Tizen.Multimedia.Vision.ImageObject"/> has already been disposed of.</exception>
            <exception cref="T:System.IO.DirectoryNotFoundException">The directory for <paramref name="path"/> does not exist.</exception>
            <since_tizen> 4 </since_tizen>
        </member>
        <member name="M:Tizen.Multimedia.Vision.ImageObject.Dispose">
            <summary>
            Releases all the resources used by the <see cref="T:Tizen.Multimedia.Vision.ImageObject"/> object.
            </summary>
            <since_tizen> 4 </since_tizen>
        </member>
        <member name="M:Tizen.Multimedia.Vision.ImageObject.Dispose(System.Boolean)">
            <summary>
            Releases the resources used by the <see cref="T:Tizen.Multimedia.Vision.ImageObject"/> object.
            </summary>
            <param name="disposing">
            true to release both managed and unmanaged resources; otherwise false to release only unmanaged resources.
            </param>
            <since_tizen> 4 </since_tizen>
        </member>
        <member name="T:Tizen.Multimedia.Vision.ImageRecognitionConfiguration">
            <summary>
            Represents a configuration of <see cref="T:Tizen.Multimedia.Vision.ImageRecognizer"/>.
            </summary>
            <feature>http://tizen.org/feature/vision.image_recognition</feature>
            <since_tizen> 4 </since_tizen>
        </member>
        <member name="F:Tizen.Multimedia.Vision.ImageRecognitionConfiguration.DefaultSceneScaleFactor">
            <summary>
            A read-only field that represents the default value of <see cref="P:Tizen.Multimedia.Vision.ImageRecognitionConfiguration.SceneScaleFactor"/>.
            </summary>
            <since_tizen> 4 </since_tizen>
        </member>
        <member name="F:Tizen.Multimedia.Vision.ImageRecognitionConfiguration.DefaultSceneMaxKeypoints">
            <summary>
            A read-only field that represents the default value of <see cref="P:Tizen.Multimedia.Vision.ImageRecognitionConfiguration.SceneMaxKeyPoints"/>.
            </summary>
            <since_tizen> 4 </since_tizen>
        </member>
        <member name="F:Tizen.Multimedia.Vision.ImageRecognitionConfiguration.DefaultMinKeyPointMatches">
            <summary>
            A read-only field that represents the default value of <see cref="P:Tizen.Multimedia.Vision.ImageRecognitionConfiguration.MinKeyPointMatches"/>.
            </summary>
            <since_tizen> 4 </since_tizen>
        </member>
        <member name="F:Tizen.Multimedia.Vision.ImageRecognitionConfiguration.DefaultRequiredMatchPart">
            <summary>
            A read-only field that represents the default value of <see cref="P:Tizen.Multimedia.Vision.ImageRecognitionConfiguration.RequiredMatchingPart"/>.
            </summary>
            <since_tizen> 4 </since_tizen>
        </member>
        <member name="F:Tizen.Multimedia.Vision.ImageRecognitionConfiguration.DefaultTolerantPartMatchError">
            <summary>
            A read-only field that represents the default value of <see cref="P:Tizen.Multimedia.Vision.ImageRecognitionConfiguration.TolerantPartMatchError"/>.
            </summary>
            <since_tizen> 4 </since_tizen>
        </member>
        <member name="M:Tizen.Multimedia.Vision.ImageRecognitionConfiguration.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Tizen.Multimedia.Vision.ImageRecognitionConfiguration"/> class.
            </summary>
            <exception cref="T:System.NotSupportedException">The feature is not supported.</exception>
            <since_tizen> 4 </since_tizen>
        </member>
        <member name="P:Tizen.Multimedia.Vision.ImageRecognitionConfiguration.SceneScaleFactor">
            <summary>
            Gets or sets the scene scale factor.
            </summary>
            <value>
            The value indicating the factor will be used for resizing of the scene including the images (objects) for recognition.
            The default is 1.2.
            </value>
            <exception cref="T:System.ObjectDisposedException">The <see cref="T:Tizen.Multimedia.Vision.ImageRecognitionConfiguration"/> already has been disposed of.</exception>
            <since_tizen> 4 </since_tizen>
        </member>
        <member name="P:Tizen.Multimedia.Vision.ImageRecognitionConfiguration.SceneMaxKeyPoints">
            <summary>
            Gets or sets the maximum key points that should be detected on the scene.
            The maximal number of key points can be selected on the scene including the images (objects) to calculate descriptors.
            </summary>
            <value>
            The maximal key points for image recognition.
            The default is 5000.
            </value>
            <exception cref="T:System.ObjectDisposedException">The <see cref="T:Tizen.Multimedia.Vision.ImageRecognitionConfiguration"/> already has been disposed of.</exception>
            <exception cref="T:System.ArgumentOutOfRangeException"><paramref name="value"/> is less than zero.</exception>
            <since_tizen> 4 </since_tizen>
        </member>
        <member name="P:Tizen.Multimedia.Vision.ImageRecognitionConfiguration.MinKeyPointMatches">
            <summary>
            Gets or sets the minimum number of key points matches required for recognition.
            </summary>
            <value>
            The minimal number of key points should be matched between an image and a scene for image objects recognition.
            The default is 30.
            </value>
            <exception cref="T:System.ObjectDisposedException">The <see cref="T:Tizen.Multimedia.Vision.ImageRecognitionConfiguration"/> already has been disposed of.</exception>
            <exception cref="T:System.ArgumentOutOfRangeException"><paramref name="value"/> is less than zero.</exception>
            <since_tizen> 4 </since_tizen>
        </member>
        <member name="P:Tizen.Multimedia.Vision.ImageRecognitionConfiguration.RequiredMatchingPart">
            <summary>
            Gets or sets the required matching part for the image recognition.
            To recognize occluded or hidden an image by other images, required relative part of the matches in respect to the total
            amount of matching keypoints required for image recognition. Too low value will result in unsustainable behavior,
            but the effect of object overlapping will be reduced.
            </summary>
            <value>
            The value indicating required relative part of the matches; can be from 0 to 1, inclusive.
            The default is 0.05.
            </value>
            <exception cref="T:System.ObjectDisposedException">The <see cref="T:Tizen.Multimedia.Vision.ImageRecognitionConfiguration"/> already has been disposed of.</exception>
            <exception cref="T:System.ArgumentOutOfRangeException">
                <paramref name="value"/> is less than zero.<br/>
                -or-<br/>
                <paramref name="value"/> is greater than one.
            </exception>
            <since_tizen> 4 </since_tizen>
        </member>
        <member name="P:Tizen.Multimedia.Vision.ImageRecognitionConfiguration.TolerantPartMatchError">
            <summary>
            Gets or sets the part matching error for the image recognition.<br/>
            Allowable error of matches number.
            </summary>
            <value>
            The value indicating allowable error of matches; can be from 0 to 1, inclusive.
            The default is 0.1.
            </value>
            <exception cref="T:System.ObjectDisposedException">The <see cref="T:Tizen.Multimedia.Vision.ImageRecognitionConfiguration"/> already has been disposed of.</exception>
            <exception cref="T:System.ArgumentOutOfRangeException">
                <paramref name="value"/> is less than zero.<br/>
                -or-<br/>
                <paramref name="value"/> is greater than one.
            </exception>
            <since_tizen> 4</since_tizen>
        </member>
        <member name="T:Tizen.Multimedia.Vision.ImageRecognitionResult">
            <summary>
            Represents a result of RecognizeAsync operations of <see cref="T:Tizen.Multimedia.Vision.ImageRecognizer"/>.
            </summary>
            <since_tizen> 4 </since_tizen>
        </member>
        <member name="P:Tizen.Multimedia.Vision.ImageRecognitionResult.Region">
            <summary>
            The region of recognized image object on the source image.
            </summary>
            <value>The region of recognized image object if successful, otherwise null.</value>
            <since_tizen> 4 </since_tizen>
        </member>
        <member name="P:Tizen.Multimedia.Vision.ImageRecognitionResult.Success">
            <summary>
            Gets the value indicating the recognition is successful.
            </summary>
            <since_tizen> 4</since_tizen>
        </member>
        <member name="T:Tizen.Multimedia.Vision.ImageRecognizer">
            <summary>
            Provides the ability to recognize images on image sources.
            </summary>
            <since_tizen> 4 </since_tizen>
        </member>
        <member name="M:Tizen.Multimedia.Vision.ImageRecognizer.RecognizeAsync(Tizen.Multimedia.Vision.MediaVisionSource,Tizen.Multimedia.Vision.ImageObject[])">
            <summary>
            Recognizes the given image objects on the source image.<br/>
            </summary>
            <param name="source">The source image on which image objects will be recognized.</param>
            <param name="imageObjects">The array of image objects which will be processed as targets of recognition.</param>
            <returns>A task that represents the asynchronous recognition operation.</returns>
            <exception cref="T:System.ArgumentNullException">
                <paramref name="source"/> is null.<br/>
                -or-<br/>
                <paramref name="imageObjects"/> is null.<br/>
                -or-<br/>
                <paramref name="imageObjects"/> contains null reference.
            </exception>
            <exception cref="T:System.ArgumentException"><paramref name="imageObjects"/> has no elements.(The length is zero.)</exception>
            <exception cref="T:System.NotSupportedException">The feature is not supported.</exception>
            <exception cref="T:System.ObjectDisposedException"><paramref name="source"/> has already been disposed of.</exception>
            <feature>http://tizen.org/feature/vision.image_recognition</feature>
            <since_tizen> 4 </since_tizen>
        </member>
        <member name="M:Tizen.Multimedia.Vision.ImageRecognizer.RecognizeAsync(Tizen.Multimedia.Vision.MediaVisionSource,Tizen.Multimedia.Vision.ImageObject[],Tizen.Multimedia.Vision.ImageRecognitionConfiguration)">
            <summary>
            Recognizes the given image objects on the source image.<br/>
            </summary>
            <param name="source">The source image on which image objects will be recognized.</param>
            <param name="imageObjects">The array of image objects which will be processed as targets of recognition.</param>
            <param name="config">The configuration used for recognition. This value can be null.</param>
            <returns>A task that represents the asynchronous recognition operation.</returns>
            <exception cref="T:System.ArgumentNullException">
                <paramref name="source"/> is null.<br/>
                -or-<br/>
                <paramref name="imageObjects"/> is null.<br/>
                -or-<br/>
                <paramref name="imageObjects"/> contains null elements.
            </exception>
            <exception cref="T:System.ArgumentException"><paramref name="imageObjects"/> has no elements.(The length is zero.)</exception>
            <exception cref="T:System.NotSupportedException">The feature is not supported.</exception>
            <exception cref="T:System.ObjectDisposedException">
                <paramref name="source"/> has already been disposed of.<br/>
                -or-<br/>
                <paramref name="config"/> has already been disposed of.
            </exception>
            <feature>http://tizen.org/feature/vision.image_recognition</feature>
            <since_tizen> 4 </since_tizen>
        </member>
        <member name="T:Tizen.Multimedia.Vision.ImageTracker">
            <summary>
            Provides the ability to track images on image sources.
            </summary>
            <since_tizen> 4 </since_tizen>
        </member>
        <member name="M:Tizen.Multimedia.Vision.ImageTracker.TrackAsync(Tizen.Multimedia.Vision.MediaVisionSource,Tizen.Multimedia.Vision.ImageTrackingModel)">
            <summary>
            Tracks the given image tracking model on the current frame.
            </summary>
            <param name="source">The current image of sequence where the image tracking model will be tracked.</param>
            <param name="trackingModel">The image tracking model which processed as target of tracking.</param>
            <returns>A task that represents the asynchronous tracking operation.</returns>
            <exception cref="T:System.ArgumentNullException">
                <paramref name="source"/> is null.<br/>
                -or-<br/>
                <paramref name="trackingModel"/> is null.
            </exception>
            <exception cref="T:System.NotSupportedException">The feature is not supported.</exception>
            <exception cref="T:System.ObjectDisposedException">
                <paramref name="source"/> has already been disposed of.<br/>
                -or-<br/>
                <paramref name="trackingModel"/> has already been disposed of.
            </exception>
            <exception cref="T:System.ArgumentException"><paramref name="trackingModel"/> has no target.</exception>
            <seealso cref="M:Tizen.Multimedia.Vision.ImageTrackingModel.SetTarget(Tizen.Multimedia.Vision.ImageObject)"/>
            <feature>http://tizen.org/feature/vision.image_recognition</feature>
            <since_tizen> 4 </since_tizen>
        </member>
        <member name="M:Tizen.Multimedia.Vision.ImageTracker.TrackAsync(Tizen.Multimedia.Vision.MediaVisionSource,Tizen.Multimedia.Vision.ImageTrackingModel,Tizen.Multimedia.Vision.ImageTrackingConfiguration)">
            <summary>
            Tracks the given image tracking model on the current frame and <see cref="T:Tizen.Multimedia.Vision.ImageTrackingConfiguration"/>.
            </summary>
            <param name="source">The current image of sequence where the image tracking model will be tracked.</param>
            <param name="trackingModel">The image tracking model which processed as target of tracking.</param>
            <param name="config">The configuration used for tracking. This value can be null.</param>
            <returns>A task that represents the asynchronous tracking operation.</returns>
            <exception cref="T:System.ArgumentNullException">
                <paramref name="source"/> is null.<br/>
                -or-<br/>
                <paramref name="trackingModel"/> is null.
            </exception>
            <exception cref="T:System.NotSupportedException">The feature is not supported.</exception>
            <exception cref="T:System.ObjectDisposedException">
                <paramref name="source"/> has already been disposed of.<br/>
                -or-<br/>
                <paramref name="trackingModel"/> has already been disposed of.<br/>
                -or-<br/>
                <paramref name="config"/> has already been disposed of.
            </exception>
            <exception cref="T:System.ArgumentException"><paramref name="trackingModel"/> has no target.</exception>
            <seealso cref="M:Tizen.Multimedia.Vision.ImageTrackingModel.SetTarget(Tizen.Multimedia.Vision.ImageObject)"/>
            <feature>http://tizen.org/feature/vision.image_recognition</feature>
            <since_tizen> 4 </since_tizen>
        </member>
        <member name="T:Tizen.Multimedia.Vision.ImageTrackingConfiguration">
            <summary>
            Represents a configuration of <see cref="T:Tizen.Multimedia.Vision.ImageTracker"/>.
            </summary>
            <feature>http://tizen.org/feature/vision.image_recognition</feature>
            <since_tizen> 4 </since_tizen>
        </member>
        <member name="F:Tizen.Multimedia.Vision.ImageTrackingConfiguration.DefaultHistoryAmount">
            <summary>
            A read-only field that represents the default value of <see cref="P:Tizen.Multimedia.Vision.ImageTrackingConfiguration.HistoryAmount"/>.
            </summary>
            <since_tizen> 4 </since_tizen>
        </member>
        <member name="F:Tizen.Multimedia.Vision.ImageTrackingConfiguration.DefaultExpectedOffset">
            <summary>
            A read-only field that represents the default value of <see cref="P:Tizen.Multimedia.Vision.ImageTrackingConfiguration.ExpectedOffset"/>.
            </summary>
            <since_tizen> 4 </since_tizen>
        </member>
        <member name="F:Tizen.Multimedia.Vision.ImageTrackingConfiguration.DefaultStabilizationEnabled">
            <summary>
            A read-only field that represents the default value of <see cref="P:Tizen.Multimedia.Vision.ImageTrackingConfiguration.IsStabilizationEnabled"/>.
            </summary>
            <since_tizen> 4 </since_tizen>
        </member>
        <member name="F:Tizen.Multimedia.Vision.ImageTrackingConfiguration.DefaultStabilizationTolerantShift">
            <summary>
            A read-only field that represents the default value of <see cref="P:Tizen.Multimedia.Vision.ImageTrackingConfiguration.StabilizationTolerantShift"/>.
            </summary>
            <since_tizen> 4 </since_tizen>
        </member>
        <member name="F:Tizen.Multimedia.Vision.ImageTrackingConfiguration.DefaultStabilizationSpeed">
            <summary>
            A read-only field that represents the default value of <see cref="P:Tizen.Multimedia.Vision.ImageTrackingConfiguration.StabilizationSpeed"/>.
            </summary>
            <since_tizen> 4 </since_tizen>
        </member>
        <member name="F:Tizen.Multimedia.Vision.ImageTrackingConfiguration.DefaultStabilizationAcceleration">
            <summary>
            A read-only field that represents the default value of <see cref="P:Tizen.Multimedia.Vision.ImageTrackingConfiguration.StabilizationAcceleration"/>.
            </summary>
            <since_tizen> 4 </since_tizen>
        </member>
        <member name="M:Tizen.Multimedia.Vision.ImageTrackingConfiguration.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Tizen.Multimedia.Vision.ImageTrackingConfiguration"/> class.
            </summary>
            <exception cref="T:System.NotSupportedException">The feature is not supported.</exception>
            <since_tizen> 4 </since_tizen>
        </member>
        <member name="P:Tizen.Multimedia.Vision.ImageTrackingConfiguration.HistoryAmount">
            <summary>
            Gets or sets the number of recognition results in the tracking history.
            </summary>
            <value>
            The number of previous recognition results, which will influence the stabilization.<br/>
            The default is 3.
            </value>
            <exception cref="T:System.ObjectDisposedException">The <see cref="T:Tizen.Multimedia.Vision.ImageTrackingConfiguration"/> already has been disposed of.</exception>
            <exception cref="T:System.ArgumentOutOfRangeException"><paramref name="value"/> is less than zero.</exception>
            <since_tizen> 4 </since_tizen>
        </member>
        <member name="P:Tizen.Multimedia.Vision.ImageTrackingConfiguration.ExpectedOffset">
            <summary>
            Gets or sets the expected tracking offset.
            </summary>
            <value>
            Relative offset value for which the object offset is expected (relative to the object size in the current frame).<br/>
            The default is 0.
            </value>
            <exception cref="T:System.ObjectDisposedException">The <see cref="T:Tizen.Multimedia.Vision.ImageTrackingConfiguration"/> already has been disposed of.</exception>
            <since_tizen> 4 </since_tizen>
        </member>
        <member name="P:Tizen.Multimedia.Vision.ImageTrackingConfiguration.StabilizationAcceleration">
            <summary>
            Gets or sets the acceleration of the tracking stabilization.
            </summary>
            <value>
            Acceleration will be used for image stabilization (relative to the distance from current location to stabilized location);
            from 0 to 1, inclusive.<br/>
            The default is 0.1.
            </value>
            <exception cref="T:System.ObjectDisposedException">The <see cref="T:Tizen.Multimedia.Vision.ImageTrackingConfiguration"/> already has been disposed of.</exception>
            <exception cref="T:System.ArgumentOutOfRangeException">
                <paramref name="value"/> is less than zero.<br/>
                -or-<br/>
                <paramref name="value"/> is greater than one.
            </exception>
            <since_tizen> 4 </since_tizen>
        </member>
        <member name="P:Tizen.Multimedia.Vision.ImageTrackingConfiguration.StabilizationSpeed">
            <summary>
            Gets or sets the speed of the tracking stabilization.
            </summary>
            <value>
            The start speed value used for image stabilization.<br/>
            The default is 0.3.
            </value>
            <exception cref="T:System.ObjectDisposedException">The <see cref="T:Tizen.Multimedia.Vision.ImageTrackingConfiguration"/> already has been disposed of.</exception>
            <since_tizen> 4 </since_tizen>
        </member>
        <member name="P:Tizen.Multimedia.Vision.ImageTrackingConfiguration.StabilizationTolerantShift">
            <summary>
            Gets or sets the relative tolerant shift for the tracking stabilization.
            </summary>
            <value>
            It is component of tolerant shift which will be ignored by stabilization process.
            (this value is relative to the object size in the current frame).
            Tolerant shift will be computed like R * S + C, where R is the value set to <see cref="P:Tizen.Multimedia.Vision.ImageTrackingConfiguration.StabilizationTolerantShift"/>,
            S is the area of object location on frame, C is a constant value 1.3.<br/>
            <br/>
            The default is 0.00006.
            </value>
            <exception cref="T:System.ObjectDisposedException">The <see cref="T:Tizen.Multimedia.Vision.ImageTrackingConfiguration"/> already has been disposed of.</exception>
            <since_tizen> 4 </since_tizen>
        </member>
        <member name="P:Tizen.Multimedia.Vision.ImageTrackingConfiguration.IsStabilizationEnabled">
            <summary>
            Gets or sets the state of the contour stabilization during tracking process.
            </summary>
            <value>
            true if the contour stabilization is enabled; otherwise false.<br/>
            The default is true.
            </value>
            <exception cref="T:System.ObjectDisposedException">The <see cref="T:Tizen.Multimedia.Vision.ImageTrackingConfiguration"/> already has been disposed of.</exception>
            <since_tizen> 4 </since_tizen>
        </member>
        <member name="T:Tizen.Multimedia.Vision.ImageTrackingModel">
            <summary>
            Represents the image tracking model interface.
            </summary>
            <feature>http://tizen.org/feature/vision.image_recognition</feature>
            <since_tizen> 4 </since_tizen>
        </member>
        <member name="M:Tizen.Multimedia.Vision.ImageTrackingModel.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Tizen.Multimedia.Vision.ImageTrackingModel"/> class.
            </summary>
            <exception cref="T:System.NotSupportedException">The feature is not supported.</exception>
            <since_tizen> 4 </since_tizen>
        </member>
        <member name="M:Tizen.Multimedia.Vision.ImageTrackingModel.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Tizen.Multimedia.Vision.ImageTrackingModel"/> class with the specified path.
            </summary>
            <remarks>
            Model saved by <see cref="M:Tizen.Multimedia.Vision.ImageTrackingModel.Save(System.String)"/> can be loaded.
            </remarks>
            <param name="modelPath">Path to the model to load.</param>
            <exception cref="T:System.ArgumentNullException"><paramref name="modelPath"/> is null.</exception>
            <exception cref="T:System.IO.FileNotFoundException"><paramref name="modelPath"/> is invalid.</exception>
            <exception cref="T:System.NotSupportedException">
                The feature is not supported.<br/>
                -or-<br/>
                <paramref name="modelPath"/> is not supported format.
            </exception>
            <exception cref="T:System.UnauthorizedAccessException">No permission to access the specified file.</exception>
            <seealso cref="M:Tizen.Multimedia.Vision.ImageTrackingModel.Save(System.String)"/>
            <since_tizen> 4 </since_tizen>
        </member>
        <member name="M:Tizen.Multimedia.Vision.ImageTrackingModel.Finalize">
            <summary>
            Finalizes an instance of the ImageTrackingModel class.
            </summary>
        </member>
        <member name="M:Tizen.Multimedia.Vision.ImageTrackingModel.SetTarget(Tizen.Multimedia.Vision.ImageObject)">
            <summary>
            Sets the target of the image tracking model.<br/>
            Sets the image object which will be tracked by using tracking functionality with this tracking model.
            </summary>
            <param name="imageObject">Image object which will be set as the target for tracking.</param>
            <exception cref="T:System.ArgumentNullException"><paramref name="imageObject"/> is null.</exception>
            <exception cref="T:System.ObjectDisposedException">
                The <see cref="T:Tizen.Multimedia.Vision.ImageTrackingModel"/> has already been disposed of.<br/>
                -or-<br/>
                <paramref name="imageObject"/> has already been disposed of.
            </exception>
            <exception cref="T:System.InvalidOperationException">Internal error.(Since API level 10)</exception>
            <since_tizen> 4 </since_tizen>
        </member>
        <member name="M:Tizen.Multimedia.Vision.ImageTrackingModel.Refresh">
            <summary>
            Refreshes the state of image tracking model.<br/>
            Clears the moving history and change state to undetected. It is usually called each time before tracking is started
            for the new sequence of sources, which is not the direct continuation of the sequence for which tracking has been performed before.
            Tracking algorithm will try to find image by itself.
            </summary>
            <exception cref="T:System.ObjectDisposedException">The <see cref="T:Tizen.Multimedia.Vision.ImageTrackingModel"/> has already been disposed of.</exception>
            <since_tizen> 4 </since_tizen>
        </member>
        <member name="M:Tizen.Multimedia.Vision.ImageTrackingModel.Save(System.String)">
            <summary>
            Saves the tracking model to the file.
            </summary>
            <param name="path">Path to the file to save the model.</param>
            <exception cref="T:System.ArgumentNullException"><paramref name="path"/> is null.</exception>
            <exception cref="T:System.UnauthorizedAccessException">No permission to write to the specified path.</exception>
            <exception cref="T:System.ObjectDisposedException">The <see cref="T:Tizen.Multimedia.Vision.ImageTrackingModel"/> has already been disposed of.</exception>
            <exception cref="T:System.IO.DirectoryNotFoundException">The directory for <paramref name="path"/> does not exist.</exception>
            <since_tizen> 4 </since_tizen>
        </member>
        <member name="M:Tizen.Multimedia.Vision.ImageTrackingModel.Dispose">
            <summary>
            Releases all resources used by the <see cref="T:Tizen.Multimedia.Vision.ImageTrackingModel"/> object.
            </summary>
            <since_tizen> 4 </since_tizen>
        </member>
        <member name="M:Tizen.Multimedia.Vision.ImageTrackingModel.Dispose(System.Boolean)">
            <summary>
            Releases the resources used by the <see cref="T:Tizen.Multimedia.Vision.ImageTrackingModel"/> object.
            </summary>
            <param name="disposing">
            true to release both managed and unmanaged resources; otherwise false to release only unmanaged resources.
            </param>
            <since_tizen> 4 </since_tizen>
        </member>
        <member name="T:Tizen.Multimedia.Vision.InferenceModelConfiguration">
            <summary>
            Represents a configuration of <see cref="T:Tizen.Multimedia.Vision.FaceDetector"/>, <see cref="T:Tizen.Multimedia.Vision.FacialLandmarkDetector"/>,
            <see cref="T:Tizen.Multimedia.Vision.ImageClassifier"/> and <see cref="T:Tizen.Multimedia.Vision.ObjectDetector"/>.
            </summary>
            <remarks>
            'Inference model' means pre-learned data, which is represented by <see cref="P:Tizen.Multimedia.Vision.InferenceModelConfiguration.ConfigurationFilePath"/> and
            <see cref="P:Tizen.Multimedia.Vision.InferenceModelConfiguration.WeightFilePath"/>, <see cref="P:Tizen.Multimedia.Vision.InferenceModelConfiguration.CategoryFilePath"/>.<br/>
            If user want to use tizen default inference model and its related value,
            Please refer Tizen guide page(https://developer.tizen.org/development/guides/.net-application).
            </remarks>
            <feature>http://tizen.org/feature/vision.inference.face</feature>
            <feature>http://tizen.org/feature/vision.inference.image</feature>
            <since_tizen> 6 </since_tizen>
        </member>
        <member name="M:Tizen.Multimedia.Vision.InferenceModelConfiguration.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Tizen.Multimedia.Vision.InferenceModelConfiguration"/> class.
            </summary>
            <feature>http://tizen.org/feature/vision.inference.face</feature>
            <feature>http://tizen.org/feature/vision.inference.image</feature>
            <exception cref="T:System.NotSupportedException">The feature is not supported.</exception>
            <since_tizen> 6 </since_tizen>
        </member>
        <member name="M:Tizen.Multimedia.Vision.InferenceModelConfiguration.LoadInferenceModel">
            <summary>
            Loads inference model data and its related attributes.
            </summary>
            <remarks>
            Before calling this method, user should set all properties which is required by each inference model.<br/>
            The properties set after calling this method will not be affected in the result.
            </remarks>
            <privilege>http://tizen.org/privilege/mediastorage</privilege>
            <privilege>http://tizen.org/privilege/externalstorage</privilege>
            <feature>http://tizen.org/feature/vision.inference.face</feature>
            <feature>http://tizen.org/feature/vision.inference.image</feature>
            <exception cref="T:System.IO.FileNotFoundException">
            <see cref="P:Tizen.Multimedia.Vision.InferenceModelConfiguration.ConfigurationFilePath"/>, <see cref="P:Tizen.Multimedia.Vision.InferenceModelConfiguration.WeightFilePath"/> or <see cref="P:Tizen.Multimedia.Vision.InferenceModelConfiguration.CategoryFilePath"/> have invalid path.
            </exception>
            <exception cref="T:Tizen.Multimedia.FileFormatException">Invalid data type is used in inference model data.</exception>
            <exception cref="T:System.IO.InvalidDataException">
            Inference model data contains unsupported operations in current backend version.
            -or-<br/>
            Invalid data type is used in inference model data.<br/>
            </exception>
            <exception cref="T:System.InvalidOperationException">Internal operation error.</exception>
            <exception cref="T:System.UnauthorizedAccessException">The caller has no required privilege.</exception>
            <since_tizen> 6 </since_tizen>
        </member>
        <member name="P:Tizen.Multimedia.Vision.InferenceModelConfiguration.SupportedBackend">
            <summary>
            Gets the list of inference backend engine which is supported in the current device.
            </summary>
            <returns>If there's no supported backend, empty collection will be returned.</returns>
            <since_tizen> 6 </since_tizen>
        </member>
        <member name="P:Tizen.Multimedia.Vision.InferenceModelConfiguration.ConfigurationFilePath">
            <summary>
            Gets or sets the path of inference model's configuration data file.
            </summary>
            <exception cref="T:System.ArgumentNullException">Input file path is null.</exception>
            <since_tizen> 6 </since_tizen>
        </member>
        <member name="P:Tizen.Multimedia.Vision.InferenceModelConfiguration.WeightFilePath">
            <summary>
            Gets or sets the path of inference model's weight file.
            </summary>
            <exception cref="T:System.ArgumentNullException">Input file path is null.</exception>
            <since_tizen> 6 </since_tizen>
        </member>
        <member name="P:Tizen.Multimedia.Vision.InferenceModelConfiguration.CategoryFilePath">
            <summary>
            Gets or sets the path of inference model's category file.
            </summary>
            <remarks>
            This value should be set to use <see cref="T:Tizen.Multimedia.Vision.ImageClassifier"/> or <see cref="T:Tizen.Multimedia.Vision.ObjectDetector"/>.
            </remarks>
            <exception cref="T:System.ArgumentNullException">Input file path is null.</exception>
            <since_tizen> 6 </since_tizen>
        </member>
        <member name="P:Tizen.Multimedia.Vision.InferenceModelConfiguration.MetadataFilePath">
            <summary>
            Gets or sets the path of inference model's metadata file.
            </summary>
            <remarks>
            This value should be set to use <see cref="T:Tizen.Multimedia.Vision.ImageClassifier"/> or <see cref="T:Tizen.Multimedia.Vision.ObjectDetector"/>.
            </remarks>
            <exception cref="T:System.ArgumentNullException">Metadata file path is null.</exception>
            <since_tizen> 9 </since_tizen>
        </member>
        <member name="P:Tizen.Multimedia.Vision.InferenceModelConfiguration.MeanValue">
            <summary>
            Gets or sets the inference model's mean value.
            </summary>
            <remarks>It should be greater than or equal to 0.</remarks>
            <exception cref="T:System.ArgumentOutOfRangeException">The value is invalid.</exception>
            <since_tizen> 6 </since_tizen>
        </member>
        <member name="P:Tizen.Multimedia.Vision.InferenceModelConfiguration.StdValue">
            <summary>
            Gets or sets the inference model's STD(Standard deviation) value.
            </summary>
            <remarks>It should be greater than or equal to 0.</remarks>
            <exception cref="T:System.ArgumentOutOfRangeException">The value is invalid.</exception>
            <since_tizen> 6 </since_tizen>
        </member>
        <member name="P:Tizen.Multimedia.Vision.InferenceModelConfiguration.Backend">
            <summary>
            Gets or sets the inference model's backend engine.
            </summary>
            <remarks>The default backend type is <see cref="F:Tizen.Multimedia.Vision.InferenceBackendType.OpenCV"/></remarks>
            <exception cref="T:System.ArgumentException"><paramref name="value"/> is not valid.</exception>
            <exception cref="T:System.NotSupportedException">The engine type is not supported.</exception>
            <seealso cref="P:Tizen.Multimedia.Vision.InferenceModelConfiguration.SupportedBackend"/>
            <since_tizen> 6 </since_tizen>
        </member>
        <member name="P:Tizen.Multimedia.Vision.InferenceModelConfiguration.Target">
            <summary>
            Gets or sets the inference model's target.
            </summary>
            <remarks>
            The default target is <see cref="F:Tizen.Multimedia.Vision.InferenceTargetType.CPU"/>.<br/>
            If target doesn't support <see cref="F:Tizen.Multimedia.Vision.InferenceTargetType.GPU"/> and <see cref="F:Tizen.Multimedia.Vision.InferenceTargetType.Custom"/>,
            <see cref="F:Tizen.Multimedia.Vision.InferenceTargetType.CPU"/> will be used internally, despite the user's choice.
            </remarks>
            <exception cref="T:System.ArgumentException"><paramref name="value"/> is not valid.</exception>
            <since_tizen> 6 </since_tizen>
        </member>
        <member name="P:Tizen.Multimedia.Vision.InferenceModelConfiguration.Device">
            <summary>
            Gets or sets the processor type for inference models.
            </summary>
            <remarks>
            The default device is <see cref="F:Tizen.Multimedia.Vision.InferenceTargetDevice.CPU"/>.<br/>
            If a device doesn't support <see cref="F:Tizen.Multimedia.Vision.InferenceTargetDevice.GPU"/> and <see cref="F:Tizen.Multimedia.Vision.InferenceTargetDevice.Custom"/>,
            <see cref="F:Tizen.Multimedia.Vision.InferenceTargetDevice.CPU"/> will be used internally, despite the user's choice.
            </remarks>
            <exception cref="T:System.ArgumentException"><paramref name="value"/> is not valid.</exception>
            <since_tizen> 8 </since_tizen>
        </member>
        <member name="P:Tizen.Multimedia.Vision.InferenceModelConfiguration.TensorSize">
            <summary>
            Gets or sets the size of inference model's tensor.
            </summary>
            <remarks>
            Both width and height of tensor should be greater than 0.<br/>
            'Size(-1, -1) is allowed when the intention is to use original image source size as TensorSize.
            </remarks>
            <exception cref="T:System.ArgumentException">
            Only one of <paramref name="value.Width.Width"/> or <paramref name="value.Height.Height"/> have -1.</exception>
            <exception cref="T:System.ArgumentOutOfRangeException">The value is invalid.</exception>
            <since_tizen> 6 </since_tizen>
        </member>
        <member name="P:Tizen.Multimedia.Vision.InferenceModelConfiguration.TensorChannels">
            <summary>
            Gets or sets the number of inference model's tensor channel.
            </summary>
            <remarks>
            For example, for RGB colorspace this value should be set to 3<br/>
            It should be greater than 0.
            </remarks>
            <exception cref="T:System.ArgumentOutOfRangeException">The value is invalid.</exception>
            <since_tizen> 6 </since_tizen>
        </member>
        <member name="P:Tizen.Multimedia.Vision.InferenceModelConfiguration.DataType">
            <summary>
            Gets or sets the type of data used for inference model.
            </summary>
            <remarks>
            For example, this value should be set to <see cref="F:Tizen.Multimedia.Vision.InferenceDataType.Float32"/> for a model data supporting float32.<br/>
            <see cref="F:Tizen.Multimedia.Vision.InferenceDataType.Float32"/> will be used internally if a user doesn't set the value.
            </remarks>
            <exception cref="T:System.ArgumentException"><paramref name="value"/> is not valid.</exception>
            <since_tizen> 8 </since_tizen>
        </member>
        <member name="P:Tizen.Multimedia.Vision.InferenceModelConfiguration.InputNodeName">
            <summary>
            Gets or sets the name of an input node
            </summary>
            <exception cref="T:System.ArgumentNullException"><paramref name="value"/> is null.</exception>
            <since_tizen> 6 </since_tizen>
        </member>
        <member name="P:Tizen.Multimedia.Vision.InferenceModelConfiguration.OutputNodeName">
            <summary>
            Gets or sets the name of an output node
            </summary>
            <exception cref="T:System.ArgumentNullException"><paramref name="value"/> is null.</exception>
            <since_tizen> 6 </since_tizen>
        </member>
        <member name="P:Tizen.Multimedia.Vision.InferenceModelConfiguration.MaxOutputNumber">
            <summary>
            Gets or sets the maximum output number of detection or classification.
            </summary>
            <remarks>
            The input value over 10 will be set to 10 and the input value under 1 will be set to 1.<br/>
            This value can be used to decide the size of <see cref="P:Tizen.Multimedia.Vision.InferenceModelConfiguration.Roi"/>, it's length should be the same.
            </remarks>
            <since_tizen> 6 </since_tizen>
        </member>
        <member name="P:Tizen.Multimedia.Vision.InferenceModelConfiguration.ConfidenceThreshold">
            <summary>
            Gets or sets the threshold of confidence.
            </summary>
            <remarks>
            The vaild range is greater than or equal to 0.0 and less than or equal to 1.0.<br/>
            The value 1.0 means maximum accuracy.
            </remarks>
            <exception cref="T:System.ArgumentOutOfRangeException"><paramref name="value"/>is out of range.</exception>
            <since_tizen> 6 </since_tizen>
        </member>
        <member name="P:Tizen.Multimedia.Vision.InferenceModelConfiguration.Roi">
            <summary>
            Gets or sets the ROI(Region Of Interest) of <see cref="T:Tizen.Multimedia.Vision.ImageClassifier"/> and <see cref="T:Tizen.Multimedia.Vision.FacialLandmarkDetector"/>
            </summary>
            <remarks>
            Default value is null. If Roi is null, the entire region of <see cref="T:Tizen.Multimedia.Vision.MediaVisionSource"/> will be analyzed.
            </remarks>
            <exception cref="T:System.ArgumentOutOfRangeException">
                The width of <paramref name="value"/> is less than or equal to zero.<br/>
                -or-<br/>
                The height of <paramref name="value"/> is less than or equal to zero.<br/>
                -or-<br/>
                The x position of <paramref name="value"/> is less than zero.<br/>
                -or-<br/>
                The y position of <paramref name="value"/> is less than zero.
            </exception>
            <seealso cref="P:Tizen.Multimedia.Vision.InferenceModelConfiguration.MaxOutputNumber"/>
            <since_tizen> 6 </since_tizen>
        </member>
        <member name="M:Tizen.Multimedia.Vision.InferenceModelConfiguration.Dispose(System.Boolean)">
            <summary>
            Releases the resources used by the <see cref="T:Tizen.Multimedia.Vision.InferenceModelConfiguration"/> object.
            </summary>
            <param name="disposing">
            true to release both managed and unmanaged resources, otherwise false to release only unmanaged resources.
            </param>
            <since_tizen> 6 </since_tizen>
        </member>
        <member name="T:Tizen.Multimedia.Vision.InferenceBackendType">
            <summary>
            Specifies the type of inference backend.
            </summary>
            <since_tizen> 6 </since_tizen>
        </member>
        <member name="F:Tizen.Multimedia.Vision.InferenceBackendType.OpenCV">
            <summary>
            OpenCV backend type
            </summary>
        </member>
        <member name="F:Tizen.Multimedia.Vision.InferenceBackendType.TFLite">
            <summary>
            Tensor Flow Lite backend type
            </summary>
        </member>
        <member name="F:Tizen.Multimedia.Vision.InferenceBackendType.ArmNN">
            <summary>
            ArmNN backend type
            </summary>
        </member>
        <member name="F:Tizen.Multimedia.Vision.InferenceBackendType.MLApi">
            <summary>
            ML Single API of NNStreamer backend type
            </summary>
            <remarks>
            Should be set <see cref="T:Tizen.Multimedia.Vision.InferenceTargetDevice"/> to <see cref="F:Tizen.Multimedia.Vision.InferenceTargetDevice.Custom"/>.
            </remarks>
            <since_tizen> 8 </since_tizen>
        </member>
        <member name="F:Tizen.Multimedia.Vision.InferenceBackendType.One">
            <summary>
            On-device Neural Engine backend type
            </summary>
            <remarks>
            Should be set <see cref="T:Tizen.Multimedia.Vision.InferenceTargetDevice"/> to <see cref="F:Tizen.Multimedia.Vision.InferenceTargetDevice.CPU"/> or
            <see cref="F:Tizen.Multimedia.Vision.InferenceTargetDevice.GPU"/>.
            </remarks>
            <since_tizen> 8 </since_tizen>
        </member>
        <member name="T:Tizen.Multimedia.Vision.InferenceTargetType">
            <summary>
            Specifies the type of target. It's used for running inference backend.
            </summary>
            <since_tizen> 6 </since_tizen>
        </member>
        <member name="F:Tizen.Multimedia.Vision.InferenceTargetType.CPU">
            <summary>
            CPU target
            </summary>
        </member>
        <member name="F:Tizen.Multimedia.Vision.InferenceTargetType.GPU">
            <summary>
            GPU target
            </summary>
        </member>
        <member name="F:Tizen.Multimedia.Vision.InferenceTargetType.Custom">
            <summary>
            Custom target
            </summary>
        </member>
        <member name="T:Tizen.Multimedia.Vision.InferenceTargetDevice">
            <summary>
            Specifies the target device which is used for running <see cref="P:Tizen.Multimedia.Vision.InferenceModelConfiguration.Backend"/>.
            </summary>
            <since_tizen> 8 </since_tizen>
        </member>
        <member name="F:Tizen.Multimedia.Vision.InferenceTargetDevice.CPU">
            <summary>
            CPU device
            </summary>
        </member>
        <member name="F:Tizen.Multimedia.Vision.InferenceTargetDevice.GPU">
            <summary>
            GPU device
            </summary>
        </member>
        <member name="F:Tizen.Multimedia.Vision.InferenceTargetDevice.Custom">
            <summary>
            Custom device
            </summary>
        </member>
        <member name="T:Tizen.Multimedia.Vision.InferenceDataType">
            <summary>
            Specifies the data type.
            </summary>
            <since_tizen> 8 </since_tizen>
        </member>
        <member name="F:Tizen.Multimedia.Vision.InferenceDataType.Float32">
            <summary>
            Float 32 bit
            </summary>
        </member>
        <member name="F:Tizen.Multimedia.Vision.InferenceDataType.UInt8">
            <summary>
            Unsigned Integer 8 bit
            </summary>
        </member>
        <member name="T:Tizen.Multimedia.Vision.MediaVisionError">
            <summary>
            Enumeration for media vision's error codes.
            </summary>
        </member>
        <member name="F:Tizen.Multimedia.Vision.MediaVisionError.None">
            <summary>
            Successful.
            </summary>
        </member>
        <member name="F:Tizen.Multimedia.Vision.MediaVisionError.NotSupported">
            <summary>
            Not supported.
            </summary>
        </member>
        <member name="F:Tizen.Multimedia.Vision.MediaVisionError.MsgTooLong">
            <summary>
            Message too long.
            </summary>
        </member>
        <member name="F:Tizen.Multimedia.Vision.MediaVisionError.NoData">
            <summary>
            No data.
            </summary>
        </member>
        <member name="F:Tizen.Multimedia.Vision.MediaVisionError.KeyNotAvailable">
            <summary>
            Key not available.
            </summary>
        </member>
        <member name="F:Tizen.Multimedia.Vision.MediaVisionError.OutOfMemory">
            <summary>
            Out of memory.
            </summary>
        </member>
        <member name="F:Tizen.Multimedia.Vision.MediaVisionError.InvalidParameter">
            <summary>
            Invalid parameter.
            </summary>
        </member>
        <member name="F:Tizen.Multimedia.Vision.MediaVisionError.InvalidOperation">
            <summary>
            Invalid operation.
            </summary>
        </member>
        <member name="F:Tizen.Multimedia.Vision.MediaVisionError.PermissionDenied">
            <summary>
            Permission denied.
            </summary>
        </member>
        <member name="F:Tizen.Multimedia.Vision.MediaVisionError.NotSupportedFormat">
            <summary>
            Not supported format.
            </summary>
        </member>
        <member name="F:Tizen.Multimedia.Vision.MediaVisionError.Internal">
            <summary>
            Internal error
            </summary>
        </member>
        <member name="F:Tizen.Multimedia.Vision.MediaVisionError.InvalidData">
            <summary>
            Invalid data.
            </summary>
        </member>
        <member name="F:Tizen.Multimedia.Vision.MediaVisionError.InvalidPath">
            <summary>
            Invalid path (Since 3.0).
            </summary>
        </member>
        <member name="F:Tizen.Multimedia.Vision.MediaVisionError.NotSupportedEngine">
            <summary>
            Not supported engine.
            </summary>
            <since_tizen> 6 </since_tizen>
        </member>
        <member name="T:Tizen.Multimedia.Vision.MediaVisionSource">
            <summary>
            Represents the media vision source to keep information on the image or video frame data as raw buffer.
            </summary>
            <feature>http://tizen.org/feature/vision.barcode_detection</feature>
            <feature>http://tizen.org/feature/vision.barcode_generation</feature>
            <feature>http://tizen.org/feature/vision.face_recognition</feature>
            <feature>http://tizen.org/feature/vision.image_recognition</feature>
            <since_tizen> 4 </since_tizen>
        </member>
        <member name="M:Tizen.Multimedia.Vision.MediaVisionSource.#ctor(Tizen.Multimedia.MediaPacket)">
            <summary>
            Initializes a new instance of the <see cref="T:Tizen.Multimedia.Vision.MediaVisionSource"/> class based on the <see cref="T:Tizen.Multimedia.MediaPacket"/>.
            </summary>
            <param name="mediaPacket">The <see cref="T:Tizen.Multimedia.MediaPacket"/> from which the source will be filled.</param>
            <exception cref="T:System.NotSupportedException">None of the related features are not supported.</exception>
            <exception cref="T:System.ArgumentNullException"><paramref name="mediaPacket"/> is null.</exception>
            <exception cref="T:System.ObjectDisposedException"><paramref name="mediaPacket"/> has already been disposed of.</exception>
            <since_tizen> 4 </since_tizen>
        </member>
        <member name="M:Tizen.Multimedia.Vision.MediaVisionSource.#ctor(System.Byte[],System.UInt32,System.UInt32,Tizen.Multimedia.ColorSpace)">
            <summary>
            Initializes a new instance of the <see cref="T:Tizen.Multimedia.Vision.MediaVisionSource"/> class based on the buffer and <see cref="T:Tizen.Multimedia.ColorSpace"/>.
            </summary>
            <param name="buffer">The buffer of image data.</param>
            <param name="width">The width of image.</param>
            <param name="height">The height of image.</param>
            <param name="colorSpace">The image <see cref="T:Tizen.Multimedia.ColorSpace"/>.</param>
            <exception cref="T:System.NotSupportedException">
                None of the related features are not supported.<br/>
                -or-<br/>
                <paramref name="colorSpace"/> is not supported.
            </exception>
            <exception cref="T:System.ArgumentNullException"><paramref name="buffer"/> is null.</exception>
            <exception cref="T:System.ArgumentException">
                <paramref name="buffer"/> has no element.(The length is zero.)<br/>
                -or-<br/>
                <paramref name="colorSpace"/> is invalid.
            </exception>
            <since_tizen> 4 </since_tizen>
        </member>
        <member name="M:Tizen.Multimedia.Vision.MediaVisionSource.Finalize">
            <summary>
            Finalizes an instance of the MediaVisionSource class.
            </summary>
        </member>
        <member name="P:Tizen.Multimedia.Vision.MediaVisionSource.Buffer">
            <summary>
            Gets the buffer of the media source.
            </summary>
            <exception cref="T:System.ObjectDisposedException">The <see cref="T:Tizen.Multimedia.Vision.MediaVisionSource"/> has already been disposed of.</exception>
            <since_tizen> 4 </since_tizen>
        </member>
        <member name="M:Tizen.Multimedia.Vision.MediaVisionSource.IsSupportedColorSpace(Tizen.Multimedia.ColorSpace)">
            <summary>
            Gets MediaVision's supported ColorSpace state.
            true if supported, otherwise false.
            </summary>
            <since_tizen> 4 </since_tizen>
        </member>
        <member name="P:Tizen.Multimedia.Vision.MediaVisionSource.Height">
            <summary>
            Gets the height of the media source.
            </summary>
            <exception cref="T:System.ObjectDisposedException">The <see cref="T:Tizen.Multimedia.Vision.MediaVisionSource"/> has already been disposed of.</exception>
            <since_tizen> 4 </since_tizen>
        </member>
        <member name="P:Tizen.Multimedia.Vision.MediaVisionSource.Width">
            <summary>
            Gets the width of the media source.
            </summary>
            <exception cref="T:System.ObjectDisposedException">The <see cref="T:Tizen.Multimedia.Vision.MediaVisionSource"/> has already been disposed of.</exception>
            <since_tizen> 4 </since_tizen>
        </member>
        <member name="P:Tizen.Multimedia.Vision.MediaVisionSource.Colorspace">
            <summary>
            Gets <see cref="T:Tizen.Multimedia.ColorSpace"/> of the media source.
            </summary>
            <exception cref="T:System.ObjectDisposedException">The <see cref="T:Tizen.Multimedia.Vision.MediaVisionSource"/> has already been disposed of.</exception>
            <since_tizen> 4 </since_tizen>
        </member>
        <member name="P:Tizen.Multimedia.Vision.MediaVisionSource.SupportedColorSpaces">
            <summary>
            Gets the supported colorspaces for <see cref="T:Tizen.Multimedia.Vision.MediaVisionSource"/>.
            </summary>
            <since_tizen> 4 </since_tizen>
        </member>
        <member name="M:Tizen.Multimedia.Vision.MediaVisionSource.Dispose">
            <summary>
            Releases all resources used by the current instance.
            </summary>
            <since_tizen> 4 </since_tizen>
        </member>
        <member name="M:Tizen.Multimedia.Vision.MediaVisionSource.Dispose(System.Boolean)">
            <summary>
            Releases the resources used by the <see cref="T:Tizen.Multimedia.Vision.MediaVisionSource"/> object.
            </summary>
            <param name="disposing">
            true to release both managed and unmanaged resources; otherwise false to release only unmanaged resources.
            </param>
            <since_tizen> 4 </since_tizen>
        </member>
        <member name="T:Tizen.Multimedia.Vision.MovementDetectedEventArgs">
            <summary>
            Provides data for the <see cref="E:Tizen.Multimedia.Vision.MovementDetector.Detected"/> event.
            </summary>
            <since_tizen> 4 </since_tizen>
        </member>
        <member name="M:Tizen.Multimedia.Vision.MovementDetectedEventArgs.#ctor(System.Collections.Generic.IEnumerable{Tizen.Multimedia.Rectangle})">
            <summary>
            Initializes a new instance of the <see cref="T:Tizen.Multimedia.Vision.MovementDetectedEventArgs"/> class.
            </summary>
            <since_tizen> 4 </since_tizen>
        </member>
        <member name="P:Tizen.Multimedia.Vision.MovementDetectedEventArgs.Areas">
            <summary>
            Gets a set of rectangular regions where movement was detected.
            </summary>
            <since_tizen> 4 </since_tizen>
        </member>
        <member name="T:Tizen.Multimedia.Vision.MovementDetectionConfiguration">
            <summary>
            Represents a configuration of <see cref="T:Tizen.Multimedia.Vision.MovementDetector"/>.
            </summary>
            <feature>http://tizen.org/feature/vision.face_recognition</feature>
            <feature>http://tizen.org/feature/vision.image_recognition</feature>
            <since_tizen> 4 </since_tizen>
        </member>
        <member name="F:Tizen.Multimedia.Vision.MovementDetectionConfiguration.DefaultThreshold">
            <summary>
            A read-only field that represents the default value of <see cref="P:Tizen.Multimedia.Vision.MovementDetectionConfiguration.Threshold"/>.
            </summary>
            <since_tizen> 4 </since_tizen>
        </member>
        <member name="M:Tizen.Multimedia.Vision.MovementDetectionConfiguration.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Tizen.Multimedia.Vision.MovementDetectionConfiguration"/> class.
            </summary>
            <exception cref="T:System.NotSupportedException">The required features are not supported.</exception>
            <since_tizen> 4 </since_tizen>
        </member>
        <member name="P:Tizen.Multimedia.Vision.MovementDetectionConfiguration.Threshold">
            <summary>
            Gets or sets movement detection threshold.<br/>
            This value might be set before subscription on <see cref="E:Tizen.Multimedia.Vision.MovementDetector.Detected"/> event
            to specify the sensitivity of the movement detector.
            </summary>
            <value>
            The value indicating the sensitivity of <see cref="T:Tizen.Multimedia.Vision.MovementDetector"/> from 0 to 255 inclusive,
            where 255 means that no movements will be detected and 0 means that all frame changes
            will be interpreted as movements.<br/>
            The default is 10.
            </value>
            <exception cref="T:System.ObjectDisposedException">The <see cref="T:Tizen.Multimedia.Vision.MovementDetectionConfiguration"/> already has been disposed of.</exception>
            <exception cref="T:System.ArgumentOutOfRangeException">
                <paramref name="value"/> is less than zero.<br/>
                -or-<br/>
                <paramref name="value"/> is greater than 255.
            </exception>
            <since_tizen> 4 </since_tizen>
        </member>
        <member name="T:Tizen.Multimedia.Vision.MovementDetector">
            <summary>
            Provides the ability to detect movement on image sources.
            </summary>
            <feature>http://tizen.org/feature/vision.face_recognition</feature>
            <feature>http://tizen.org/feature/vision.image_recognition</feature>
            <seealso cref="T:Tizen.Multimedia.Vision.MovementDetectionConfiguration"/>
            <since_tizen> 4 </since_tizen>
        </member>
        <member name="M:Tizen.Multimedia.Vision.MovementDetector.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Tizen.Multimedia.Vision.MovementDetector"/> class.
            </summary>
            <exception cref="T:System.NotSupportedException">The required features are not supported.</exception>
            <since_tizen> 4 </since_tizen>
        </member>
        <member name="E:Tizen.Multimedia.Vision.MovementDetector.Detected">
            <summary>
            Occurs when the movement detected.
            </summary>
            <remarks>The event handler will be executed on an internal thread.</remarks>
            <since_tizen> 4 </since_tizen>
        </member>
        <member name="M:Tizen.Multimedia.Vision.MovementDetector.AddSource(Tizen.Multimedia.Vision.SurveillanceSource)">
            <summary>
            Adds <see cref="T:Tizen.Multimedia.Vision.SurveillanceSource"/>.
            </summary>
            <param name="source">The source used for recognition.</param>
            <exception cref="T:System.ArgumentNullException"><paramref name="source"/> is null.</exception>
            <exception cref="T:System.ObjectDisposedException">The <see cref="T:Tizen.Multimedia.Vision.MovementDetector"/> has already been disposed of.</exception>
            <see cref="M:Tizen.Multimedia.Vision.SurveillanceSource.Push(Tizen.Multimedia.Vision.MediaVisionSource)"/>
            <since_tizen> 4 </since_tizen>
        </member>
        <member name="M:Tizen.Multimedia.Vision.MovementDetector.AddSource(Tizen.Multimedia.Vision.SurveillanceSource,Tizen.Multimedia.Vision.MovementDetectionConfiguration)">
            <summary>
            Adds <see cref="T:Tizen.Multimedia.Vision.SurveillanceSource"/> with the provided <see cref="T:Tizen.Multimedia.Vision.MovementDetectionConfiguration"/>.
            </summary>
            <param name="source">The source used for recognition.</param>
            <param name="config">The config for the <paramref name="source"/>. This value can be null.</param>
            <exception cref="T:System.ArgumentNullException"><paramref name="source"/> is null.</exception>
            <exception cref="T:System.ObjectDisposedException">
                The <see cref="T:Tizen.Multimedia.Vision.MovementDetector"/> has already been disposed of.<br/>
                -or-<br/>
                <paramref name="config"/> has already been disposed of.
            </exception>
            <see cref="M:Tizen.Multimedia.Vision.SurveillanceSource.Push(Tizen.Multimedia.Vision.MediaVisionSource)"/>
            <since_tizen> 4 </since_tizen>
        </member>
        <member name="T:Tizen.Multimedia.Vision.ObjectDetectionResult">
            <summary>
            Provides the ability to get the result of object detection using <see cref="T:Tizen.Multimedia.Vision.InferenceModelConfiguration"/> and
            <see cref="T:Tizen.Multimedia.Vision.ObjectDetector"/>.
            </summary>
            <since_tizen> 6 </since_tizen>
        </member>
        <member name="P:Tizen.Multimedia.Vision.ObjectDetectionResult.Indice">
            <summary>
            Gets the indice of detected object.
            </summary>
            <since_tizen> 6 </since_tizen>
        </member>
        <member name="P:Tizen.Multimedia.Vision.ObjectDetectionResult.Name">
            <summary>
            Gets the name of detected object.
            </summary>
            <since_tizen> 6 </since_tizen>
        </member>
        <member name="P:Tizen.Multimedia.Vision.ObjectDetectionResult.Confidence">
            <summary>
            Gets the confidence of detected object.
            </summary>
            <since_tizen> 6 </since_tizen>
        </member>
        <member name="P:Tizen.Multimedia.Vision.ObjectDetectionResult.Location">
            <summary>
            Gets the location of detected object.
            </summary>
            <since_tizen> 6 </since_tizen>
        </member>
        <member name="T:Tizen.Multimedia.Vision.ObjectDetector">
            <summary>
            Provides the ability to detect objects and get its locations on image source using inference engine.
            </summary>
            <since_tizen> 6 </since_tizen>
        </member>
        <member name="M:Tizen.Multimedia.Vision.ObjectDetector.DetectAsync(Tizen.Multimedia.Vision.MediaVisionSource,Tizen.Multimedia.Vision.InferenceModelConfiguration)">
            <summary>
            Detects objects and gets its locations on the source image using inference engine set in <paramref name="config"/>.<br/>
            Each time when DetectAsync is called, a set of the detected objects at the media source are received asynchronously.
            </summary>
            <feature>http://tizen.org/feature/vision.inference</feature>
            <feature>http://tizen.org/feature/vision.inference.image</feature>
            <param name="source">The source of the media where faces will be detected.</param>
            <param name="config">The engine's configuration that will be used for detecting.</param>
            <returns>
            A task that represents the asynchronous detect operation.<br/>
            If there's no detected object, empty collection will be returned.
            </returns>
            <exception cref="T:System.ArgumentNullException"><paramref name="source"/> or <paramref name="config"/> is null.</exception>
            <exception cref="T:System.InvalidOperationException">Internal error.</exception>
            <exception cref="T:System.NotSupportedException">The feature is not supported.</exception>
            <exception cref="T:System.UnauthorizedAccessException">The caller has no required privilege.</exception>
            <seealso cref="T:Tizen.Multimedia.Vision.InferenceModelConfiguration"/>
            <since_tizen> 6 </since_tizen>
        </member>
        <member name="T:Tizen.Multimedia.Vision.PersonAppearanceDetectedEventArgs">
            <summary>
            Provides data for the <see cref="E:Tizen.Multimedia.Vision.PersonAppearanceDetector.Detected"/> event.
            </summary>
            <since_tizen> 4 </since_tizen>
        </member>
        <member name="M:Tizen.Multimedia.Vision.PersonAppearanceDetectedEventArgs.#ctor(System.Collections.Generic.IEnumerable{Tizen.Multimedia.Rectangle},System.Collections.Generic.IEnumerable{Tizen.Multimedia.Rectangle},System.Collections.Generic.IEnumerable{Tizen.Multimedia.Rectangle})">
            <summary>
            Initializes a new instance of the <see cref="T:Tizen.Multimedia.Vision.PersonAppearanceDetectedEventArgs"/> class.
            </summary>
            <since_tizen> 4 </since_tizen>
        </member>
        <member name="P:Tizen.Multimedia.Vision.PersonAppearanceDetectedEventArgs.AppearanceAreas">
            <summary>
            Gets a set of rectangular regions where appearances of the persons were detected.
            </summary>
            <since_tizen> 4 </since_tizen>
        </member>
        <member name="P:Tizen.Multimedia.Vision.PersonAppearanceDetectedEventArgs.DisappearanceAreas">
            <summary>
            Gets a set of rectangular regions where disappearances of the persons were detected.
            </summary>
            <since_tizen> 4 </since_tizen>
        </member>
        <member name="P:Tizen.Multimedia.Vision.PersonAppearanceDetectedEventArgs.TrackedAreas">
            <summary>
            Gets a set of rectangular regions where persons were tracked.
            </summary>
            <since_tizen> 4 </since_tizen>
        </member>
        <member name="T:Tizen.Multimedia.Vision.PersonAppearanceDetectionConfiguration">
            <summary>
            Represents a configuration of <see cref="T:Tizen.Multimedia.Vision.PersonAppearanceDetector"/> instances.
            </summary>
            <feature>http://tizen.org/feature/vision.face_recognition</feature>
            <feature>http://tizen.org/feature/vision.image_recognition</feature>
            <since_tizen> 4 </since_tizen>
        </member>
        <member name="F:Tizen.Multimedia.Vision.PersonAppearanceDetectionConfiguration.DefaultSkipFramesCount">
            <summary>
            A read-only field that represents the default value of <see cref="P:Tizen.Multimedia.Vision.PersonAppearanceDetectionConfiguration.SkipFramesCount"/>.
            </summary>
            <since_tizen> 4 </since_tizen>
        </member>
        <member name="M:Tizen.Multimedia.Vision.PersonAppearanceDetectionConfiguration.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Tizen.Multimedia.Vision.PersonAppearanceDetectionConfiguration"/> class.
            </summary>
            <exception cref="T:System.NotSupportedException">The required features are not supported.</exception>
            <since_tizen> 4 </since_tizen>
        </member>
        <member name="P:Tizen.Multimedia.Vision.PersonAppearanceDetectionConfiguration.SkipFramesCount">
             <summary>
             Gets or sets how many frames will be skipped during push source.<br/>
             </summary>
             <value>
             The value to specify the number of <see cref="T:Tizen.Multimedia.Vision.MediaVisionSource"/> calls will be ignored by subscription
             of the event trigger.<br/>
            
             The default is 0. It means that no frames will be skipped and all <see cref="T:Tizen.Multimedia.Vision.MediaVisionSource"/> will
             be processed.
             </value>
             <exception cref="T:System.ObjectDisposedException">The <see cref="T:Tizen.Multimedia.Vision.PersonAppearanceDetectionConfiguration"/> already has been disposed of.</exception>
             <exception cref="T:System.ArgumentOutOfRangeException"><paramref name="value"/> is less than zero.</exception>
             <seealso cref="M:Tizen.Multimedia.Vision.SurveillanceSource.Push(Tizen.Multimedia.Vision.MediaVisionSource)"/>
             <since_tizen> 4 </since_tizen>
        </member>
        <member name="T:Tizen.Multimedia.Vision.PersonAppearanceDetector">
            <summary>
            Provides the ability to detect person appearance changes on image sources.
            </summary>
            <feature>http://tizen.org/feature/vision.face_recognition</feature>
            <feature>http://tizen.org/feature/vision.image_recognition</feature>
            <seealso cref="T:Tizen.Multimedia.Vision.PersonAppearanceDetectionConfiguration"/>
            <since_tizen> 4 </since_tizen>
        </member>
        <member name="M:Tizen.Multimedia.Vision.PersonAppearanceDetector.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Tizen.Multimedia.Vision.PersonAppearanceDetector"/> class.
            </summary>
            <exception cref="T:System.NotSupportedException">The required features are not supported.</exception>
            <since_tizen> 4 </since_tizen>
        </member>
        <member name="E:Tizen.Multimedia.Vision.PersonAppearanceDetector.Detected">
            <summary>
            Occurs when the any appearance changes detected.
            </summary>
            <remarks>The event handler will be executed on an internal thread.</remarks>
            <since_tizen> 4 </since_tizen>
        </member>
        <member name="M:Tizen.Multimedia.Vision.PersonAppearanceDetector.AddSource(Tizen.Multimedia.Vision.SurveillanceSource)">
            <summary>
            Adds <see cref="T:Tizen.Multimedia.Vision.SurveillanceSource"/>.
            </summary>
            <param name="source">The source used for recognition.</param>
            <exception cref="T:System.ArgumentNullException"><paramref name="source"/> is null.</exception>
            <exception cref="T:System.ObjectDisposedException">The <see cref="T:Tizen.Multimedia.Vision.PersonAppearanceDetector"/> has already been disposed of.</exception>
            <see cref="M:Tizen.Multimedia.Vision.SurveillanceSource.Push(Tizen.Multimedia.Vision.MediaVisionSource)"/>
            <since_tizen> 4 </since_tizen>
        </member>
        <member name="M:Tizen.Multimedia.Vision.PersonAppearanceDetector.AddSource(Tizen.Multimedia.Vision.SurveillanceSource,Tizen.Multimedia.Vision.PersonAppearanceDetectionConfiguration)">
            <summary>
            Adds <see cref="T:Tizen.Multimedia.Vision.SurveillanceSource"/> with the provided <see cref="T:Tizen.Multimedia.Vision.PersonAppearanceDetectionConfiguration"/>.
            </summary>
            <param name="source">The source used for recognition.</param>
            <param name="config">The config for the <paramref name="source"/>. This value can be null.</param>
            <exception cref="T:System.ArgumentNullException"><paramref name="source"/> is null.</exception>
            <exception cref="T:System.ObjectDisposedException">
                The <see cref="T:Tizen.Multimedia.Vision.PersonAppearanceDetector"/> has already been disposed of.<br/>
                -or-<br/>
                <paramref name="config"/> has already been disposed of.
            </exception>
            <see cref="M:Tizen.Multimedia.Vision.SurveillanceSource.Push(Tizen.Multimedia.Vision.MediaVisionSource)"/>
            <since_tizen> 4 </since_tizen>
        </member>
        <member name="T:Tizen.Multimedia.Vision.PersonRecognitionConfiguration">
            <summary>
            Represents a configuration of <see cref="T:Tizen.Multimedia.Vision.PersonRecognizer"/> instances.
            </summary>
            <feature>http://tizen.org/feature/vision.face_recognition</feature>
            <feature>http://tizen.org/feature/vision.image_recognition</feature>
            <since_tizen> 4 </since_tizen>
        </member>
        <member name="M:Tizen.Multimedia.Vision.PersonRecognitionConfiguration.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Tizen.Multimedia.Vision.PersonRecognitionConfiguration"/> class.
            </summary>
            <param name="modelPath">Path to the face recognition model.</param>
            <exception cref="T:System.ArgumentNullException"><paramref name="modelPath"/> is null.</exception>
            <exception cref="T:System.NotSupportedException">The required features are not supported.</exception>
            <since_tizen> 4 </since_tizen>
        </member>
        <member name="P:Tizen.Multimedia.Vision.PersonRecognitionConfiguration.FaceRecognitionModelPath">
            <summary>
            Gets or sets face recognition model file path.
            </summary>
            <exception cref="T:System.ArgumentNullException"><paramref name="value"/> is null.</exception>
            <exception cref="T:System.ObjectDisposedException">The <see cref="T:Tizen.Multimedia.Vision.PersonRecognitionConfiguration"/> already has been disposed of.</exception>
            <since_tizen> 4 </since_tizen>
        </member>
        <member name="T:Tizen.Multimedia.Vision.PersonRecognitionInfo">
            <summary>
            Represents a result of <see cref="T:Tizen.Multimedia.Vision.PersonRecognizer"/> instances.
            </summary>
            <since_tizen> 4 </since_tizen>
        </member>
        <member name="M:Tizen.Multimedia.Vision.PersonRecognitionInfo.#ctor(Tizen.Multimedia.Rectangle,System.Int32,System.Double)">
            <summary>
            Initializes a new instance of the <see cref="T:Tizen.Multimedia.Vision.PersonRecognitionInfo"/> class.
            </summary>
            <since_tizen> 4 </since_tizen>
        </member>
        <member name="P:Tizen.Multimedia.Vision.PersonRecognitionInfo.Area">
            <summary>
            Gets the rectangular location where person face was recognized.
            </summary>
            <since_tizen> 4</since_tizen>
        </member>
        <member name="P:Tizen.Multimedia.Vision.PersonRecognitionInfo.Label">
            <summary>
            Gets the label that correspond to the recognized person.
            </summary>
            <since_tizen> 4 </since_tizen>
        </member>
        <member name="P:Tizen.Multimedia.Vision.PersonRecognitionInfo.Confidence">
            <summary>
            Gets the confidence value that correspond to the recognized person.
            </summary>
            <since_tizen> 4 </since_tizen>
        </member>
        <member name="T:Tizen.Multimedia.Vision.PersonRecognizedEventArgs">
            <summary>
            Provides data for the <see cref="E:Tizen.Multimedia.Vision.PersonRecognizer.Recognized"/> event.
            </summary>
            <since_tizen> 4 </since_tizen>
        </member>
        <member name="M:Tizen.Multimedia.Vision.PersonRecognizedEventArgs.#ctor(System.Collections.Generic.IEnumerable{Tizen.Multimedia.Vision.PersonRecognitionInfo})">
            <summary>
            Initializes a new instance of the <see cref="T:Tizen.Multimedia.Vision.PersonRecognizedEventArgs"/> class.
            </summary>
            <since_tizen> 4 </since_tizen>
        </member>
        <member name="P:Tizen.Multimedia.Vision.PersonRecognizedEventArgs.Recognitions">
            <summary>
            Gets a set of information that correspond to the recognized persons.
            </summary>
            <since_tizen> 4 </since_tizen>
        </member>
        <member name="T:Tizen.Multimedia.Vision.PersonRecognizer">
            <summary>
            Provides the ability to recognize person on image sources.
            </summary>
            <feature>http://tizen.org/feature/vision.face_recognition</feature>
            <feature>http://tizen.org/feature/vision.image_recognition</feature>
            <seealso cref="T:Tizen.Multimedia.Vision.PersonRecognitionConfiguration"/>
            <since_tizen> 4 </since_tizen>
        </member>
        <member name="M:Tizen.Multimedia.Vision.PersonRecognizer.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Tizen.Multimedia.Vision.PersonRecognizer"/> class.
            </summary>
            <exception cref="T:System.NotSupportedException">The required features are not supported.</exception>
            <since_tizen> 4 </since_tizen>
        </member>
        <member name="E:Tizen.Multimedia.Vision.PersonRecognizer.Recognized">
            <summary>
            Occurs when a person recognized.
            </summary>
            <remarks>The event handler will be executed on an internal thread.</remarks>
            <seealso cref="P:Tizen.Multimedia.Vision.PersonRecognitionConfiguration.FaceRecognitionModelPath"/>
            <since_tizen> 4 </since_tizen>
        </member>
        <member name="M:Tizen.Multimedia.Vision.PersonRecognizer.AddSource(Tizen.Multimedia.Vision.SurveillanceSource,Tizen.Multimedia.Vision.PersonRecognitionConfiguration)">
            <summary>
            Adds <see cref="T:Tizen.Multimedia.Vision.SurveillanceSource"/> with the provided <see cref="T:Tizen.Multimedia.Vision.PersonRecognitionConfiguration"/>.
            </summary>
            <param name="source">The source used for recognition.</param>
            <param name="config">The config for the <paramref name="source"/>.</param>
            <exception cref="T:System.ArgumentNullException">
                <paramref name="source"/> is null.<br/>
                -or-<br/>
                <paramref name="config"/> is null.
            </exception>
            <exception cref="T:System.ObjectDisposedException">
                The <see cref="T:Tizen.Multimedia.Vision.PersonRecognizer"/> has already been disposed of.<br/>
                -or-<br/>
                <paramref name="config"/> has already been disposed of.
            </exception>
            <exception cref="T:System.ArgumentException">
            <see cref="P:Tizen.Multimedia.Vision.PersonRecognitionConfiguration.FaceRecognitionModelPath"/> of <paramref name="config"/> does not exists.
            </exception>
            <exception cref="T:System.UnauthorizedAccessException">
            No permission to access to the <see cref="P:Tizen.Multimedia.Vision.PersonRecognitionConfiguration.FaceRecognitionModelPath"/>.
            </exception>
            <exception cref="T:System.NotSupportedException">The model file is not supported format or file.</exception>
            <see cref="M:Tizen.Multimedia.Vision.SurveillanceSource.Push(Tizen.Multimedia.Vision.MediaVisionSource)"/>
            <since_tizen> 4 </since_tizen>
        </member>
        <member name="T:Tizen.Multimedia.Vision.Landmark">
            <summary>
            Represents a Landmark in pose detection.
            </summary>
            <since_tizen> 9 </since_tizen>
        </member>
        <member name="P:Tizen.Multimedia.Vision.Landmark.Location">
            <summary>
            Represents a location in the 2D space.
            </summary>
            <since_tizen> 9 </since_tizen>
        </member>
        <member name="P:Tizen.Multimedia.Vision.Landmark.Score">
            <summary>
            Confidence score of point.
            </summary>
            <since_tizen> 9 </since_tizen>
        </member>
        <member name="T:Tizen.Multimedia.Vision.PoseLandmarkDetector">
            <summary>
            Provides the ability to detect Pose landmarks on image source using inference engine.
            </summary>
            <since_tizen> 9 </since_tizen>
        </member>
        <member name="M:Tizen.Multimedia.Vision.PoseLandmarkDetector.DetectAsync(Tizen.Multimedia.Vision.MediaVisionSource,Tizen.Multimedia.Vision.InferenceModelConfiguration)">
            <summary>
            Detects Pose landmarks on the source image using inference engine set in <paramref name="config"/>.<br/>
            </summary>
            <remarks>
            To set region-of-interest area in source image, please set <see cref="P:Tizen.Multimedia.Vision.InferenceModelConfiguration.Roi"/>.
            If not set, full image area will be used to detect Pose landmark.
            </remarks>
            <feature>http://tizen.org/feature/vision.inference</feature>
            <feature>http://tizen.org/feature/vision.inference.face</feature>
            <param name="source">The source of the media where poses will be detected.</param>
            <param name="config">The engine's configuration that will be used for detecting.</param>
            <returns>
            A task that represents the asynchronous detect operation.<br/>
            </returns>
            <exception cref="T:System.ArgumentNullException"><paramref name="source"/> or <paramref name="config"/> is null.</exception>
            <exception cref="T:System.InvalidOperationException">Internal error.</exception>
            <exception cref="T:System.NotSupportedException">The feature is not supported.</exception>
            <exception cref="T:System.UnauthorizedAccessException">The caller has no required privilege.</exception>
            <seealso cref="T:Tizen.Multimedia.Vision.InferenceModelConfiguration"/>
            <since_tizen> 9 </since_tizen>
        </member>
        <member name="T:Tizen.Multimedia.Vision.QrConfiguration">
            <summary>
            Represents a QR configuration of <see cref="T:Tizen.Multimedia.Vision.BarcodeGenerator"/>.
            </summary>
            <since_tizen> 4 </since_tizen>
        </member>
        <member name="M:Tizen.Multimedia.Vision.QrConfiguration.#ctor(Tizen.Multimedia.Vision.QrMode,Tizen.Multimedia.Vision.ErrorCorrectionLevel,System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:Tizen.Multimedia.Vision.QrConfiguration"/> class.
            </summary>
            <param name="qrMode">Encoding mode for the message.</param>
            <param name="ecc">Error correction level.</param>
            <param name="version">QR code version. From 1 to 40 inclusive.</param>
            <exception cref="T:System.ArgumentOutOfRangeException">
                <paramref name="version"/> is less than 1.<br/>
                -or-<br/>
                <paramref name="version"/> is greater than 40.
            </exception>
            <exception cref="T:System.ArgumentException">
                <paramref name="qrMode"/> is invalid.<br/>
                -or-<br/>
                <paramref name="ecc"/> is invalid.
            </exception>
            <example>
            <code>
            var qrConfig = new QrConfiguration(QrMode.Numeric, ErrorCorrectionLevel.Medium, 30);
            </code>
            </example>
            <since_tizen> 4 </since_tizen>
        </member>
        <member name="P:Tizen.Multimedia.Vision.QrConfiguration.Mode">
            <summary>
            Gets the encoding mode for the message.
            </summary>
            <since_tizen> 4 </since_tizen>
        </member>
        <member name="P:Tizen.Multimedia.Vision.QrConfiguration.ErrorCorrectionLevel">
            <summary>
            Gets the error correction level.
            </summary>
            <since_tizen> 4 </since_tizen>
        </member>
        <member name="P:Tizen.Multimedia.Vision.QrConfiguration.Version">
            <summary>
            Gets the QR code version.
            </summary>
            <since_tizen> 4 </since_tizen>
        </member>
        <member name="T:Tizen.Multimedia.Vision.QrMode">
            <summary>
            Specifies the supported QR code encoding modes.
            </summary>
            <since_tizen> 4</since_tizen>
        </member>
        <member name="F:Tizen.Multimedia.Vision.QrMode.Numeric">
            <summary>
            Numeric digits.
            </summary>
            <since_tizen> 3 </since_tizen>
        </member>
        <member name="F:Tizen.Multimedia.Vision.QrMode.AlphaNumeric">
            <summary>
            Alphanumeric characters, '$', '%', '*', '+', '-', '.', '/', and ':'.
            </summary>
            <since_tizen> 3</since_tizen>
        </member>
        <member name="F:Tizen.Multimedia.Vision.QrMode.Byte">
            <summary>
            Raw 8-bit bytes.
            </summary>
            <since_tizen> 3 </since_tizen>
        </member>
        <member name="F:Tizen.Multimedia.Vision.QrMode.Utf8">
            <summary>
            UTF-8 character encoding.
            </summary>
            <since_tizen> 3 </since_tizen>
        </member>
        <member name="T:Tizen.Multimedia.Vision.Quadrangle">
            <summary>
            Represents a region with 4 <see cref="T:Tizen.Multimedia.Point"/>s.
            </summary>
            <since_tizen> 4 </since_tizen>
        </member>
        <member name="M:Tizen.Multimedia.Vision.Quadrangle.#ctor(Tizen.Multimedia.Point[])">
            <summary>
            Initializes a new instance of the <see cref="T:Tizen.Multimedia.Vision.Quadrangle"/> class with an array of <see cref="T:Tizen.Multimedia.Point"/>.
            </summary>
            <remarks><paramref name="points"/> must have 4 elements.</remarks>
            <param name="points">Four points that define the object bounding quadrangle.</param>
            <exception cref="T:System.ArgumentException">The length of <paramref name="points"/> is not 4.</exception>
            <since_tizen> 4 </since_tizen>
        </member>
        <member name="P:Tizen.Multimedia.Vision.Quadrangle.Points">
            <summary>
            Gets four points that define the object bounding quadrangle.
            </summary>
            <since_tizen> 4 </since_tizen>
        </member>
        <member name="M:Tizen.Multimedia.Vision.Quadrangle.ToString">
            <summary>
            Returns a string that represents the current object.
            </summary>
            <returns>A string that represents the current object.</returns>
            <since_tizen> 4 </since_tizen>
        </member>
        <member name="T:Tizen.Multimedia.Vision.RoiTracker">
            <summary>
            Provides the ability to track ROI(Region Of Interest) area on image source.
            </summary>
            <since_tizen> 10 </since_tizen>
        </member>
        <member name="M:Tizen.Multimedia.Vision.RoiTracker.TrackAsync(Tizen.Multimedia.Vision.MediaVisionSource,Tizen.Multimedia.Vision.RoiTrackingConfiguration)">
            <summary>Tracks ROI(Region Of Interest) on the source image.</summary>
            <remarks><see cref="P:Tizen.Multimedia.Vision.RoiTrackingConfiguration.Roi"/> should be set first correctly.</remarks>
            <feature>http://tizen.org/feature/vision.roi_tracking</feature>
            <param name="source">The source of the media user wants to track.</param>
            <param name="config">The engine's configuration that will be used for tracking.</param>
            <returns>A task that represents the asynchronous tracking operation.</returns>
            <exception cref="T:System.ArgumentNullException"><paramref name="source"/> or <paramref name="config"/> is null.</exception>
            <exception cref="T:System.ArgumentException"><paramref name="config.Roi.Roi"/> is not set correctly.</exception>
            <exception cref="T:System.InvalidOperationException">Internal error.</exception>
            <seealso cref="T:Tizen.Multimedia.Vision.RoiTrackingConfiguration"/>
            <since_tizen> 10 </since_tizen>
        </member>
        <member name="T:Tizen.Multimedia.Vision.RoiTrackingConfiguration">
            <summary>
            Represents a configuration of <see cref="T:Tizen.Multimedia.Vision.RoiTracker"/> instances.
            </summary>
            <feature>http://tizen.org/feature/vision.roi_tracking</feature>
            <exception cref="T:System.NotSupportedException">The required features are not supported.</exception>
            <since_tizen> 10 </since_tizen>
        </member>
        <member name="M:Tizen.Multimedia.Vision.RoiTrackingConfiguration.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Tizen.Multimedia.Vision.RoiTrackingConfiguration"/> class.
            </summary>
            <exception cref="T:System.NotSupportedException">The feature is not supported.</exception>
            <since_tizen> 10 </since_tizen>
        </member>
        <member name="P:Tizen.Multimedia.Vision.RoiTrackingConfiguration.TrackerType">
            <summary>
            Gets or sets the type of ROI tracker.<br/>
            Default value is <see cref="F:Tizen.Multimedia.Vision.RoiTrackerType.Balance"/>.
            </summary>
            <exception cref="T:System.ArgumentException"><paramref name="value"/> is not valid.</exception>
            <since_tizen> 10 </since_tizen>
        </member>
        <member name="P:Tizen.Multimedia.Vision.RoiTrackingConfiguration.Roi">
            <summary>
            Gets or sets the ROI(Region Of Interest) of <see cref="T:Tizen.Multimedia.Vision.RoiTracker"/>.
            </summary>
            <remarks>
            The default value is Rectangle(0, 0, 0, 0) but it's meaningless.<br/>
            The user should set this to correct value for <see cref="M:Tizen.Multimedia.Vision.RoiTracker.TrackAsync(Tizen.Multimedia.Vision.MediaVisionSource,Tizen.Multimedia.Vision.RoiTrackingConfiguration)"/>.
            </remarks>
            <exception cref="T:System.ArgumentOutOfRangeException">
                The width of <paramref name="value"/> is less than or equal to zero.<br/>
                -or-<br/>
                The height of <paramref name="value"/> is less than or equal to zero.<br/>
                -or-<br/>
                The x position of <paramref name="value"/> is less than zero.<br/>
                -or-<br/>
                The y position of <paramref name="value"/> is less than zero.
            </exception>
            <since_tizen> 10 </since_tizen>
        </member>
        <member name="M:Tizen.Multimedia.Vision.RoiTrackingConfiguration.Dispose(System.Boolean)">
            <summary>
            Releases the resources used by the <see cref="T:Tizen.Multimedia.Vision.RoiTrackingConfiguration"/> object.
            </summary>
            <param name="disposing">
            true to release both managed and unmanaged resources, otherwise false to release only unmanaged resources.
            </param>
            <since_tizen> 10 </since_tizen>
        </member>
        <member name="T:Tizen.Multimedia.Vision.RoiTrackerType">
            <summary>
            Specifies the type of ROI tracker.
            </summary>
            <since_tizen> 10 </since_tizen>
        </member>
        <member name="F:Tizen.Multimedia.Vision.RoiTrackerType.Accuracy">
            <summary>
            ROI tracker focuses on accuracy
            </summary>
        </member>
        <member name="F:Tizen.Multimedia.Vision.RoiTrackerType.Balance">
            <summary>
            ROI tracker focuses on both accuracy and speed
            </summary>
        </member>
        <member name="F:Tizen.Multimedia.Vision.RoiTrackerType.Speed">
            <summary>
            ROI tracker focuses on speed
            </summary>
        </member>
        <member name="T:Tizen.Multimedia.Vision.SurveillanceEngineConfiguration">
            <summary>
            SurveillanceEngineConfiguration is a base class for surveillance configurations.
            </summary>
            <feature>http://tizen.org/feature/vision.face_recognition</feature>
            <feature>http://tizen.org/feature/vision.image_recognition</feature>
            <since_tizen> 4 </since_tizen>
        </member>
        <member name="T:Tizen.Multimedia.Vision.SurveillanceEngine">
            <summary>
            SurveillanceEngine is a base class for surveillance event triggers.
            Media Vision Surveillance provides the functionality which can be utilized for creation of video surveillance systems.
            </summary>
            <feature>http://tizen.org/feature/vision.face_recognition</feature>
            <feature>http://tizen.org/feature/vision.image_recognition</feature>
            <seealso cref="T:Tizen.Multimedia.Vision.MovementDetector"/>
            <seealso cref="T:Tizen.Multimedia.Vision.PersonAppearanceDetector"/>
            <seealso cref="T:Tizen.Multimedia.Vision.PersonRecognizer"/>
            <since_tizen> 4 </since_tizen>
        </member>
        <member name="M:Tizen.Multimedia.Vision.SurveillanceEngine.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Tizen.Multimedia.Vision.SurveillanceEngine"/> class.
            </summary>
            <param name="eventType">The type of the event trigger.</param>
        </member>
        <member name="M:Tizen.Multimedia.Vision.SurveillanceEngine.Finalize">
            <summary>
            Finalizes an instance of the SurveillanceEngine class.
            </summary>
        </member>
        <member name="P:Tizen.Multimedia.Vision.SurveillanceEngine.Roi">
            <summary>
            Sets and gets the ROI (Region Of Interest).
            </summary>
            <exception cref="T:System.ObjectDisposedException">The <see cref="T:Tizen.Multimedia.Vision.SurveillanceEngine"/> has already been disposed of.</exception>
            <since_tizen> 4 </since_tizen>
        </member>
        <member name="M:Tizen.Multimedia.Vision.SurveillanceEngine.RemoveSource(Tizen.Multimedia.Vision.SurveillanceSource)">
            <summary>
            Removes the source from <see cref="T:Tizen.Multimedia.Vision.SurveillanceEngine"/>.
            </summary>
            <exception cref="T:System.ArgumentNullException"><paramref name="source"/> is null.</exception>
            <exception cref="T:System.ObjectDisposedException">The <see cref="T:Tizen.Multimedia.Vision.SurveillanceEngine"/> has already been disposed of.</exception>
            <exception cref="T:System.ArgumentException"><paramref name="source"/> has not been added.</exception>
            <since_tizen> 4 </since_tizen>
        </member>
        <member name="M:Tizen.Multimedia.Vision.SurveillanceEngine.Dispose">
            <summary>
            Releases all the resources used by the <see cref="T:Tizen.Multimedia.Vision.SurveillanceEngine"/> object.
            </summary>
            <since_tizen> 4 </since_tizen>
        </member>
        <member name="M:Tizen.Multimedia.Vision.SurveillanceEngine.Dispose(System.Boolean)">
            <summary>
            Releases the resources used by the <see cref="T:Tizen.Multimedia.Vision.SurveillanceEngine"/> object.
            </summary>
            <param name="disposing">
            true to release both managed and unmanaged resources; otherwise false to release only unmanaged resources.
            </param>
            <since_tizen> 4 </since_tizen>
        </member>
        <member name="T:Tizen.Multimedia.Vision.SurveillanceSource">
            <summary>
            Provides the ability to push the source to surveillance engines.
            </summary>
            <seealso cref="T:Tizen.Multimedia.Vision.MovementDetector"/>
            <seealso cref="T:Tizen.Multimedia.Vision.PersonAppearanceDetector"/>
            <seealso cref="T:Tizen.Multimedia.Vision.PersonRecognizer"/>
            <since_tizen> 4 </since_tizen>
        </member>
        <member name="M:Tizen.Multimedia.Vision.SurveillanceSource.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Tizen.Multimedia.Vision.SurveillanceSource"/> class.
            </summary>
            <since_tizen> 4 </since_tizen>
        </member>
        <member name="M:Tizen.Multimedia.Vision.SurveillanceSource.Push(Tizen.Multimedia.Vision.MediaVisionSource)">
            <summary>
            Pushes the source to the surveillance system to detect events.
            </summary>
            <param name="source">The media source used for surveillance.</param>
            <exception cref="T:System.ArgumentNullException"><paramref name="source"/> is null.</exception>
            <exception cref="T:System.ObjectDisposedException"><paramref name="source"/> has already been disposed of.</exception>
            <exception cref="T:System.InvalidOperationException">This <see cref="T:Tizen.Multimedia.Vision.SurveillanceSource"/> has not been added yet.</exception>
            <seealso cref="M:Tizen.Multimedia.Vision.MovementDetector.AddSource(Tizen.Multimedia.Vision.SurveillanceSource)"/>
            <seealso cref="M:Tizen.Multimedia.Vision.MovementDetector.AddSource(Tizen.Multimedia.Vision.SurveillanceSource,Tizen.Multimedia.Vision.MovementDetectionConfiguration)"/>
            <seealso cref="M:Tizen.Multimedia.Vision.PersonAppearanceDetector.AddSource(Tizen.Multimedia.Vision.SurveillanceSource)"/>
            <seealso cref="M:Tizen.Multimedia.Vision.PersonAppearanceDetector.AddSource(Tizen.Multimedia.Vision.SurveillanceSource,Tizen.Multimedia.Vision.PersonAppearanceDetectionConfiguration)"/>
            <seealso cref="M:Tizen.Multimedia.Vision.PersonRecognizer.AddSource(Tizen.Multimedia.Vision.SurveillanceSource,Tizen.Multimedia.Vision.PersonRecognitionConfiguration)"/>
            <since_tizen> 4</since_tizen>
        </member>
        <member name="T:Tizen.Multimedia.Vision.VisionColorSpace">
            <summary>
            Specifies colorspaces for MediaVision.
            </summary>
        </member>
        <member name="F:Tizen.Multimedia.Vision.VisionColorSpace.Y800">
            <summary>
            The colorspace type is Y800.
            </summary>
        </member>
        <member name="F:Tizen.Multimedia.Vision.VisionColorSpace.I420">
            <summary>
            The colorspace type is I420.
            </summary>
        </member>
        <member name="F:Tizen.Multimedia.Vision.VisionColorSpace.NV12">
            <summary>
            The colorspace type is NV12.
            </summary>
        </member>
        <member name="F:Tizen.Multimedia.Vision.VisionColorSpace.YV12">
            <summary>
            The colorspace type is YV12.
            </summary>
        </member>
        <member name="F:Tizen.Multimedia.Vision.VisionColorSpace.NV21">
            <summary>
            The colorspace type is NV21.
            </summary>
        </member>
        <member name="F:Tizen.Multimedia.Vision.VisionColorSpace.Yuyv">
            <summary>
            The colorspace type is YUYV.
            </summary>
        </member>
        <member name="F:Tizen.Multimedia.Vision.VisionColorSpace.Uyvy">
            <summary>
            The colorspace type is UYVY.
            </summary>
        </member>
        <member name="F:Tizen.Multimedia.Vision.VisionColorSpace.Yuv422P">
            <summary>
            The colorspace type is 422P.
            </summary>
        </member>
        <member name="F:Tizen.Multimedia.Vision.VisionColorSpace.Rgb565">
            <summary>
            The colorspace type is RGB565.
            </summary>
        </member>
        <member name="F:Tizen.Multimedia.Vision.VisionColorSpace.Rgb888">
            <summary>
            The colorspace type is RGB888.
            </summary>
        </member>
        <member name="F:Tizen.Multimedia.Vision.VisionColorSpace.Rgba">
            <summary>
            The colorspace type is RGBA.
            </summary>
        </member>
    </members>
</doc>
