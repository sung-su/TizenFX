<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Tizen.Network.Bluetooth</name>
    </assembly>
    <members>
        <member name="T:Tizen.Network.Bluetooth.BluetoothAdapter">
            <summary>
            This class is used to control the Bluetooth adapter and get the list of bonded devices.<br/>
            The BluetoothAdapter class is used to discover neighbouring bluetooth devices.
            </summary>
            <privilege> http://tizen.org/privilege/bluetooth </privilege>
            <since_tizen> 3 </since_tizen>
        </member>
        <member name="P:Tizen.Network.Bluetooth.BluetoothAdapter.IsBluetoothEnabled">
            <summary>
            A property to check whether the Bluetooth is enabled.
            </summary>
            <exception cref="T:System.NotSupportedException">Thrown when the Bluetooth is not supported.</exception>
            <exception cref="T:System.InvalidOperationException">Thrown when the Bluetooth is not enabled.</exception>
            <since_tizen> 3 </since_tizen>
        </member>
        <member name="P:Tizen.Network.Bluetooth.BluetoothAdapter.Address">
            <summary>
            The local adapter address.
            </summary>
            <remarks>
            The Bluetooth must be enabled.
            </remarks>
            <exception cref="T:System.NotSupportedException">Thrown when the Bluetooth is not supported.</exception>
            <exception cref="T:System.InvalidOperationException">Thrown when the Bluetooth is not enabled.</exception>
            <since_tizen> 3 </since_tizen>
        </member>
        <member name="P:Tizen.Network.Bluetooth.BluetoothAdapter.Name">
            <summary>
            The name of the local adapter.
            </summary>
            <remarks>
            The Bluetooth must be enabled.
            </remarks>
            <exception cref="T:System.NotSupportedException">Thrown when the Bluetooth is not supported.</exception>
            <exception cref="T:System.InvalidOperationException">Thrown when the Bluetooth is not enabled.</exception>
            <since_tizen> 3 </since_tizen>
        </member>
        <member name="P:Tizen.Network.Bluetooth.BluetoothAdapter.Visibility">
            <summary>
            The visibility mode of the Bluetooth adapter.
            </summary>
            <remarks>
            The Bluetooth must be enabled.
            </remarks>
            <exception cref="T:System.NotSupportedException">Thrown when the Bluetooth is not supported.</exception>
            <exception cref="T:System.InvalidOperationException">Thrown when the Bluetooth is not enabled.</exception>
            <since_tizen> 3 </since_tizen>
        </member>
        <member name="P:Tizen.Network.Bluetooth.BluetoothAdapter.IsDiscoveryInProgress">
            <summary>
            A property to check whether the device discovery process is in progress.
            </summary>
            <remarks>
            The Bluetooth must be enabled.
            </remarks>
            <exception cref="T:System.NotSupportedException">Thrown when the Bluetooth is not supported.</exception>
            <exception cref="T:System.InvalidOperationException">Thrown when the Bluetooth is not enabled.</exception>
            <since_tizen> 3 </since_tizen>
        </member>
        <member name="P:Tizen.Network.Bluetooth.BluetoothAdapter.RemainingTimeAsVisible">
            <summary>
            The remaining time, in seconds, until the visibility mode is changed from TimeLimitedDiscoverable to NonDiscoverable.
            </summary>
            <remarks>
            The Bluetooth must be enabled.
            </remarks>
            <exception cref="T:System.NotSupportedException">Thrown when the Bluetooth is not supported.</exception>
            <exception cref="T:System.InvalidOperationException">Thrown when the Bluetooth is not enabled.</exception>
            <since_tizen> 3 </since_tizen>
        </member>
        <member name="E:Tizen.Network.Bluetooth.BluetoothAdapter.StateChanged">
            <summary>
            The StateChanged event is raised when the Bluetooth adapter state is changed.
            </summary>
            <exception cref="T:System.NotSupportedException">Thrown when the Bluetooth is not supported.</exception>
            <exception cref="T:System.InvalidOperationException">Thrown when the Bluetooth is not enabled.</exception>
            <since_tizen> 3 </since_tizen>
        </member>
        <member name="E:Tizen.Network.Bluetooth.BluetoothAdapter.NameChanged">
            <summary>
            The NameChanged event is raised when the Bluetooth adapter name is changed.
            </summary>
            <exception cref="T:System.NotSupportedException">Thrown when the Bluetooth is not supported.</exception>
            <exception cref="T:System.InvalidOperationException">Thrown when the Bluetooth is not enabled.</exception>
            <since_tizen> 3 </since_tizen>
        </member>
        <member name="E:Tizen.Network.Bluetooth.BluetoothAdapter.VisibilityModeChanged">
            <summary>
            The VisibilityModeChanged event is raised when the Bluetooth adapter visibility mode is changed.
            </summary>
            <exception cref="T:System.NotSupportedException">Thrown when the Bluetooth is not supported.</exception>
            <exception cref="T:System.InvalidOperationException">Thrown when the Bluetooth is not enabled.</exception>
            <since_tizen> 3 </since_tizen>
        </member>
        <member name="E:Tizen.Network.Bluetooth.BluetoothAdapter.VisibilityDurationChanged">
            <summary>
            The VisibilityDurationChanged event is raised very second until the visibility mode is changed to NonDiscoverable.
            </summary>
            <exception cref="T:System.NotSupportedException">Thrown when the Bluetooth is not supported.</exception>
            <exception cref="T:System.InvalidOperationException">Thrown when the Bluetooth is not enabled.</exception>
            <since_tizen> 3 </since_tizen>
        </member>
        <member name="E:Tizen.Network.Bluetooth.BluetoothAdapter.DiscoveryStateChanged">
            <summary>
            The DiscoveryStateChanged event is raised when the device discovery state is changed.
            </summary>
            <exception cref="T:System.NotSupportedException">Thrown when the Bluetooth is not supported.</exception>
            <exception cref="T:System.InvalidOperationException">Thrown when the Bluetooth is not enabled.</exception>
            <since_tizen> 3 </since_tizen>
        </member>
        <member name="E:Tizen.Network.Bluetooth.BluetoothAdapter.ScanResultChanged">
            <summary>
            This event is called when the LE scan result is obtained.
            </summary>
            <exception cref="T:System.NotSupportedException">Thrown when the Bluetooth is not supported.</exception>
            <exception cref="T:System.InvalidOperationException">Thrown when the Bluetooth is not enabled.</exception>
            <since_tizen> 3 </since_tizen>
        </member>
        <member name="M:Tizen.Network.Bluetooth.BluetoothAdapter.Enable">
            <summary>
            Enables the local Bluetooth adapter asynchronously.
            </summary>
            <since_tizen> 6 </since_tizen>
            <feature>http://tizen.org/feature/network.bluetooth</feature>
            <privilege>http://tizen.org/privilege/bluetooth.admin</privilege>
            <exception cref="T:System.NotSupportedException">Thrown when the Bluetooth is not supported.</exception>
            <exception cref="T:System.InvalidOperationException">Thrown when the method is failed with message.</exception>
        </member>
        <member name="M:Tizen.Network.Bluetooth.BluetoothAdapter.Disable">
            <summary>
            Disables the local Bluetooth adapter asynchronously.
            </summary>
            <since_tizen> 6 </since_tizen>
            <feature>http://tizen.org/feature/network.bluetooth</feature>
            <privilege>http://tizen.org/privilege/bluetooth.admin</privilege>
            <exception cref="T:System.NotSupportedException">Thrown when the Bluetooth is not supported.</exception>
            <exception cref="T:System.InvalidOperationException">Thrown when the method is failed with message.</exception>
        </member>
        <member name="M:Tizen.Network.Bluetooth.BluetoothAdapter.EnableDiscoverable">
            <summary>
            Enables the discoverable mode.
            </summary>
            <since_tizen> 6 </since_tizen>
            <feature>http://tizen.org/feature/network.bluetooth</feature>
            <privilege>http://tizen.org/privilege/bluetooth.admin</privilege>
            <exception cref="T:System.NotSupportedException">Thrown when the Bluetooth is not supported.</exception>
            <exception cref="T:System.InvalidOperationException">Thrown when the method is failed with message.</exception>
        </member>
        <member name="M:Tizen.Network.Bluetooth.BluetoothAdapter.EnableDiscoverable(System.Int32)">
            <summary>
            Enables the discoverable mode for the duration.
            </summary>
            <since_tizen> 6 </since_tizen>
            <param name="duration">The duration until the discoverable mode is to be disabled(in seconds).</param>
            <feature>http://tizen.org/feature/network.bluetooth</feature>
            <privilege>http://tizen.org/privilege/bluetooth.admin</privilege>
            <exception cref="T:System.NotSupportedException">Thrown when the Bluetooth is not supported.</exception>
            <exception cref="T:System.InvalidOperationException">Thrown when the method is failed with message.</exception>
        </member>
        <member name="M:Tizen.Network.Bluetooth.BluetoothAdapter.DisableDiscoverable">
            <summary>
            Disables the discoverable mode.
            </summary>
            <since_tizen> 6 </since_tizen>
            <feature>http://tizen.org/feature/network.bluetooth</feature>
            <privilege>http://tizen.org/privilege/bluetooth.admin</privilege>
            <exception cref="T:System.NotSupportedException">Thrown when the Bluetooth is not supported.</exception>
            <exception cref="T:System.InvalidOperationException">Thrown when the method is failed with message.</exception>
        </member>
        <member name="M:Tizen.Network.Bluetooth.BluetoothAdapter.StartDiscovery">
            <summary>
            Starts the device discovery process.
            </summary>
            <remarks>
            The Bluetooth must be enabled and the device discovery process can be stopped by StopDiscovery().
            If this succeeds, the DiscoveryStateChanged event will be invoked.
            </remarks>
            <exception cref="T:System.NotSupportedException">Thrown when the Bluetooth is not supported.</exception>
            <exception cref="T:System.InvalidOperationException">Thrown when the Bluetooth is not enabled
            or the start discovery fails.</exception>
            <since_tizen> 3 </since_tizen>
        </member>
        <member name="M:Tizen.Network.Bluetooth.BluetoothAdapter.StopDiscovery">
            <summary>
            Stops the device discovery process.
            </summary>
            <remarks>
            The device discovery process must be in progress with StartDiscovery().
            If this succeeds, the DiscoveryStateChanged event will be invoked.
            </remarks>
            <exception cref="T:System.NotSupportedException">Thrown when the Bluetooth is not supported.</exception>
            <exception cref="T:System.InvalidOperationException">Thrown when the Bluetooth is not enabled or
            the discovery process is not is progress. </exception>
            <since_tizen> 3 </since_tizen>
        </member>
        <member name="M:Tizen.Network.Bluetooth.BluetoothAdapter.GetBondedDevices">
            <summary>
            Retrieves the device information of all bonded devices.
            </summary>
            <remarks>
            The Bluetooth must be enabled.
            </remarks>
            <returns> The list of the bonded BluetoothDeviceInfo objects.</returns>
            <exception cref="T:System.NotSupportedException">Thrown when the Bluetooth is not supported.</exception>
            <exception cref="T:System.InvalidOperationException">Thrown when the Bluetooth is not enabled
            or reading the Bonded devices list is failed.</exception>
            <since_tizen> 3 </since_tizen>
        </member>
        <member name="M:Tizen.Network.Bluetooth.BluetoothAdapter.GetBondedDevice(System.String)">
            <summary>
            Gets the device information of a bonded device.
            </summary>
            <remarks>
            The Bluetooth must be enabled.
            </remarks>
            <returns> Information of the bonded BluetoothDeviceInfo object.</returns>
            <param name="address">The remote device address.</param>
            <exception cref="T:System.NotSupportedException">Thrown when the Bluetooth is not supported.</exception>
            <exception cref="T:System.InvalidOperationException">Thrown when the Bluetooth is not enabled
            or reading the bonded device information fails.</exception>
            <since_tizen> 3 </since_tizen>
        </member>
        <member name="M:Tizen.Network.Bluetooth.BluetoothAdapter.IsServiceUsed(System.String)">
            <summary>
            Checks whether the UUID of service is used or not.
            </summary>
            <returns><c>true</c> if the specified serviceUuid is used, otherwise <c>false</c>.</returns>
            <param name="serviceUuid">The UUID of Service.</param>
            <exception cref="T:System.NotSupportedException">Thrown when the Bluetooth is not supported.</exception>
            <exception cref="T:System.InvalidOperationException">Thrown when the Bluetooth is not enabled.</exception>
            <since_tizen> 3 </since_tizen>
        </member>
        <member name="M:Tizen.Network.Bluetooth.BluetoothAdapter.GetLocalOobData">
            <summary>
            Gets the hash and the randomizer value of the local OOB data object.
            </summary>
            <remarks>
            The Bluetooth must be enabled.
            </remarks>
            <returns>The BluetoothOobData object.</returns>
            <exception cref="T:System.NotSupportedException">Thrown when the Bluetooth is not supported.</exception>
            <exception cref="T:System.InvalidOperationException">Thrown when the Bluetooth is not enabled
            or the read OObData procedure is failed.</exception>
            <since_tizen> 3 </since_tizen>
        </member>
        <member name="M:Tizen.Network.Bluetooth.BluetoothAdapter.SetRemoteOobData(System.String,Tizen.Network.Bluetooth.BluetoothOobData)">
            <summary>
            Sets the hash and the randmoizer value of the OOB data into the remote device.
            </summary>
            <remarks>
            The Bluetooth must be enabled.
            </remarks>
            <param name="address">The remote device address.</param>
            <param name="oobData">The BluetoothOobData object.</param>
            <exception cref="T:System.NotSupportedException">Thrown when the Bluetooth is not supported.</exception>
            <exception cref="T:System.InvalidOperationException">Thrown when the Bluetooth is not enabled
            or the set OobData procedure is failed.</exception>
            <since_tizen> 3 </since_tizen>
        </member>
        <member name="M:Tizen.Network.Bluetooth.BluetoothAdapter.RemoveRemoteOobData(System.String)">
            <summary>
            Removes the hash and the randomizer value of the OOB data from the remote device.
            </summary>
            <remarks>
            The Bluetooth must be enabled.
            </remarks>
            <param name="address">The remote device address.</param>
            <exception cref="T:System.NotSupportedException">Thrown when the Bluetooth is not supported.</exception>
            <exception cref="T:System.InvalidOperationException">Thrown when the Bluetooth is not enabled.
            or if the Remove Oobdata procedure is failed.</exception>
            <since_tizen> 3 </since_tizen>
        </member>
        <member name="M:Tizen.Network.Bluetooth.BluetoothAdapter.StartLeScan">
            <summary>
            Starts the Bluetooth LE scan operation to discover BLE devices
            </summary>
            <remarks>
            The Bluetooth must be enabled.
            </remarks>The result of the operation StartLeScan.
            <exception cref="T:System.NotSupportedException">Thrown when the Bluetooth LE is not supported.</exception>
            <exception cref="T:System.InvalidOperationException">Thrown when the Bluetooth LE is not enabled
            or the Start LE scan is failed.</exception>
            <since_tizen> 3 </since_tizen>
        </member>
        <member name="M:Tizen.Network.Bluetooth.BluetoothAdapter.StartLeScan(Tizen.Network.Bluetooth.BluetoothLeScanMode)">
            <summary>
            Starts the Bluetooth LE scan operation with scan mode.
            </summary>
            <remarks>
            The Bluetooth must be enabled.
            </remarks>The result of the operation StartLeScan.
            <param name="mode">The LE scan mode.</param>
            <since_tizen> 7 </since_tizen>
            <feature>http://tizen.org/feature/network.bluetooth.le</feature>
            <exception cref="T:System.NotSupportedException">Thrown when the Bluetooth LE is not supported.</exception>
            <exception cref="T:System.InvalidOperationException">Thrown when the Bluetooth LE is not enabled
            or the Start LE scan is failed.</exception>
        </member>
        <member name="M:Tizen.Network.Bluetooth.BluetoothAdapter.StopLeScan">
            <summary>
            Stops the Bluetooth LE scan operation.
            </summary>
            <remarks>
            The Bluetooth must be enabled.
            </remarks>The result of the operation stopLescan.
            <exception cref="T:System.NotSupportedException">Thrown when the Bluetooth LE is not supported.</exception>
            <exception cref="T:System.InvalidOperationException">Thrown when the Bluetooth LE is not enabled
            or the Stop LE scan is failed.</exception>
            <since_tizen> 3 </since_tizen>
        </member>
        <member name="M:Tizen.Network.Bluetooth.BluetoothAdapter.GetBluetoothLeAdvertiser">
            <summary>
            Returns the BluetoothLeAdvertiser instance.
            </summary>
            <remarks>
            The Bluetooth must be enabled before calling this API.
            </remarks>
            <returns>The BluetoothLeAdvertiser instance.</returns>
            <since_tizen> 3 </since_tizen>
        </member>
        <member name="M:Tizen.Network.Bluetooth.BluetoothAdapter.CreateServerSocket(System.String)">
            <summary>
            Registers a rfcomm server socket with a specific UUID.
            </summary>
            <remarks>
            The Bluetooth must be enabled before calling this API.
            </remarks>
            <returns>The BluetoothServerSocket instance.</returns>
            <param name="serviceUuid">The UUID of service to provide.</param>
            <exception cref="T:System.NotSupportedException">Thrown when the Bluetooth is not supported.</exception>
            <exception cref="T:System.InvalidOperationException">Thrown when the Bluetooth is not enabled
            or the socket create error occurs.</exception>
            <since_tizen> 3 </since_tizen>
        </member>
        <member name="M:Tizen.Network.Bluetooth.BluetoothAdapter.DestroyServerSocket(Tizen.Network.Bluetooth.BluetoothServerSocket)">
            <summary>
            Removes the rfcomm server socket which was created using CreateServerSocket().
            </summary>
            <remarks>
            The socket must be created with CreateServerSocket(). The ConnectionStateChanged event is raised after this API is called.
            </remarks>
            <param name="socket">The server socket instance is created using CreateServerSocket().</param>
            <exception cref="T:System.NotSupportedException">Thrown when the Bluetooth is not supported.</exception>
            <exception cref="T:System.InvalidOperationException">Thrown when the Bluetooth is not enabled
            or the socket destroy error occurs.</exception>
            <since_tizen> 3 </since_tizen>
        </member>
        <member name="M:Tizen.Network.Bluetooth.BluetoothAdapter.SelectRole(Tizen.Network.Bluetooth.BluetoothAudioRole)">
            <summary>
            Select the A2DP source/sink role.
            </summary>
            <param name="role">The A2DP source/sink role.</param>
            <since_tizen> 9 </since_tizen>
            <feature>http://tizen.org/feature/network.bluetooth</feature>
            <feature>http://tizen.org/feature/network.bluetooth.audio.call</feature>
            <feature>http://tizen.org/feature/network.bluetooth.audio.media</feature>
            <privilege>http://tizen.org/privilege/bluetooth</privilege>
            <exception cref="T:System.NotSupportedException">Thrown when the Bluetooth is not supported.</exception>
            <exception cref="T:System.InvalidOperationException">Thrown when the method is failed with message.</exception>
        </member>
        <member name="M:Tizen.Network.Bluetooth.BluetoothAdapter.GetUuidSpecificationName(System.String)">
            <summary>
            Gets the name of the specification UUID.
            </summary>
            <param name="uuid">The UUID.</param>
            <since_tizen> 9 </since_tizen>
        </member>
        <member name="T:Tizen.Network.Bluetooth.BluetoothAudio">
            <summary>
            This class is used to handle the connection with other Bluetooth audio devices
            like headset, hands-free, and headphone.
            </summary>
            <privilege> http://tizen.org/privilege/bluetooth </privilege>
            <since_tizen> 3 </since_tizen>
        </member>
        <member name="E:Tizen.Network.Bluetooth.BluetoothAudio.AudioConnectionStateChanged">
            <summary>
            The AudioConnectionStateChanged event is called when the audio connection state is changed.
            </summary>
            <since_tizen> 3 </since_tizen>
        </member>
        <member name="E:Tizen.Network.Bluetooth.BluetoothAudio.AgScoStateChanged">
            <summary>
            This event is called when the AG(Audio Gateway) SCO(Synchronous Connection Oriented link) state is changed.
            </summary>
            <since_tizen> 6 </since_tizen>
            <feature>http://tizen.org/feature/network.bluetooth</feature>
            <feature>http://tizen.org/feature/network.bluetooth.audio.call</feature>
        </member>
        <member name="M:Tizen.Network.Bluetooth.BluetoothAudio.Connect(Tizen.Network.Bluetooth.BluetoothAudioProfileType)">
            <summary>
            Connects the remote device with the given audio profile.
            </summary>
            <remarks>
            The device must be bonded with the remote device by CreateBond(). If connection request succeeds, the AudioConnectionStateChanged event will be invoked.
            If audio profile type is All and this request succeeds, then the AudioConnectionStateChanged event will be called twice when HspHfp <br/>
            and AdvancedAudioDistribution is connected.
            </remarks>
            <param name="profileType">The type of the audio profile.</param>
            <exception cref="T:System.NotSupportedException">Thrown when the Bluetooth is not supported.</exception>
            <exception cref="T:System.InvalidOperationException">Thrown when the Bluetooth is not enabled
            or when the connection attempt fails.</exception>
            <since_tizen> 3 </since_tizen>
        </member>
        <member name="M:Tizen.Network.Bluetooth.BluetoothAudio.Disconnect(Tizen.Network.Bluetooth.BluetoothAudioProfileType)">
            <summary>
            Disconnects the remote device with the given audio profile.
            </summary>
            <remarks>
            The device must be connected by Connect(). If the disconnection request succeeds, the AudioConnectionStateChanged event will be invoked.
            If audio profile type is All and this request succeeds, then the AudioConnectionStateChanged event will be called twice when HspHfp <br/>
            and AdvancedAudioDistribution is disconnected.
            </remarks>
            <param name="type">The type of the audio profile.</param>
            <exception cref="T:System.NotSupportedException">Thrown when the Bluetooth is not supported.</exception>
            <exception cref="T:System.InvalidOperationException">Thrown when the Bluetooth is not enabled
            or when Disconnection attempt fails.</exception>
            <since_tizen> 3 </since_tizen>
        </member>
        <member name="M:Tizen.Network.Bluetooth.BluetoothAudio.OpenAgSco">
            <summary>
            Opens a AG(Audio Gateway) SCO(Synchronous Connection Oriented link) to the connected remote device asynchronously.
            </summary>
            <since_tizen> 6 </since_tizen>
            <feature>http://tizen.org/feature/network.bluetooth</feature>
            <feature>http://tizen.org/feature/network.bluetooth.audio.call</feature>
            <privilege>http://tizen.org/privilege/bluetooth.admin</privilege>
            <exception cref="T:System.NotSupportedException">Thrown when the Bluetooth is not supported.</exception>
            <exception cref="T:System.InvalidOperationException">Thrown when the method is failed with message.</exception>
        </member>
        <member name="M:Tizen.Network.Bluetooth.BluetoothAudio.CloseAgSco">
            <summary>
            Closes a AG(Audio Gateway) SCO(Synchronous Connection Oriented link) to the connected remote device asynchronously.
            </summary>
            <since_tizen> 6 </since_tizen>
            <feature>http://tizen.org/feature/network.bluetooth</feature>
            <feature>http://tizen.org/feature/network.bluetooth.audio.call</feature>
            <privilege>http://tizen.org/privilege/bluetooth.admin</privilege>
            <exception cref="T:System.NotSupportedException">Thrown when the Bluetooth is not supported.</exception>
            <exception cref="T:System.InvalidOperationException">Thrown when the method is failed with message.</exception>
        </member>
        <member name="P:Tizen.Network.Bluetooth.BluetoothAudio.IsAgScoOpened">
            <summary>
            A property to check whether an opened AG(Audio Gateway) SCO(Synchronous Connection Oriented link) exists or not.
            </summary>
            <since_tizen> 6 </since_tizen>
            <feature>http://tizen.org/feature/network.bluetooth</feature>
            <feature>http://tizen.org/feature/network.bluetooth.audio.call</feature>
        </member>
        <member name="M:Tizen.Network.Bluetooth.BluetoothAudio.NotifyAgVoiceRecognitionState(System.Boolean)">
            <summary>
            Notifies the state of AG(Audio Gateway) voice recognition to the connected remote device.
            </summary>
            <param name="enable">The state of voice recognition. It is true if voice recognition state is enabled.</param>
            <since_tizen> 6 </since_tizen>
            <feature>http://tizen.org/feature/network.bluetooth</feature>
            <feature>http://tizen.org/feature/network.bluetooth.audio.call</feature>
            <privilege>http://tizen.org/privilege/bluetooth.admin</privilege>
            <exception cref="T:System.NotSupportedException">Thrown when the Bluetooth is not supported.</exception>
            <exception cref="T:System.InvalidOperationException">Thrown when the method is failed with message.</exception>
        </member>
        <member name="T:Tizen.Network.Bluetooth.BluetoothAvrcp">
            <summary>
            This class is used to notify changes of the target device (For example, media player) to the control device (For example, headset).
            </summary>
            <privilege> http://tizen.org/privilege/bluetooth </privilege>
            <since_tizen> 3 </since_tizen>
        </member>
        <member name="E:Tizen.Network.Bluetooth.BluetoothAvrcp.TargetConnectionStateChanged">
            <summary>
            The TargetConnectionStateChanged event is invoked when the connection state is changed.
            </summary>
            <since_tizen> 3 </since_tizen>
        </member>
        <member name="E:Tizen.Network.Bluetooth.BluetoothAvrcp.EqualizerStateChanged">
            <summary>
            The EqualizerStateChanged event is invoked when the equalizer state is changed by the remote control device.
            </summary>
            <since_tizen> 3 </since_tizen>
        </member>
        <member name="E:Tizen.Network.Bluetooth.BluetoothAvrcp.RepeatModeChanged">
            <summary>
            The RepeatModeChanged event is invoked when the repeat mode is changed by the remote control device.
            </summary>
            <since_tizen> 3 </since_tizen>
        </member>
        <member name="E:Tizen.Network.Bluetooth.BluetoothAvrcp.ShuffleModeChanged">
            <summary>
            The ShuffleModeChanged event is invoked when the shuffle mode is changed by the remote control device.
            </summary>
            <since_tizen> 3 </since_tizen>
        </member>
        <member name="E:Tizen.Network.Bluetooth.BluetoothAvrcp.ScanModeChanged">
            <summary>
            The ScanModeChanged event is invoked when the scan mode is changed by the remote control device.
            </summary>
            <since_tizen> 3 </since_tizen>
        </member>
        <member name="M:Tizen.Network.Bluetooth.BluetoothAvrcp.NotifyEqualizerState(Tizen.Network.Bluetooth.EqualizerState)">
            <summary>
            Notifies the equalize state to the remote device.
            </summary>
            <remarks>
            The remote device must be connected.
            </remarks>
            <param name="state">The equalizer state.</param>
            <exception cref="T:System.NotSupportedException">Thrown when the Bluetooth is not supported.</exception>
            <exception cref="T:System.InvalidOperationException">Thrown when the Bluetooth is not enabled
            or when notifying the equalizer state to the remote device fails.</exception>
            <since_tizen> 3 </since_tizen>
        </member>
        <member name="M:Tizen.Network.Bluetooth.BluetoothAvrcp.NotifyRepeatMode(Tizen.Network.Bluetooth.RepeatMode)">
            <summary>
            Notifies the repeat mode to the remote device.
            </summary>
            <remarks>
            The remote device must be connected.
            </remarks>
            <param name="mode">The repeat mode.</param>
            <exception cref="T:System.NotSupportedException">Thrown when the Bluetooth is not supported.</exception>
            <exception cref="T:System.InvalidOperationException">Thrown when the Bluetooth is not enabled
            or when notifying the repeat mode state to the remote device fails.
            </exception>
            <since_tizen> 3 </since_tizen>
        </member>
        <member name="M:Tizen.Network.Bluetooth.BluetoothAvrcp.NotifyShuffleMode(Tizen.Network.Bluetooth.ShuffleMode)">
            <summary>
            Notifies the shuffle mode to the remote device.
            </summary>
            <remarks>
            The remote device must be connected.
            </remarks>
            <param name="mode">The shuffle mode.</param>
            <exception cref="T:System.NotSupportedException">Thrown when the Bluetooth is not supported.</exception>
            <exception cref="T:System.InvalidOperationException">Thrown when the Bluetooth is not enabled
            or when notifying the shuffle mode state to the remote device fails.</exception>
            <since_tizen> 3 </since_tizen>
        </member>
        <member name="M:Tizen.Network.Bluetooth.BluetoothAvrcp.NotifyScanMode(Tizen.Network.Bluetooth.ScanMode)">
            <summary>
            Notifies the scan mode to the remote device.
            </summary>
            <remarks>
            The remote device must be connected.
            </remarks>
            <param name="mode">The scan mode.</param>
            <exception cref="T:System.NotSupportedException">Thrown when the Bluetooth is not supported.</exception>
            <exception cref="T:System.InvalidOperationException">Thrown when the Bluetooth is not enabled
            or when notifying the scan mode state to the remote device fails.</exception>
            <since_tizen> 3 </since_tizen>
        </member>
        <member name="M:Tizen.Network.Bluetooth.BluetoothAvrcp.NotifyPlayerState(Tizen.Network.Bluetooth.PlayerState)">
            <summary>
            Notifies the player state to the remote device.
            </summary>
            <remarks>
            The remote device must be connected.
            </remarks>
            <param name="state">The player state.</param>
            <exception cref="T:System.NotSupportedException">Thrown when the Bluetooth is not supported.</exception>
            <exception cref="T:System.InvalidOperationException">Thrown when the Bluetooth is not enabled
            or when notifying the player state to the remote device fails.</exception>
            <since_tizen> 3 </since_tizen>
        </member>
        <member name="M:Tizen.Network.Bluetooth.BluetoothAvrcp.NotifyCurrentPosition(System.UInt32)">
            <summary>
            Notifies the current position of the song to the remote device.
            </summary>
            <remarks>
            The remote device must be connected.
            </remarks>
            <param name="position">The current position in milliseconds.</param>
            <exception cref="T:System.NotSupportedException">Thrown when the Bluetooth is not supported.</exception>
            <exception cref="T:System.InvalidOperationException">Thrown when the Bluetooth is not enabled
            or when notifying the current position state to the remote device fails.</exception>
            <since_tizen> 3 </since_tizen>
        </member>
        <member name="M:Tizen.Network.Bluetooth.BluetoothAvrcp.NotifyTrack(Tizen.Network.Bluetooth.Track)">
            <summary>
            Notifies the track to the remote device.
            </summary>
            <remarks>
            The remote device must be connected.
            </remarks>
            <param name="trackData">The data of the track.</param>
            <exception cref="T:System.NotSupportedException">Thrown when the Bluetooth is not supported.</exception>
            <exception cref="T:System.InvalidOperationException">Thrown when the Bluetooth is not enabled
            or when notifying the shuffle track state to the remote device fails.</exception>
            <since_tizen> 3 </since_tizen>
        </member>
        <member name="T:Tizen.Network.Bluetooth.BluetoothAvrcpControl">
            <summary>
            This class is used to send commands from the control device (For example, headset) to the target device (For example, media player).
            </summary>
            <since_tizen> 8 </since_tizen>
            <feature>http://tizen.org/feature/network.bluetooth.audio.controller</feature>
            <exception cref="T:System.NotSupportedException">The required feature is not supported.</exception>
            <remarks>
            This class can be obtained from BluetoothDevice.GetProfile method.
            </remarks>
        </member>
        <member name="E:Tizen.Network.Bluetooth.BluetoothAvrcpControl.ConnectionStateChanged">
            <summary>
            The AvrcpControlConnectionChangedEventArgs event is invoked when the connection status of device is changed.
            </summary>
            <since_tizen> 8 </since_tizen>
        </member>
        <member name="E:Tizen.Network.Bluetooth.BluetoothAvrcpControl.PositionChanged">
            <summary>
            The PositionChangedEventArgs event is invoked when the play position of a track is changed.
            </summary>
            <since_tizen> 8 </since_tizen>
        </member>
        <member name="E:Tizen.Network.Bluetooth.BluetoothAvrcpControl.PlayStateChanged">
            <summary>
            The PlayStateChangedEventArgs event is invoked when the play state of a track gets changed.
            </summary>
            <since_tizen> 8 </since_tizen>
        </member>
        <member name="E:Tizen.Network.Bluetooth.BluetoothAvrcpControl.TrackInfoChanged">
            <summary>
            The TrackInfoChangedEventArgs event is invoked when info of a track gets changed.
            </summary>
            <since_tizen> 8 </since_tizen>
        </member>
        <member name="M:Tizen.Network.Bluetooth.BluetoothAvrcpControl.ConnectAsync">
            <summary>
            Asynchronously connects the remote device
            </summary>
            <since_tizen> 8 </since_tizen>
            <privilege>http://tizen.org/privilege/bluetooth</privilege>
            <feature>http://tizen.org/feature/network.bluetooth.audio.controller</feature>
            <exception cref="T:System.NotSupportedException">The required feature is not supported.</exception>
            <exception cref="T:System.InvalidOperationException">Thrown when the method fails</exception>
        </member>
        <member name="M:Tizen.Network.Bluetooth.BluetoothAvrcpControl.DisconnectAsync">
            <summary>
            Asynchronously disconnects the remote device
            </summary>
            <since_tizen> 8 </since_tizen>
            <privilege>http://tizen.org/privilege/bluetooth</privilege>
            <feature>http://tizen.org/feature/network.bluetooth.audio.controller</feature>
            <exception cref="T:System.NotSupportedException">The required feature is not supported.</exception>
            <exception cref="T:System.InvalidOperationException">Thrown when the method fails</exception>
        </member>
        <member name="P:Tizen.Network.Bluetooth.BluetoothAvrcpControl.EqualizerState">
            <summary>
            A property for the equalizer mode of target device.
            </summary>
            <since_tizen> 8 </since_tizen>
            <privilege>http://tizen.org/privilege/bluetooth</privilege>
            <feature>http://tizen.org/feature/network.bluetooth.audio.controller</feature>
            <remarks>
            The remote device must be connected.
            </remarks>
            <exception cref="T:System.NotSupportedException">The required feature is not supported.</exception>
            <exception cref="T:System.InvalidOperationException">Thrown when the Bluetooth is not enabled
            or when notifying the equalizer state to the remote device fails.
            </exception>
        </member>
        <member name="P:Tizen.Network.Bluetooth.BluetoothAvrcpControl.RepeatMode">
            <summary>
            A property for the repeat mode of target device.
            </summary>
            <since_tizen> 8 </since_tizen>
            <privilege>http://tizen.org/privilege/bluetooth</privilege>
            <feature>http://tizen.org/feature/network.bluetooth.audio.controller</feature>
            <remarks>
            The remote device must be connected.
            </remarks>
            <exception cref="T:System.NotSupportedException">The required feature is not supported.</exception>
            <exception cref="T:System.InvalidOperationException">Thrown when the Bluetooth is not enabled
            or when notifying the repeat mode state to the remote device fails.
            </exception>
        </member>
        <member name="P:Tizen.Network.Bluetooth.BluetoothAvrcpControl.ShuffleMode">
            <summary>
            A property for the suffle mode of target device.
            </summary>
            <since_tizen> 8 </since_tizen>
            <privilege>http://tizen.org/privilege/bluetooth</privilege>
            <feature>http://tizen.org/feature/network.bluetooth.audio.controller</feature>
            <remarks>
            The remote device must be connected.
            </remarks>
            <exception cref="T:System.NotSupportedException">The required feature is not supported.</exception>
            <exception cref="T:System.InvalidOperationException">Thrown when the Bluetooth is not enabled
            or if retrieving shuffle mode of the remote device fails.
            </exception>
        </member>
        <member name="P:Tizen.Network.Bluetooth.BluetoothAvrcpControl.ScanMode">
            <summary>
            A property for the scan mode of target device.
            </summary>
            <since_tizen> 8 </since_tizen>
            <privilege>http://tizen.org/privilege/bluetooth</privilege>
            <feature>http://tizen.org/feature/network.bluetooth.audio.controller</feature>
            <remarks>
            The remote device must be connected.
            </remarks>
            <exception cref="T:System.NotSupportedException">The required feature is not supported.</exception>
            <exception cref="T:System.InvalidOperationException">Thrown when the Bluetooth is not enabled
            or if retrieving scan mode of the remote device fails.
            </exception>
        </member>
        <member name="M:Tizen.Network.Bluetooth.BluetoothAvrcpControl.GetPosition">
            <summary>
            Gets position of the track being played on the target device.
            </summary>
            <since_tizen> 8 </since_tizen>
            <privilege>http://tizen.org/privilege/bluetooth</privilege>
            <feature>http://tizen.org/feature/network.bluetooth.audio.controller</feature>
            <remarks>
            The remote device must be connected.
            </remarks>
            <returns> Play position of the track being played on the target device </returns>
            <exception cref="T:System.NotSupportedException">The required feature is not supported.</exception>
            <exception cref="T:System.InvalidOperationException">Thrown when the Bluetooth is not enabled
            or if there is an error retrieving the position of the track that is currently being played.
            </exception>
        </member>
        <member name="M:Tizen.Network.Bluetooth.BluetoothAvrcpControl.GetPlayStatus">
            <summary>
            Gets player state of the target device.
            </summary>
            <since_tizen> 8 </since_tizen>
            <privilege>http://tizen.org/privilege/bluetooth</privilege>
            <feature>http://tizen.org/feature/network.bluetooth.audio.controller</feature>
            <remarks>
            The remote device must be connected.
            </remarks>
            <returns> Play status of the target device </returns>
            <exception cref="T:System.NotSupportedException">The required feature is not supported.</exception>
            <exception cref="T:System.InvalidOperationException">Thrown when the Bluetooth is not enabled
            or if there happens to be an error while retrieving the player state of the target device.
            </exception>
        </member>
        <member name="M:Tizen.Network.Bluetooth.BluetoothAvrcpControl.GetTrackInfo">
            <summary>
            Gets info of the track being played on the target device.
            </summary>
            <since_tizen> 8 </since_tizen>
            <privilege>http://tizen.org/privilege/bluetooth</privilege>
            <feature>http://tizen.org/feature/network.bluetooth.audio.controller</feature>
            <remarks>
            The remote device must be connected.
            </remarks>
            <returns> Info of the track being played on the target device </returns>
            <exception cref="T:System.NotSupportedException">The required feature is not supported.</exception>
            <exception cref="T:System.InvalidOperationException">Thrown when the Bluetooth is not enabled
            or if there happens to be an error while retrieving info of the track being played on the target.
            </exception>
        </member>
        <member name="M:Tizen.Network.Bluetooth.BluetoothAvrcpControl.SendPlayerCommand(Tizen.Network.Bluetooth.PlayerCommand)">
            <summary>
            Sends a particular play command to the target device
            </summary>
            <since_tizen> 8 </since_tizen>
            <privilege>http://tizen.org/privilege/bluetooth</privilege>
            <feature>http://tizen.org/feature/network.bluetooth.audio.controller</feature>
            <remarks>
            The remote device must be connected.
            </remarks>
            <param name="command">Command to be sent</param>
            <exception cref="T:System.NotSupportedException">The required feature is not supported.</exception>
            <exception cref="T:System.InvalidOperationException">Thrown when the Bluetooth is not enabled
            or when sending command to the target device fails.
            </exception>
        </member>
        <member name="M:Tizen.Network.Bluetooth.BluetoothAvrcpControl.SendPlayerCommandTo(Tizen.Network.Bluetooth.PlayerCommand,System.String)">
            <summary>
            Sends a play command to a particular target device
            </summary>
            <since_tizen> 8 </since_tizen>
            <privilege>http://tizen.org/privilege/bluetooth.admin</privilege>
            <privlevel>platform</privlevel>
            <feature>http://tizen.org/feature/network.bluetooth.audio.controller</feature>
            <remarks>
            The remote device must be connected.
            </remarks>
            <param name="command">Command to be sent</param>
            <param name="remoteAddress">Address of the device to send command</param>
            <exception cref="T:System.NotSupportedException">The required feature is not supported.</exception>
            <exception cref="T:System.InvalidOperationException">Thrown when the Bluetooth is not enabled
            or when sending command to the target device fails.
            </exception>
        </member>
        <member name="M:Tizen.Network.Bluetooth.BluetoothAvrcpControl.SetAbsoluteVolume(System.UInt32)">
            <summary>
            Sets absolute volume of target device
            </summary>
            <since_tizen> 8 </since_tizen>
            <privilege>http://tizen.org/privilege/bluetooth.admin</privilege>
            <privlevel>platform</privlevel>
            <feature>http://tizen.org/feature/network.bluetooth.audio.controller</feature>
            <remarks>
            The remote device must be connected
            </remarks>
            <param name="volume">The volume level to be set</param>
            <exception cref="T:System.NotSupportedException">The required feature is not supported.</exception>
            <exception cref="T:System.InvalidOperationException">Thrown when the Bluetooth is not enabled
            or when setting absolute volume of the target device fails
            </exception>
        </member>
        <member name="M:Tizen.Network.Bluetooth.BluetoothAvrcpControl.IncreaseVolume">
            <summary>
            Increases volume of target device
            </summary>
            <since_tizen> 8 </since_tizen>
            <privilege>http://tizen.org/privilege/bluetooth.admin</privilege>
            <privlevel>platform</privlevel>
            <feature>http://tizen.org/feature/network.bluetooth.audio.controller</feature>
            <remarks>
            The remote device must be connected
            </remarks>
            <exception cref="T:System.NotSupportedException">The required feature is not supported.</exception>
            <exception cref="T:System.InvalidOperationException">Thrown when the Bluetooth is not enabled
            or when increasing volume of the target device fails
            </exception>
        </member>
        <member name="M:Tizen.Network.Bluetooth.BluetoothAvrcpControl.DecreaseVolume">
            <summary>
            Decreases volume of target device
            </summary>
            <since_tizen> 8 </since_tizen>
            <privilege>http://tizen.org/privilege/bluetooth.admin</privilege>
            <privlevel>platform</privlevel>
            <feature>http://tizen.org/feature/network.bluetooth.audio.controller</feature>
            <remarks>
            The remote device must be connected
            </remarks>
            <exception cref="T:System.NotSupportedException">The required feature is not supported.</exception>
            <exception cref="T:System.InvalidOperationException">Thrown when the Bluetooth is not enabled
            or when decreasing volume of the target device fails
            </exception>
        </member>
        <member name="M:Tizen.Network.Bluetooth.BluetoothAvrcpControl.SendDelayReport(System.UInt32)">
            <summary>
            Sends delay report to the target device
            </summary>
            <since_tizen> 8 </since_tizen>
            <privilege>http://tizen.org/privilege/bluetooth.admin</privilege>
            <privlevel>platform</privlevel>
            <feature>http://tizen.org/feature/network.bluetooth.audio.controller</feature>
            <remarks>
            The remote device must be connected
            </remarks>
            <param name="delay">Delay to be sent to target</param>
            <exception cref="T:System.NotSupportedException">The required feature is not supported.</exception>
            <exception cref="T:System.InvalidOperationException">Thrown when the Bluetooth is not enabled
            or when sending delay to the target device fails
            </exception>
        </member>
        <member name="M:Tizen.Network.Bluetooth.BluetoothAvrcpControl.Finalize">
            <summary>
            Finalizes an instance of the BluetoothAvrcpControl class.
            </summary>
        </member>
        <member name="M:Tizen.Network.Bluetooth.BluetoothAvrcpControl.Dispose">
            <inheritdoc/>
        </member>
        <member name="M:Tizen.Network.Bluetooth.BluetoothAvrcpControl.Dispose(System.Boolean)">
            <inheritdoc/>
        </member>
        <member name="T:Tizen.Network.Bluetooth.BluetoothClass">
            <summary>
            This class is used to handle the device class types and the service.
            </summary>
            <since_tizen> 3 </since_tizen>
        </member>
        <member name="P:Tizen.Network.Bluetooth.BluetoothClass.MajorDeviceClassType">
            <summary>
            The type of the major device class.
            </summary>
            <since_tizen> 3 </since_tizen>
        </member>
        <member name="P:Tizen.Network.Bluetooth.BluetoothClass.MinorDeviceClassType">
            <summary>
            The type of the minor device class.
            </summary>
            <since_tizen> 3 </since_tizen>
        </member>
        <member name="P:Tizen.Network.Bluetooth.BluetoothClass.MajorServiceClassMask">
            <summary>
            The major service class mask.
            </summary>
            <since_tizen> 3 </since_tizen>
        </member>
        <member name="T:Tizen.Network.Bluetooth.BluetoothOobData">
            <summary>
            This class contains the information of the Bluetooth OOB data.
            </summary>
            <since_tizen> 3 </since_tizen>
        </member>
        <member name="M:Tizen.Network.Bluetooth.BluetoothOobData.#ctor">
            <summary>
            The default constructor. Initializes an object of the BluetoothOobData.
            </summary>
            <since_tizen> 3 </since_tizen>
        </member>
        <member name="P:Tizen.Network.Bluetooth.BluetoothOobData.HashValue">
            <summary>
            The hash value.
            </summary>
            <since_tizen> 3 </since_tizen>
        </member>
        <member name="P:Tizen.Network.Bluetooth.BluetoothOobData.RandomizerValue">
            <summary>
            The randomizer value.
            </summary>
            <since_tizen> 3 </since_tizen>
        </member>
        <member name="T:Tizen.Network.Bluetooth.BluetoothDeviceSdpData">
            <summary>
            This class contains the information of the Bluetooth device SDP data.
            </summary>
            <since_tizen> 3 </since_tizen>
        </member>
        <member name="P:Tizen.Network.Bluetooth.BluetoothDeviceSdpData.DeviceAddress">
            <summary>
            The device address.
            </summary>
            <since_tizen> 3 </since_tizen>
        </member>
        <member name="P:Tizen.Network.Bluetooth.BluetoothDeviceSdpData.ServiceUuid">
            <summary>
            The service UUID.
            </summary>
            <since_tizen> 3 </since_tizen>
        </member>
        <member name="T:Tizen.Network.Bluetooth.BluetoothDeviceConnectionData">
            <summary>
            This class contains the information of the Bluetooth device connection data.
            </summary>
            <since_tizen> 3 </since_tizen>
        </member>
        <member name="P:Tizen.Network.Bluetooth.BluetoothDeviceConnectionData.Address">
            <summary>
            The device address.
            </summary>
            <since_tizen> 3 </since_tizen>
        </member>
        <member name="P:Tizen.Network.Bluetooth.BluetoothDeviceConnectionData.LinkType">
            <summary>
            The type of the connection link.
            </summary>
            <since_tizen> 3 </since_tizen>
        </member>
        <member name="P:Tizen.Network.Bluetooth.BluetoothDeviceConnectionData.DisconnectReason">
            <summary>
            The disconnect reason.
            </summary>
            <since_tizen> 3 </since_tizen>
        </member>
        <member name="T:Tizen.Network.Bluetooth.Track">
            <summary>
            This class contains the information of the track data.
            </summary>
            <since_tizen> 3 </since_tizen>
        </member>
        <member name="M:Tizen.Network.Bluetooth.Track.#ctor">
            <summary>
            The default constructor. Initializes an object of the track.
            </summary>
            <since_tizen> 3 </since_tizen>
        </member>
        <member name="P:Tizen.Network.Bluetooth.Track.Title">
            <summary>
            The title of the track.
            </summary>
            <since_tizen> 3 </since_tizen>
        </member>
        <member name="P:Tizen.Network.Bluetooth.Track.Artist">
            <summary>
            The artist of the track.
            </summary>
            <since_tizen> 3 </since_tizen>
        </member>
        <member name="P:Tizen.Network.Bluetooth.Track.Album">
            <summary>
            The album of the track.
            </summary>
            <since_tizen> 3 </since_tizen>
        </member>
        <member name="P:Tizen.Network.Bluetooth.Track.Genre">
            <summary>
            The genre of the track.
            </summary>
            <since_tizen> 3 </since_tizen>
        </member>
        <member name="P:Tizen.Network.Bluetooth.Track.TrackNum">
            <summary>
            The track number.
            </summary>
            <since_tizen> 3 </since_tizen>
        </member>
        <member name="P:Tizen.Network.Bluetooth.Track.TotalTracks">
            <summary>
            The number of all tracks.
            </summary>
            <since_tizen> 3 </since_tizen>
        </member>
        <member name="P:Tizen.Network.Bluetooth.Track.Duration">
            <summary>
            The duration of the track in milliseconds.
            </summary>
            <since_tizen> 3 </since_tizen>
        </member>
        <member name="T:Tizen.Network.Bluetooth.ManufacturerData">
            <summary>
            This class contains the information of the manufacturer data.
            </summary>
            <since_tizen> 3 </since_tizen>
        </member>
        <member name="M:Tizen.Network.Bluetooth.ManufacturerData.#ctor">
            <summary>
            The default Constructor. Initializes an object of the ManufacturerData.
            </summary>
            <since_tizen> 3 </since_tizen>
        </member>
        <member name="P:Tizen.Network.Bluetooth.ManufacturerData.Id">
            <summary>
            The manufacturer ID.
            </summary>
            <since_tizen> 3 </since_tizen>
        </member>
        <member name="P:Tizen.Network.Bluetooth.ManufacturerData.DataLength">
            <summary>
            The length of the manufacturer data.
            </summary>
            <since_tizen> 3 </since_tizen>
        </member>
        <member name="P:Tizen.Network.Bluetooth.ManufacturerData.Data">
            <summary>
            The manufacturer data.
            </summary>
            <since_tizen> 3 </since_tizen>
        </member>
        <member name="T:Tizen.Network.Bluetooth.BluetoothServiceData">
            <summary>
            This class contains the information of the Bluetooth service data.
            </summary>
            <since_tizen> 3 </since_tizen>
        </member>
        <member name="M:Tizen.Network.Bluetooth.BluetoothServiceData.#ctor">
            <summary>
            The default constructor. Initializes an object of the BluetoothServiceData.
            </summary>
            <since_tizen> 3 </since_tizen>
        </member>
        <member name="P:Tizen.Network.Bluetooth.BluetoothServiceData.Uuid">
            <summary>
            The UUID of the service.
            </summary>
            <since_tizen> 3 </since_tizen>
        </member>
        <member name="P:Tizen.Network.Bluetooth.BluetoothServiceData.DataLength">
            <summary>
            The data length of the service data.
            </summary>
            <since_tizen> 3 </since_tizen>
        </member>
        <member name="P:Tizen.Network.Bluetooth.BluetoothServiceData.Data">
            <summary>
            The service data.
            </summary>
            <since_tizen> 3 </since_tizen>
        </member>
        <member name="T:Tizen.Network.Bluetooth.BluetoothLeServiceData">
            <summary>
            This class contains the service data information.
            </summary>
            <since_tizen> 3 </since_tizen>
        </member>
        <member name="P:Tizen.Network.Bluetooth.BluetoothLeServiceData.ServiceUuid">
            <summary>
            The Bluetooth LE service UUID.
            </summary>
            <since_tizen> 3 </since_tizen>
        </member>
        <member name="P:Tizen.Network.Bluetooth.BluetoothLeServiceData.ServiceData">
            <summary>
            The Bluetooth LE service data.
            </summary>
            <since_tizen> 3 </since_tizen>
        </member>
        <member name="P:Tizen.Network.Bluetooth.BluetoothLeServiceData.ServiceDataLength">
            <summary>
            The length of the service data.
            </summary>
            <since_tizen> 3 </since_tizen>
        </member>
        <member name="T:Tizen.Network.Bluetooth.SocketData">
            <summary>
            This class contains the information of the socket data.
            </summary>
            <since_tizen> 3 </since_tizen>
        </member>
        <member name="P:Tizen.Network.Bluetooth.SocketData.SocketFd">
            <summary>
            The socket FD.
            </summary>
            <since_tizen> 3 </since_tizen>
        </member>
        <member name="P:Tizen.Network.Bluetooth.SocketData.DataSize">
            <summary>
            The length of the received data.
            </summary>
            <since_tizen> 3 </since_tizen>
        </member>
        <member name="P:Tizen.Network.Bluetooth.SocketData.Data">
            <summary>
            The received data.
            </summary>
            <since_tizen> 3 </since_tizen>
        </member>
        <member name="P:Tizen.Network.Bluetooth.SocketData.ByteData">
            <summary>
            The received data.
            </summary>
            <since_tizen> 7 </since_tizen>
        </member>
        <member name="T:Tizen.Network.Bluetooth.SocketConnection">
            <summary>
            This class contains the information of the socket connection.
            </summary>
            <since_tizen> 3 </since_tizen>
        </member>
        <member name="P:Tizen.Network.Bluetooth.SocketConnection.SocketFd">
            <summary>
            The connected socket FD.
            </summary>
            <since_tizen> 3 </since_tizen>
        </member>
        <member name="P:Tizen.Network.Bluetooth.SocketConnection.Address">
            <summary>
            The remote device address.
            </summary>
            <since_tizen> 3 </since_tizen>
        </member>
        <member name="P:Tizen.Network.Bluetooth.SocketConnection.ServiceUuid">
            <summary>
            The service UUID.
            </summary>
            <since_tizen> 3 </since_tizen>
        </member>
        <member name="P:Tizen.Network.Bluetooth.SocketConnection.Client">
            <summary>
            The client socket.
            </summary>
            <since_tizen> 6 </since_tizen>
        </member>
        <member name="T:Tizen.Network.Bluetooth.BluetoothHidMouseData">
            <summary>
            This class contains the HID mouse event information.
            </summary>
            <since_tizen> 6 </since_tizen>
        </member>
        <member name="P:Tizen.Network.Bluetooth.BluetoothHidMouseData.Buttons">
            <summary>
            The button values, we can combine key's values when we pressed multiple mouse buttons
            </summary>
            <since_tizen> 6 </since_tizen>
        </member>
        <member name="P:Tizen.Network.Bluetooth.BluetoothHidMouseData.AxisX">
            <summary>
            The location's x value, -128 ~127
            </summary>
            <since_tizen> 6 </since_tizen>
        </member>
        <member name="P:Tizen.Network.Bluetooth.BluetoothHidMouseData.AxisY">
            <summary>
            The location's y value, -128 ~127
            </summary>
            <since_tizen> 6 </since_tizen>
        </member>
        <member name="P:Tizen.Network.Bluetooth.BluetoothHidMouseData.Padding">
            <summary>
            The padding value, -128 ~127
            </summary>
            <since_tizen> 6 </since_tizen>
        </member>
        <member name="T:Tizen.Network.Bluetooth.BluetoothHidKeyData">
            <summary>
            This class contains the HID keyboard event information.
            </summary>
            <since_tizen> 6 </since_tizen>
        </member>
        <member name="P:Tizen.Network.Bluetooth.BluetoothHidKeyData.Modifier">
            <summary>
            The modifier keys : such as shift, alt
            </summary>
            <since_tizen> 6 </since_tizen>
        </member>
        <member name="P:Tizen.Network.Bluetooth.BluetoothHidKeyData.Key">
            <summary>
            The key value - currently pressed keys : Max 8 at once
            </summary>
            <since_tizen> 6 </since_tizen>
        </member>
        <member name="T:Tizen.Network.Bluetooth.BluetoothHidDeviceReceivedData">
            <summary>
            This class contains the data received from the HID Host.
            </summary>
            <since_tizen> 6 </since_tizen>
        </member>
        <member name="M:Tizen.Network.Bluetooth.BluetoothHidDeviceReceivedData.Create(Tizen.Network.Bluetooth.BluetoothHidDeviceReceivedDataStruct)">
            <summary>
            The default constructor. Initializes an object of the BluetoothHidReceivedData.
            </summary>
            <since_tizen> 6 </since_tizen>
        </member>
        <member name="P:Tizen.Network.Bluetooth.BluetoothHidDeviceReceivedData.Address">
            <summary>
            The remote device's address
            </summary>
            <since_tizen> 6 </since_tizen>
        </member>
        <member name="P:Tizen.Network.Bluetooth.BluetoothHidDeviceReceivedData.HeaderType">
            <summary>
            The header type
            </summary>
            <since_tizen> 6 </since_tizen>
        </member>
        <member name="P:Tizen.Network.Bluetooth.BluetoothHidDeviceReceivedData.ParamType">
            <summary>
            The parameter type
            </summary>
            <since_tizen> 6 </since_tizen>
        </member>
        <member name="P:Tizen.Network.Bluetooth.BluetoothHidDeviceReceivedData.Data">
            <summary>
            The received data
            </summary>
            <since_tizen> 6 </since_tizen>
        </member>
        <member name="T:Tizen.Network.Bluetooth.BluetoothDevice">
            <summary>
            This class is used to handle the connection with other devices and set authorization of other devices.<br/>
            The BluetoothDevice class is used to search for services available on remote devices.
            </summary>
            <privilege> http://tizen.org/privilege/bluetooth </privilege>
            <since_tizen> 3 </since_tizen>
        </member>
        <member name="M:Tizen.Network.Bluetooth.BluetoothDevice.#ctor(Tizen.Network.Bluetooth.BluetoothLeDevice)">
            <summary>
            The constructor
            </summary>
            <since_tizen> 9 </since_tizen>
        </member>
        <member name="P:Tizen.Network.Bluetooth.BluetoothDevice.Address">
            <summary>
            The address of the device.
            </summary>
            <since_tizen> 3 </since_tizen>
        </member>
        <member name="P:Tizen.Network.Bluetooth.BluetoothDevice.Name">
            <summary>
            The name of the device.
            </summary>
            <since_tizen> 3 </since_tizen>
        </member>
        <member name="P:Tizen.Network.Bluetooth.BluetoothDevice.Rssi">
            <summary>
            The strength indicator of received signal of the device.
            </summary>
            <since_tizen> 3 </since_tizen>
        </member>
        <member name="P:Tizen.Network.Bluetooth.BluetoothDevice.Class">
            <summary>
            The class of the device.
            </summary>
            <since_tizen> 3 </since_tizen>
        </member>
        <member name="P:Tizen.Network.Bluetooth.BluetoothDevice.ServiceUuidList">
            <summary>
            The service UUID list of the device.
            </summary>
            <since_tizen> 3 </since_tizen>
        </member>
        <member name="P:Tizen.Network.Bluetooth.BluetoothDevice.ServiceCount">
            <summary>
            The number of services.
            </summary>
            <since_tizen> 3 </since_tizen>
        </member>
        <member name="P:Tizen.Network.Bluetooth.BluetoothDevice.IsPaired">
            <summary>
            The paired state of the device.
            </summary>
            <since_tizen> 3 </since_tizen>
        </member>
        <member name="P:Tizen.Network.Bluetooth.BluetoothDevice.IsConnected">
            <summary>
            The connection state of the device.
            </summary>
            <since_tizen> 3 </since_tizen>
        </member>
        <member name="P:Tizen.Network.Bluetooth.BluetoothDevice.IsAuthorized">
            <summary>
            The authorization state of the device.
            </summary>
            <since_tizen> 3 </since_tizen>
        </member>
        <member name="P:Tizen.Network.Bluetooth.BluetoothDevice.AppearanceType">
            <summary>
            The Bluetooth appearance.
            </summary>
            <since_tizen> 3 </since_tizen>
        </member>
        <member name="P:Tizen.Network.Bluetooth.BluetoothDevice.ManufacturerDataLength">
            <summary>
            The length of the manufacturer data.
            </summary>
            <since_tizen> 3 </since_tizen>
        </member>
        <member name="P:Tizen.Network.Bluetooth.BluetoothDevice.ManufacturerData">
            <summary>
            The manufacturer data.
            </summary>
            <since_tizen> 3 </since_tizen>
        </member>
        <member name="E:Tizen.Network.Bluetooth.BluetoothDevice.BondCreated">
            <summary>
            The BondCreated event is raised when the process of creating the bond is finished.
            </summary>
            <since_tizen> 3 </since_tizen>
        </member>
        <member name="E:Tizen.Network.Bluetooth.BluetoothDevice.BondDestroyed">
            <summary>
            The BondDestroyed event is raised when the bond is destroyed.
            </summary>
            <since_tizen> 3 </since_tizen>
        </member>
        <member name="E:Tizen.Network.Bluetooth.BluetoothDevice.AuthorizationChanged">
            <summary>
            The AuthorizationChanged event is raised when the authorization of the device is changed.
            </summary>
            <since_tizen> 3 </since_tizen>
        </member>
        <member name="E:Tizen.Network.Bluetooth.BluetoothDevice.ServiceSearched">
            <summary>
            The ServiceSearched event is raised when the process of service searched is finished.
            </summary>
            <since_tizen> 3 </since_tizen>
        </member>
        <member name="E:Tizen.Network.Bluetooth.BluetoothDevice.ConnectionStateChanged">
            <summary>
            The ConnectionStateChanged event is raised when the connection state is changed.
            </summary>
            <since_tizen> 3 </since_tizen>
        </member>
        <member name="M:Tizen.Network.Bluetooth.BluetoothDevice.CreateBond">
            <summary>
            Creates a bond with the remote Bluetooth device.
            </summary>
            <remarks>
            The Bluetooth must be enabled and the remote device must be discoverable by StartDiscovery(). The bond can be destroyed by DestroyBond().
            The bonding request can be cancelled by CancelBonding(). If this succeeds, the BondCreated event will be invoked.
            </remarks>
            <exception cref="T:System.InvalidOperationException">Thrown when the BT/BTLE is not enabled
            or when the create bonding process to the remote device fails.</exception>
            <since_tizen> 3 </since_tizen>
        </member>
        <member name="M:Tizen.Network.Bluetooth.BluetoothDevice.CancelBonding">
            <summary>
            Cancels the bonding process.
            </summary>
            <remarks>
            Bonding must be in progress by CreateBond().
            </remarks>
            <exception cref="T:System.InvalidOperationException">Thrown when the BT/BTLE is not enabled
            or when the cancel bonding procedure to remote device fails.</exception>
            <since_tizen> 3 </since_tizen>
        </member>
        <member name="M:Tizen.Network.Bluetooth.BluetoothDevice.DestroyBond">
            <summary>
            Destroys the bond.
            </summary>
            <remarks>
            The Bluetooth must be enabled and the bond must be created by CreateBond().
            If this succeeds, the BondDestroyed event will be invoked.
            </remarks>
            <exception cref="T:System.InvalidOperationException">Thrown when the BT/BTLE is not enabled
            or when the destroy bonding procedure fails.</exception>
            <since_tizen> 3 </since_tizen>
        </member>
        <member name="M:Tizen.Network.Bluetooth.BluetoothDevice.SetAlias(System.String)">
            <summary>
            Sets an alias for the bonded device.
            </summary>
            <remarks>
            The Bluetooth must be enabled and the bond must be created by CreateBond().
            </remarks>
            <param name="aliasName">The alias name of the remote device.</param>
            <exception cref="T:System.InvalidOperationException">Thrown when the BT/BTLE is not enabled
            or when the set alias name to remote device fails.</exception>
            <since_tizen> 3 </since_tizen>
        </member>
        <member name="M:Tizen.Network.Bluetooth.BluetoothDevice.SetAuthorization(Tizen.Network.Bluetooth.BluetoothAuthorizationType)">
            <summary>
            Sets the authorization of a bonded device.
            </summary>
            <remarks>
            The Bluetooth must be enabled and the bond must be created by CreateBond().
            If this succeeds, the AuthorizationChanged event will be invoked.
            </remarks>
            <param name="authorizationState">The authorization state.</param>
            <exception cref="T:System.InvalidOperationException">Thrown when the BT/BTLE is not enabled
            or when the set authorization to remote device fails.</exception>
            <since_tizen> 3 </since_tizen>
        </member>
        <member name="M:Tizen.Network.Bluetooth.BluetoothDevice.GetMaskFromUuid(System.String[])">
            <summary>
            Gets the mask from the UUID.
            </summary>
            <returns>The service mask list converted from the given UUID list.</returns>
            <param name="uuids">The UUID list of the device.</param>
            <exception cref="T:System.InvalidOperationException">Thrown when the BT/BTLE is not enabled
            or when the get Mask from UUID fails.</exception>
            <since_tizen> 3 </since_tizen>
        </member>
        <member name="M:Tizen.Network.Bluetooth.BluetoothDevice.StartServiceSearch">
            <summary>
            Starts the search for services supported by the specified device.
            </summary>
            <remarks>
            The Bluetooth must be enabled and remote device must be discoverable by StartDiscovery(). The bond must be created by CreateBond().
            If this succeeds, the ServiceSearched event will be invoked.
            </remarks>
            <exception cref="T:System.InvalidOperationException">Thrown when the BT/BTLE is not enabled
            or when the remote device service search fails.</exception>
            <since_tizen> 3 </since_tizen>
        </member>
        <member name="M:Tizen.Network.Bluetooth.BluetoothDevice.GetConnectedProfiles">
            <summary>
            Gets the connected profiles.
            </summary>
            <remarks>
            The Bluetooth must be enabled.
            </remarks>
            <returns>The connected Bluetooth profiles.</returns>
            <exception cref="T:System.InvalidOperationException">Thrown when the BT/BTLE is not enabled
            or when there is no BT connection.</exception>
            <since_tizen> 3 </since_tizen>
        </member>
        <member name="M:Tizen.Network.Bluetooth.BluetoothDevice.IsProfileConnected(Tizen.Network.Bluetooth.BluetoothProfileType)">
            <summary>
            Determines if profile is connected to the specified remote device.
            </summary>
            <remarks>
            The Bluetooth must be enabled.
            </remarks>
            <returns><c>true</c> if profile is connected, otherwise <c>false</c>.</returns>
            <param name="profileType">The Bluetooth profile type.</param>
            <exception cref="T:System.InvalidOperationException">Thrown when the BT/BTLE is not enabled
            or when there is no BT connection.</exception>
            <since_tizen> 3 </since_tizen>
        </member>
        <member name="M:Tizen.Network.Bluetooth.BluetoothDevice.GetProfile``1">
            <summary>
            Returns the instance of the Bluetooth profile type.
            </summary>
            <remarks>
            The Bluetooth must be enabled.
            </remarks>
            <returns>The profile instance.</returns>
            <since_tizen> 3 </since_tizen>
        </member>
        <member name="M:Tizen.Network.Bluetooth.BluetoothDevice.CreateSocket(System.String)">
            <summary>
            Creates the client socket.
            </summary>
            <returns>The IBluetoothClientSocket instance.</returns>
            <param name="serviceUuid">The UUID of the service.</param>
            <since_tizen> 3 </since_tizen>
        </member>
        <member name="T:Tizen.Network.Bluetooth.BluetoothState">
            <summary>
            Enumeration for the Bluetooth states.
            </summary>
            <since_tizen> 3 </since_tizen>
        </member>
        <member name="F:Tizen.Network.Bluetooth.BluetoothState.Disabled">
            <summary>
            The disabled state.
            </summary>
        </member>
        <member name="F:Tizen.Network.Bluetooth.BluetoothState.Enabled">
            <summary>
            The enabled state.
            </summary>
        </member>
        <member name="T:Tizen.Network.Bluetooth.BluetoothError">
            <summary>
            Enumeration for the Bluetooth errors.
            </summary>
            <since_tizen> 3 </since_tizen>
        </member>
        <member name="F:Tizen.Network.Bluetooth.BluetoothError.None">
            <summary>
            Successful.
            </summary>
        </member>
        <member name="F:Tizen.Network.Bluetooth.BluetoothError.Cancelled">
            <summary>
            Operation canceled.
            </summary>
        </member>
        <member name="F:Tizen.Network.Bluetooth.BluetoothError.InvalidParameter">
            <summary>
            Invalid parameter.
            </summary>
        </member>
        <member name="F:Tizen.Network.Bluetooth.BluetoothError.OutOfMemory">
            <summary>
            Out of memory.
            </summary>
        </member>
        <member name="F:Tizen.Network.Bluetooth.BluetoothError.ResourceBusy">
            <summary>
            Device or resource busy.
            </summary>
        </member>
        <member name="F:Tizen.Network.Bluetooth.BluetoothError.TimedOut">
            <summary>
            Timeout error.
            </summary>
        </member>
        <member name="F:Tizen.Network.Bluetooth.BluetoothError.NowInProgress">
            <summary>
            Operation now in progress.
            </summary>
        </member>
        <member name="F:Tizen.Network.Bluetooth.BluetoothError.NotSupported">
            <summary>
            Bluetooth is not supported.
            </summary>
        </member>
        <member name="F:Tizen.Network.Bluetooth.BluetoothError.PermissionDenied">
            <summary>
            Permission denied.
            </summary>
        </member>
        <member name="F:Tizen.Network.Bluetooth.BluetoothError.QuotaExceeded">
            <summary>
            Quota exceeded.
            </summary>
        </member>
        <member name="F:Tizen.Network.Bluetooth.BluetoothError.NoData">
            <summary>
            No data available.
            </summary>
        </member>
        <member name="F:Tizen.Network.Bluetooth.BluetoothError.NotInitialized">
            <summary>
            Local adapter not initialized.
            </summary>
        </member>
        <member name="F:Tizen.Network.Bluetooth.BluetoothError.NotEnabled">
            <summary>
            Local adapter not enabled.
            </summary>
        </member>
        <member name="F:Tizen.Network.Bluetooth.BluetoothError.AlreadyDone">
            <summary>
            Operation already done.
            </summary>
        </member>
        <member name="F:Tizen.Network.Bluetooth.BluetoothError.OperationFailed">
            <summary>
            Operation failed.
            </summary>
        </member>
        <member name="F:Tizen.Network.Bluetooth.BluetoothError.NotInProgress">
            <summary>
            Operation not in progress.
            </summary>
        </member>
        <member name="F:Tizen.Network.Bluetooth.BluetoothError.RemoteDeviceNotBonded">
            <summary>
            Remote device not bonded.
            </summary>
        </member>
        <member name="F:Tizen.Network.Bluetooth.BluetoothError.AuthRejected">
            <summary>
            Authentication rejected.
            </summary>
        </member>
        <member name="F:Tizen.Network.Bluetooth.BluetoothError.AuthFailed">
            <summary>
            Authentication failed.
            </summary>
        </member>
        <member name="F:Tizen.Network.Bluetooth.BluetoothError.RemoteDeviceNotFound">
            <summary>
            Remote device not found.
            </summary>
        </member>
        <member name="F:Tizen.Network.Bluetooth.BluetoothError.ServiceSearchFailed">
            <summary>
            Service search failed.
            </summary>
        </member>
        <member name="F:Tizen.Network.Bluetooth.BluetoothError.RemoteDeviceNotConnected">
            <summary>
            Remote device is not connected.
            </summary>
        </member>
        <member name="F:Tizen.Network.Bluetooth.BluetoothError.ResourceUnavailable">
            <summary>
            Resource temporarily unavailable.
            </summary>
        </member>
        <member name="F:Tizen.Network.Bluetooth.BluetoothError.ServiceNotFound">
            <summary>
            Service Not Found.
            </summary>
        </member>
        <member name="T:Tizen.Network.Bluetooth.VisibilityMode">
            <summary>
            Enumeration for the Bluetooth visibility modes.
            </summary>
            <since_tizen> 3 </since_tizen>
        </member>
        <member name="F:Tizen.Network.Bluetooth.VisibilityMode.NonDiscoverable">
            <summary>
            The non-discoverable mode.
            </summary>
        </member>
        <member name="F:Tizen.Network.Bluetooth.VisibilityMode.Discoverable">
            <summary>
            The discoverable mode.
            </summary>
        </member>
        <member name="F:Tizen.Network.Bluetooth.VisibilityMode.TimeLimitedDiscoverable">
            <summary>
            The discoverable mode with limited time.
            </summary>
        </member>
        <member name="T:Tizen.Network.Bluetooth.BluetoothMajorDeviceClassType">
            <summary>
            Enumeration for the Bluetooth major device class types.
            </summary>
            <since_tizen> 3 </since_tizen>
        </member>
        <member name="F:Tizen.Network.Bluetooth.BluetoothMajorDeviceClassType.Misc">
            <summary>
            The miscellaneous major class type.
            </summary>
        </member>
        <member name="F:Tizen.Network.Bluetooth.BluetoothMajorDeviceClassType.Computer">
            <summary>
            The computer major class type.
            </summary>
        </member>
        <member name="F:Tizen.Network.Bluetooth.BluetoothMajorDeviceClassType.Phone">
            <summary>
            The phone major class type.
            </summary>
        </member>
        <member name="F:Tizen.Network.Bluetooth.BluetoothMajorDeviceClassType.LanNetworkAccessPoint">
            <summary>
            The LAN/Network access point major class type.
            </summary>
        </member>
        <member name="F:Tizen.Network.Bluetooth.BluetoothMajorDeviceClassType.AudioVideo">
            <summary>
            The audio/video major class type.
            </summary>
        </member>
        <member name="F:Tizen.Network.Bluetooth.BluetoothMajorDeviceClassType.Peripheral">
            <summary>
            The peripheral major class type.
            </summary>
        </member>
        <member name="F:Tizen.Network.Bluetooth.BluetoothMajorDeviceClassType.Imaging">
            <summary>
            The imaging major class type.
            </summary>
        </member>
        <member name="F:Tizen.Network.Bluetooth.BluetoothMajorDeviceClassType.Wearable">
            <summary>
            The wearable major class type.
            </summary>
        </member>
        <member name="F:Tizen.Network.Bluetooth.BluetoothMajorDeviceClassType.Toy">
            <summary>
            The toy major class type.
            </summary>
        </member>
        <member name="F:Tizen.Network.Bluetooth.BluetoothMajorDeviceClassType.Health">
            <summary>
            The health major class type.
            </summary>
        </member>
        <member name="F:Tizen.Network.Bluetooth.BluetoothMajorDeviceClassType.Uncategorized">
            <summary>
            The uncategorized major class type.
            </summary>
        </member>
        <member name="T:Tizen.Network.Bluetooth.BluetoothMinorDeviceClassType">
            <summary>
            Enumeration for the Bluetooth minor device class types.
            </summary>
            <since_tizen> 3 </since_tizen>
        </member>
        <member name="F:Tizen.Network.Bluetooth.BluetoothMinorDeviceClassType.ComputerUncategorized">
            <summary>
            The uncategorized computer minor class type.
            </summary>
        </member>
        <member name="F:Tizen.Network.Bluetooth.BluetoothMinorDeviceClassType.ComputerDesktopWorkstation">
            <summary>
            The desktop workstation computer minor class type.
            </summary>
        </member>
        <member name="F:Tizen.Network.Bluetooth.BluetoothMinorDeviceClassType.ComputerServer">
            <summary>
            The server computer minor class type.
            </summary>
        </member>
        <member name="F:Tizen.Network.Bluetooth.BluetoothMinorDeviceClassType.ComputerLaptop">
            <summary>
            The laptop computer minor class type.
            </summary>
        </member>
        <member name="F:Tizen.Network.Bluetooth.BluetoothMinorDeviceClassType.ComputerHandheldPcOrPda">
            <summary>
            The handheld PC/PDA computer minor class type.
            </summary>
        </member>
        <member name="F:Tizen.Network.Bluetooth.BluetoothMinorDeviceClassType.ComputerPalmSizedPcOrPda">
            <summary>
            The palm sized PC/PDA computer minor class type.
            </summary>
        </member>
        <member name="F:Tizen.Network.Bluetooth.BluetoothMinorDeviceClassType.ComputerWearableComputer">
            <summary>
            The wearable computer minor class type.
            </summary>
        </member>
        <member name="F:Tizen.Network.Bluetooth.BluetoothMinorDeviceClassType.PhoneUncategorized">
            <summary>
            The unclassified phone minor class type.
            </summary>
        </member>
        <member name="F:Tizen.Network.Bluetooth.BluetoothMinorDeviceClassType.PhoneCellular">
            <summary>
            The cellular phone minor class type.
            </summary>
        </member>
        <member name="F:Tizen.Network.Bluetooth.BluetoothMinorDeviceClassType.PhoneCordless">
            <summary>
            The cordless phone minor class type.
            </summary>
        </member>
        <member name="F:Tizen.Network.Bluetooth.BluetoothMinorDeviceClassType.PhoneSmartPhone">
            <summary>
            The smartphone phone minor class type.
            </summary>
        </member>
        <member name="F:Tizen.Network.Bluetooth.BluetoothMinorDeviceClassType.PhoneWiredModemOrVoiceGateway">
            <summary>
            The wired modem or voice gateway phone minor class type.
            </summary>
        </member>
        <member name="F:Tizen.Network.Bluetooth.BluetoothMinorDeviceClassType.PhoneCommonIsdnAccess">
            <summary>
            The ISDN phone minor class type.
            </summary>
        </member>
        <member name="F:Tizen.Network.Bluetooth.BluetoothMinorDeviceClassType.LanNetworkAccessPointFullyAvailable">
            <summary>
            Fully available LAN/Network access point minor class type.
            </summary>
        </member>
        <member name="F:Tizen.Network.Bluetooth.BluetoothMinorDeviceClassType.LanNetworkAccessPoint1To17PercentUtilized">
            <summary>
            1-17% utilized LAN/Network access point minor class type.
            </summary>
        </member>
        <member name="F:Tizen.Network.Bluetooth.BluetoothMinorDeviceClassType.LanNetworkAccessPoint17To33PercentUtilized">
            <summary>
            17-33% utilized LAN/Network access point minor class type.
            </summary>
        </member>
        <member name="F:Tizen.Network.Bluetooth.BluetoothMinorDeviceClassType.LanNetworkAccessPoint33To50PercentUtilized">
            <summary>
            33-50% utilized LAN/Network access point minor class type.
            </summary>
        </member>
        <member name="F:Tizen.Network.Bluetooth.BluetoothMinorDeviceClassType.LanNetworkAccessPoint50To67PercentUtilized">
            <summary>
            50-67% utilized LAN/Network access point minor class type.
            </summary>
        </member>
        <member name="F:Tizen.Network.Bluetooth.BluetoothMinorDeviceClassType.LanNetworkAccessPoint67To83PercentUtilized">
            <summary>
            67-83% utilized LAN/Network access point minor class type.
            </summary>
        </member>
        <member name="F:Tizen.Network.Bluetooth.BluetoothMinorDeviceClassType.LanNetworkAccessPoint83To99PercentUtilized">
            <summary>
            83-99% utilized LAN/Network access point minor class type.
            </summary>
        </member>
        <member name="F:Tizen.Network.Bluetooth.BluetoothMinorDeviceClassType.LanNetworkAccessPointNoServiceAvailable">
            <summary>
            No service available LAN/Network access point minor class type.
            </summary>
        </member>
        <member name="F:Tizen.Network.Bluetooth.BluetoothMinorDeviceClassType.AudioVideoUncategorized">
            <summary>
            The uncategorized audio/video minor class type.
            </summary>
        </member>
        <member name="F:Tizen.Network.Bluetooth.BluetoothMinorDeviceClassType.AudioVideoWearableHeadset">
            <summary>
            The wearable headset audio/video minor class type.
            </summary>
        </member>
        <member name="F:Tizen.Network.Bluetooth.BluetoothMinorDeviceClassType.AudioVideoHandsFree">
            <summary>
            The hands free audio/video minor class type.
            </summary>
        </member>
        <member name="F:Tizen.Network.Bluetooth.BluetoothMinorDeviceClassType.AudioVideoMicrophone">
            <summary>
            The microphone audio/video minor class type.
            </summary>
        </member>
        <member name="F:Tizen.Network.Bluetooth.BluetoothMinorDeviceClassType.AudioVideoLoudspeaker">
            <summary>
            The loudspeaker audio/video minor class type.
            </summary>
        </member>
        <member name="F:Tizen.Network.Bluetooth.BluetoothMinorDeviceClassType.AudioVideoHeadphones">
            <summary>
            The headphones audio/video minor class type.
            </summary>
        </member>
        <member name="F:Tizen.Network.Bluetooth.BluetoothMinorDeviceClassType.AudioVideoPortableAudio">
            <summary>
            The portable audio audio/video minor class type.
            </summary>
        </member>
        <member name="F:Tizen.Network.Bluetooth.BluetoothMinorDeviceClassType.AudioVideoCarAudio">
            <summary>
            The car audio audio/video minor class type.
            </summary>
        </member>
        <member name="F:Tizen.Network.Bluetooth.BluetoothMinorDeviceClassType.AudioVideoSetTopBox">
            <summary>
            The SetTopbox audio/video minor class type.
            </summary>
        </member>
        <member name="F:Tizen.Network.Bluetooth.BluetoothMinorDeviceClassType.AudioVideoHifiAudioDevice">
            <summary>
            The Hi-Fi audio/video minor class type.
            </summary>
        </member>
        <member name="F:Tizen.Network.Bluetooth.BluetoothMinorDeviceClassType.AudioVideoVcr">
            <summary>
            The VCR audio/video minor class type.
            </summary>
        </member>
        <member name="F:Tizen.Network.Bluetooth.BluetoothMinorDeviceClassType.AudioVideoVideoCamera">
            <summary>
            The video camera audio/video minor class type.
            </summary>
        </member>
        <member name="F:Tizen.Network.Bluetooth.BluetoothMinorDeviceClassType.AudioVideoCamcorder">
            <summary>
            Camcorder audio/video minor class type.
            </summary>
        </member>
        <member name="F:Tizen.Network.Bluetooth.BluetoothMinorDeviceClassType.AudioVideoVideoMonitor">
            <summary>
            The video monitor audio/video minor class type.
            </summary>
        </member>
        <member name="F:Tizen.Network.Bluetooth.BluetoothMinorDeviceClassType.AudioVideoVideoDisplayLoudspeaker">
            <summary>
            The video display and loudspeaker audio/video minor class type.
            </summary>
        </member>
        <member name="F:Tizen.Network.Bluetooth.BluetoothMinorDeviceClassType.AudioVideoVideoConferencing">
            <summary>
            The video conferencing audio/video minor class type.
            </summary>
        </member>
        <member name="F:Tizen.Network.Bluetooth.BluetoothMinorDeviceClassType.AudioVideoGamingToy">
            <summary>
            The gaming/toy audio/video minor class type.
            </summary>
        </member>
        <member name="F:Tizen.Network.Bluetooth.BluetoothMinorDeviceClassType.PeripheralUncategorized">
            <summary>
            The uncategorized peripheral minor class type.
            </summary>
        </member>
        <member name="F:Tizen.Network.Bluetooth.BluetoothMinorDeviceClassType.PeripheralKeyBoard">
            <summary>
            The keyboard peripheral minor class type.
            </summary>
        </member>
        <member name="F:Tizen.Network.Bluetooth.BluetoothMinorDeviceClassType.PeripheralPointingDevice">
            <summary>
            The pointing device peripheral minor class type.
            </summary>
        </member>
        <member name="F:Tizen.Network.Bluetooth.BluetoothMinorDeviceClassType.PeripheralComboKeyboardPointingDevice">
            <summary>
            The combo keyboard peripheral minor class type.
            </summary>
        </member>
        <member name="F:Tizen.Network.Bluetooth.BluetoothMinorDeviceClassType.PeripheralJoystick">
            <summary>
            The joystick peripheral minor class type.
            </summary>
        </member>
        <member name="F:Tizen.Network.Bluetooth.BluetoothMinorDeviceClassType.PeripheralGamePad">
            <summary>
            The game pad peripheral minor class type.
            </summary>
        </member>
        <member name="F:Tizen.Network.Bluetooth.BluetoothMinorDeviceClassType.PeripheralRemoteControl">
            <summary>
            The remote control peripheral minor class type.
            </summary>
        </member>
        <member name="F:Tizen.Network.Bluetooth.BluetoothMinorDeviceClassType.PeripheralSensingDevice">
            <summary>
            The sensing device peripheral minor class type.
            </summary>
        </member>
        <member name="F:Tizen.Network.Bluetooth.BluetoothMinorDeviceClassType.PeripheralDigitizerTablet">
            <summary>
            The digitizer peripheral minor class type.
            </summary>
        </member>
        <member name="F:Tizen.Network.Bluetooth.BluetoothMinorDeviceClassType.PeripheralCardReader">
            <summary>
            The card reader peripheral minor class type.
            </summary>
        </member>
        <member name="F:Tizen.Network.Bluetooth.BluetoothMinorDeviceClassType.PeripheralDigitalPen">
            <summary>
            The digital pen peripheral minor class type.
            </summary>
        </member>
        <member name="F:Tizen.Network.Bluetooth.BluetoothMinorDeviceClassType.PeripheralHandheldScanner">
            <summary>
            The handheld scanner peripheral minor class type.
            </summary>
        </member>
        <member name="F:Tizen.Network.Bluetooth.BluetoothMinorDeviceClassType.PeripheralHandheldGesturalInputDevice">
            <summary>
            The handheld gestural input computer minor class type.
            </summary>
        </member>
        <member name="F:Tizen.Network.Bluetooth.BluetoothMinorDeviceClassType.ImagingDisplay">
            <summary>
            The display imaging minor class type.
            </summary>
        </member>
        <member name="F:Tizen.Network.Bluetooth.BluetoothMinorDeviceClassType.ImagingCamera">
            <summary>
            The camera imaging minor class type.
            </summary>
        </member>
        <member name="F:Tizen.Network.Bluetooth.BluetoothMinorDeviceClassType.ImagingScanner">
            <summary>
            The scanner imaging minor class type.
            </summary>
        </member>
        <member name="F:Tizen.Network.Bluetooth.BluetoothMinorDeviceClassType.ImagingPrinter">
            <summary>
            The printer imaging minor class type.
            </summary>
        </member>
        <member name="F:Tizen.Network.Bluetooth.BluetoothMinorDeviceClassType.WearableWristWatch">
            <summary>
            The wrist watch wearable minor class type.
            </summary>
        </member>
        <member name="F:Tizen.Network.Bluetooth.BluetoothMinorDeviceClassType.WearablePager">
            <summary>
            The pager wearable minor class type.
            </summary>
        </member>
        <member name="F:Tizen.Network.Bluetooth.BluetoothMinorDeviceClassType.WearableJacket">
            <summary>
            The jacket wearable minor class type.
            </summary>
        </member>
        <member name="F:Tizen.Network.Bluetooth.BluetoothMinorDeviceClassType.WearableHelmet">
            <summary>
            The helmet wearable minor class type.
            </summary>
        </member>
        <member name="F:Tizen.Network.Bluetooth.BluetoothMinorDeviceClassType.WearableGlasses">
            <summary>
            The glasses wearable minor class type.
            </summary>
        </member>
        <member name="F:Tizen.Network.Bluetooth.BluetoothMinorDeviceClassType.ToyRobot">
            <summary>
            The robot toy minor class type.
            </summary>
        </member>
        <member name="F:Tizen.Network.Bluetooth.BluetoothMinorDeviceClassType.ToyVehicle">
            <summary>
            The vehicle toy minor class type.
            </summary>
        </member>
        <member name="F:Tizen.Network.Bluetooth.BluetoothMinorDeviceClassType.ToyDollAction">
            <summary>
            The doll toy minor class type.
            </summary>
        </member>
        <member name="F:Tizen.Network.Bluetooth.BluetoothMinorDeviceClassType.ToyController">
            <summary>
            The controller toy minor class type.
            </summary>
        </member>
        <member name="F:Tizen.Network.Bluetooth.BluetoothMinorDeviceClassType.ToyGame">
            <summary>
            The game toy minor class type.
            </summary>
        </member>
        <member name="F:Tizen.Network.Bluetooth.BluetoothMinorDeviceClassType.HealthUncategorized">
            <summary>
            The uncategorized health minor class type.
            </summary>
        </member>
        <member name="F:Tizen.Network.Bluetooth.BluetoothMinorDeviceClassType.HealthBloodPressureMonitor">
            <summary>
            The BP monitor health minor class type.
            </summary>
        </member>
        <member name="F:Tizen.Network.Bluetooth.BluetoothMinorDeviceClassType.HealthThermometer">
            <summary>
            The thermometer health minor class type.
            </summary>
        </member>
        <member name="F:Tizen.Network.Bluetooth.BluetoothMinorDeviceClassType.HealthWeighingScale">
            <summary>
            The scale health minor class type.
            </summary>
        </member>
        <member name="F:Tizen.Network.Bluetooth.BluetoothMinorDeviceClassType.HealthGlucoseMeter">
            <summary>
            The glucose meter health minor class type.
            </summary>
        </member>
        <member name="F:Tizen.Network.Bluetooth.BluetoothMinorDeviceClassType.HealthPulseOximeter">
            <summary>
            The pulse oximeter health minor class type.
            </summary>
        </member>
        <member name="F:Tizen.Network.Bluetooth.BluetoothMinorDeviceClassType.HealthHeartPulseRateMonitor">
            <summary>
            The heart/pulse rate monitor health minor class type.
            </summary>
        </member>
        <member name="F:Tizen.Network.Bluetooth.BluetoothMinorDeviceClassType.HealthDataDisplay">
            <summary>
            The display health minor class type.
            </summary>
        </member>
        <member name="F:Tizen.Network.Bluetooth.BluetoothMinorDeviceClassType.HealthStepCounter">
            <summary>
            The step counter health minor class type.
            </summary>
        </member>
        <member name="F:Tizen.Network.Bluetooth.BluetoothMinorDeviceClassType.HealthBodyCompositionAnalyzer">
            <summary>
            The body composition analyzer health minor class type.
            </summary>
        </member>
        <member name="F:Tizen.Network.Bluetooth.BluetoothMinorDeviceClassType.HealthPeakFlowMonitor">
            <summary>
            The peak flow monitor health minor class type.
            </summary>
        </member>
        <member name="F:Tizen.Network.Bluetooth.BluetoothMinorDeviceClassType.HealthMedicationMonitor">
            <summary>
            The medication monitor health minor class type.
            </summary>
        </member>
        <member name="F:Tizen.Network.Bluetooth.BluetoothMinorDeviceClassType.HealthKneeProsthesis">
            <summary>
            The knee prosthesis health minor class type.
            </summary>
        </member>
        <member name="F:Tizen.Network.Bluetooth.BluetoothMinorDeviceClassType.HealthAnkleProsthesis">
            <summary>
            The ankle prosthesis health minor class type.
            </summary>
        </member>
        <member name="T:Tizen.Network.Bluetooth.BluetoothDeviceDiscoveryState">
            <summary>
            Enumeration for the Bluetooth device discovery states.
            </summary>
            <since_tizen> 3 </since_tizen>
        </member>
        <member name="F:Tizen.Network.Bluetooth.BluetoothDeviceDiscoveryState.Started">
            <summary>
            The device discovery is started.
            </summary>
        </member>
        <member name="F:Tizen.Network.Bluetooth.BluetoothDeviceDiscoveryState.Finished">
            <summary>
            The device discovery is finished.
            </summary>
        </member>
        <member name="F:Tizen.Network.Bluetooth.BluetoothDeviceDiscoveryState.Found">
            <summary>
            The remote device is found.
            </summary>
        </member>
        <member name="T:Tizen.Network.Bluetooth.BluetoothAppearanceType">
            <summary>
            Enumeration for the Bluetooth appearance types.
            </summary>
            <since_tizen> 3 </since_tizen>
        </member>
        <member name="F:Tizen.Network.Bluetooth.BluetoothAppearanceType.Unknown">
            <summary>
            Unknown.
            </summary>
        </member>
        <member name="F:Tizen.Network.Bluetooth.BluetoothAppearanceType.GenericPhone">
            <summary>
            Generic phone.
            </summary>
        </member>
        <member name="F:Tizen.Network.Bluetooth.BluetoothAppearanceType.GenericComputer">
            <summary>
            Generic computer.
            </summary>
        </member>
        <member name="F:Tizen.Network.Bluetooth.BluetoothAppearanceType.GenericWatch">
            <summary>
            Generic watch.
            </summary>
        </member>
        <member name="T:Tizen.Network.Bluetooth.BluetoothAudioProfileType">
            <summary>
            Enumeration for the Bluetooth audio profile types.
            </summary>
            <since_tizen> 3 </since_tizen>
        </member>
        <member name="F:Tizen.Network.Bluetooth.BluetoothAudioProfileType.All">
            <summary>
            All supported profiles of audio.
            </summary>
        </member>
        <member name="F:Tizen.Network.Bluetooth.BluetoothAudioProfileType.HspHfp">
            <summary>
            The Headset and Hands-Free profile.
            </summary>
        </member>
        <member name="F:Tizen.Network.Bluetooth.BluetoothAudioProfileType.AdvancedAudioDistribution">
            <summary>
            The Advanced Audio Distribution profile.
            </summary>
        </member>
        <member name="F:Tizen.Network.Bluetooth.BluetoothAudioProfileType.AudioGateway">
            <summary>
            The Audio Gateway profile.
            </summary>
        </member>
        <member name="F:Tizen.Network.Bluetooth.BluetoothAudioProfileType.AdvancedAudioDistributionSink">
            <summary>
            The Advanced Audio Distribution profile sink role.
            </summary>
        </member>
        <member name="T:Tizen.Network.Bluetooth.BluetoothAudioRole">
            <summary>
            Enumeration for the Bluetooth audio role.
            </summary>
            <since_tizen> 9 </since_tizen>
        </member>
        <member name="F:Tizen.Network.Bluetooth.BluetoothAudioRole.Source">
            <summary>
            The source role.
            </summary>
        </member>
        <member name="F:Tizen.Network.Bluetooth.BluetoothAudioRole.Sink">
            <summary>
            The sink role.
            </summary>
        </member>
        <member name="T:Tizen.Network.Bluetooth.BluetoothServiceClassType">
            <summary>
            Enumeration for the Bluetooth service class types.
            </summary>
            <since_tizen> 3 </since_tizen>
        </member>
        <member name="F:Tizen.Network.Bluetooth.BluetoothServiceClassType.None">
            <summary>
            No service class.
            </summary>
        </member>
        <member name="F:Tizen.Network.Bluetooth.BluetoothServiceClassType.Res">
            <summary>
            The RES service class.
            </summary>
        </member>
        <member name="F:Tizen.Network.Bluetooth.BluetoothServiceClassType.Spp">
            <summary>
            The SPP service class.
            </summary>
        </member>
        <member name="F:Tizen.Network.Bluetooth.BluetoothServiceClassType.Dun">
            <summary>
            The DUN service class.
            </summary>
        </member>
        <member name="F:Tizen.Network.Bluetooth.BluetoothServiceClassType.Fax">
            <summary>
            The FAX service class.
            </summary>
        </member>
        <member name="F:Tizen.Network.Bluetooth.BluetoothServiceClassType.Lap">
            <summary>
            The LAP service class.
            </summary>
        </member>
        <member name="F:Tizen.Network.Bluetooth.BluetoothServiceClassType.Hsp">
            <summary>
            The HSP service class.
            </summary>
        </member>
        <member name="F:Tizen.Network.Bluetooth.BluetoothServiceClassType.Hfp">
            <summary>
            The HFPservice class.
            </summary>
        </member>
        <member name="F:Tizen.Network.Bluetooth.BluetoothServiceClassType.Opp">
            <summary>
            The OPP service class.
            </summary>
        </member>
        <member name="F:Tizen.Network.Bluetooth.BluetoothServiceClassType.Ftp">
            <summary>
            The FTP service class.
            </summary>
        </member>
        <member name="F:Tizen.Network.Bluetooth.BluetoothServiceClassType.Ctp">
            <summary>
            The CTP service class.
            </summary>
        </member>
        <member name="F:Tizen.Network.Bluetooth.BluetoothServiceClassType.Icp">
            <summary>
            The ICP service class.
            </summary>
        </member>
        <member name="F:Tizen.Network.Bluetooth.BluetoothServiceClassType.Sync">
            <summary>
            The Sync service class.
            </summary>
        </member>
        <member name="F:Tizen.Network.Bluetooth.BluetoothServiceClassType.Bpp">
            <summary>
            The BPP service class.
            </summary>
        </member>
        <member name="F:Tizen.Network.Bluetooth.BluetoothServiceClassType.Bip">
            <summary>
            The BIP service class.
            </summary>
        </member>
        <member name="F:Tizen.Network.Bluetooth.BluetoothServiceClassType.Panu">
            <summary>
            The PANU service class.
            </summary>
        </member>
        <member name="F:Tizen.Network.Bluetooth.BluetoothServiceClassType.Nap">
            <summary>
            The NAP service class.
            </summary>
        </member>
        <member name="F:Tizen.Network.Bluetooth.BluetoothServiceClassType.Gn">
            <summary>
            The GN service class.
            </summary>
        </member>
        <member name="F:Tizen.Network.Bluetooth.BluetoothServiceClassType.Sap">
            <summary>
            The SAP service class.
            </summary>
        </member>
        <member name="F:Tizen.Network.Bluetooth.BluetoothServiceClassType.A2dp">
            <summary>
            The A2DP service class.
            </summary>
        </member>
        <member name="F:Tizen.Network.Bluetooth.BluetoothServiceClassType.Avrcp">
            <summary>
            The AVRCP service class.
            </summary>
        </member>
        <member name="F:Tizen.Network.Bluetooth.BluetoothServiceClassType.Pbap">
            <summary>
            The PBAP service class.
            </summary>
        </member>
        <member name="F:Tizen.Network.Bluetooth.BluetoothServiceClassType.Hid">
            <summary>
            The HID service class.
            </summary>
        </member>
        <member name="F:Tizen.Network.Bluetooth.BluetoothServiceClassType.A2dpSource">
            <summary>
            The A2DP Source service class.
            </summary>
        </member>
        <member name="F:Tizen.Network.Bluetooth.BluetoothServiceClassType.All">
            <summary>
            All service class.
            </summary>
        </member>
        <member name="F:Tizen.Network.Bluetooth.BluetoothServiceClassType.Max">
            <summary>
            The Max service class.
            </summary>
        </member>
        <member name="T:Tizen.Network.Bluetooth.BluetoothProfileType">
            <summary>
            Enumeration for the Bluetooth profile types.
            </summary>
            <since_tizen> 3 </since_tizen>
        </member>
        <member name="F:Tizen.Network.Bluetooth.BluetoothProfileType.Rfcomm">
            <summary>
            The RFCOMM profile.
            </summary>
        </member>
        <member name="F:Tizen.Network.Bluetooth.BluetoothProfileType.AdvancedAudioDistribution">
            <summary>
            The Advanced Audio Distribution Profile Source role.
            </summary>
        </member>
        <member name="F:Tizen.Network.Bluetooth.BluetoothProfileType.Headset">
            <summary>
            The Headset profile.
            </summary>
        </member>
        <member name="F:Tizen.Network.Bluetooth.BluetoothProfileType.HumanInterfaceDevice">
            <summary>
            The Human Interface Device profile.
            </summary>
        </member>
        <member name="F:Tizen.Network.Bluetooth.BluetoothProfileType.NetworkAccessPoint">
            <summary>
            The Network Access Point profile.
            </summary>
        </member>
        <member name="F:Tizen.Network.Bluetooth.BluetoothProfileType.AudioGateway">
            <summary>
            The Audio Gateway profile.
            </summary>
        </member>
        <member name="F:Tizen.Network.Bluetooth.BluetoothProfileType.GenericAttribute">
            <summary>
            The Generic Attribute profile.
            </summary>
        </member>
        <member name="F:Tizen.Network.Bluetooth.BluetoothProfileType.NapServer">
            <summary>
            The NAP Server profile.
            </summary>
        </member>
        <member name="F:Tizen.Network.Bluetooth.BluetoothProfileType.AdvancedAudioDistributionSink">
            <summary>
            The advanced Audio Distribution profile sink role.
            </summary>
        </member>
        <member name="T:Tizen.Network.Bluetooth.BluetoothAuthorizationType">
            <summary>
            Enumeration for the Bluetooth authorization types.
            </summary>
            <since_tizen> 3 </since_tizen>
        </member>
        <member name="F:Tizen.Network.Bluetooth.BluetoothAuthorizationType.Authorized">
            <summary>
            The authorized type.
            </summary>
        </member>
        <member name="F:Tizen.Network.Bluetooth.BluetoothAuthorizationType.Unauthorized">
            <summary>
            The unauthorized type.
            </summary>
        </member>
        <member name="T:Tizen.Network.Bluetooth.BluetoothConnectionLinkType">
            <summary>
            Enumeration for the Bluetooth connection link types.
            </summary>
            <since_tizen> 3 </since_tizen>
        </member>
        <member name="F:Tizen.Network.Bluetooth.BluetoothConnectionLinkType.BrEdr">
            <summary>
            The BR/EDR link.
            </summary>
        </member>
        <member name="F:Tizen.Network.Bluetooth.BluetoothConnectionLinkType.Le">
            <summary>
            The LE link.
            </summary>
        </member>
        <member name="F:Tizen.Network.Bluetooth.BluetoothConnectionLinkType.Default">
            <summary>
            The default connection type.
            </summary>
        </member>
        <member name="T:Tizen.Network.Bluetooth.BluetoothDisconnectReason">
            <summary>
            Enumeration for the Bluetooth disconnect reason.
            </summary>
            <since_tizen> 3 </since_tizen>
        </member>
        <member name="F:Tizen.Network.Bluetooth.BluetoothDisconnectReason.Unknown">
            <summary>
            The disconnected by unknown reason.
            </summary>
        </member>
        <member name="F:Tizen.Network.Bluetooth.BluetoothDisconnectReason.Timeout">
            <summary>
            The disconnected by timeout.
            </summary>
        </member>
        <member name="F:Tizen.Network.Bluetooth.BluetoothDisconnectReason.LocalHost">
            <summary>
            The disconnected by local host.
            </summary>
        </member>
        <member name="F:Tizen.Network.Bluetooth.BluetoothDisconnectReason.Remote">
            <summary>
            The disconnected by remote.
            </summary>
        </member>
        <member name="T:Tizen.Network.Bluetooth.BluetoothSocketRole">
            <summary>
            Enumeration for the connected Bluetooth device event roles.
            </summary>
            <since_tizen> 3 </since_tizen>
        </member>
        <member name="F:Tizen.Network.Bluetooth.BluetoothSocketRole.Unknown">
            <summary>
            Unknown role.
            </summary>
        </member>
        <member name="F:Tizen.Network.Bluetooth.BluetoothSocketRole.Server">
            <summary>
            The server role.
            </summary>
        </member>
        <member name="F:Tizen.Network.Bluetooth.BluetoothSocketRole.Client">
            <summary>
            The client role.
            </summary>
        </member>
        <member name="T:Tizen.Network.Bluetooth.BluetoothSocketState">
            <summary>
            Enumeration for the Bluetooth socket connection states.
            </summary>
            <since_tizen> 3 </since_tizen>
        </member>
        <member name="F:Tizen.Network.Bluetooth.BluetoothSocketState.Connected">
            <summary>
            The RFCOMM is connected.
            </summary>
        </member>
        <member name="F:Tizen.Network.Bluetooth.BluetoothSocketState.Disconnected">
            <summary>
            The RFCOMM is disconnected.
            </summary>
        </member>
        <member name="T:Tizen.Network.Bluetooth.EqualizerState">
            <summary>
            Enumeration for the equalizer states.
            </summary>
            <since_tizen> 3 </since_tizen>
        </member>
        <member name="F:Tizen.Network.Bluetooth.EqualizerState.Off">
            <summary>
            Equalizer Off.
            </summary>
        </member>
        <member name="F:Tizen.Network.Bluetooth.EqualizerState.On">
            <summary>
            Equalizer On.
            </summary>
        </member>
        <member name="T:Tizen.Network.Bluetooth.RepeatMode">
            <summary>
            Enumeration for the repeat modes.
            </summary>
            <since_tizen> 3 </since_tizen>
        </member>
        <member name="F:Tizen.Network.Bluetooth.RepeatMode.Off">
            <summary>
            Repeat off.
            </summary>
        </member>
        <member name="F:Tizen.Network.Bluetooth.RepeatMode.SingleTrack">
            <summary>
            Single track repeat.
            </summary>
        </member>
        <member name="F:Tizen.Network.Bluetooth.RepeatMode.AllTrack">
            <summary>
            All track repeat.
            </summary>
        </member>
        <member name="F:Tizen.Network.Bluetooth.RepeatMode.Group">
            <summary>
            Group repeat.
            </summary>
        </member>
        <member name="T:Tizen.Network.Bluetooth.ShuffleMode">
            <summary>
            Enumeration for the shuffle modes.
            </summary>
            <since_tizen> 3 </since_tizen>
        </member>
        <member name="F:Tizen.Network.Bluetooth.ShuffleMode.Off">
            <summary>
            Shuffle off.
            </summary>
        </member>
        <member name="F:Tizen.Network.Bluetooth.ShuffleMode.AllTrack">
            <summary>
            All tracks shuffle.
            </summary>
        </member>
        <member name="F:Tizen.Network.Bluetooth.ShuffleMode.Group">
            <summary>
            Group shuffle.
            </summary>
        </member>
        <member name="T:Tizen.Network.Bluetooth.ScanMode">
            <summary>
            Enumeration for the scan modes.
            </summary>
            <since_tizen> 3 </since_tizen>
        </member>
        <member name="F:Tizen.Network.Bluetooth.ScanMode.Off">
            <summary>
            Scan off.
            </summary>
        </member>
        <member name="F:Tizen.Network.Bluetooth.ScanMode.AllTrack">
            <summary>
            All tracks scan.
            </summary>
        </member>
        <member name="F:Tizen.Network.Bluetooth.ScanMode.Group">
            <summary>
            Group scan.
            </summary>
        </member>
        <member name="T:Tizen.Network.Bluetooth.PlayerState">
            <summary>
            Enumeration for the player states.
            </summary>
            <since_tizen> 3 </since_tizen>
        </member>
        <member name="F:Tizen.Network.Bluetooth.PlayerState.Stopped">
            <summary>
            The stopped state.
            </summary>
        </member>
        <member name="F:Tizen.Network.Bluetooth.PlayerState.Playing">
            <summary>
            The playing state.
            </summary>
        </member>
        <member name="F:Tizen.Network.Bluetooth.PlayerState.Paused">
            <summary>
            The paused state.
            </summary>
        </member>
        <member name="F:Tizen.Network.Bluetooth.PlayerState.SeekForward">
            <summary>
            The seek forward state.
            </summary>
        </member>
        <member name="F:Tizen.Network.Bluetooth.PlayerState.SeekRewind">
            <summary>
            The seek rewind state.
            </summary>
        </member>
        <member name="T:Tizen.Network.Bluetooth.PlayerCommand">
            <summary>
            Enumeration for the player command.
            </summary>
            <since_tizen> 8 </since_tizen>
        </member>
        <member name="F:Tizen.Network.Bluetooth.PlayerCommand.Play">
            <summary>
            Play current track
            </summary>
        </member>
        <member name="F:Tizen.Network.Bluetooth.PlayerCommand.Pause">
            <summary>
            Pause current track
            </summary>
        </member>
        <member name="F:Tizen.Network.Bluetooth.PlayerCommand.Stop">
            <summary>
            Stop playing track
            </summary>
        </member>
        <member name="F:Tizen.Network.Bluetooth.PlayerCommand.Next">
            <summary>
            Go to the next track
            </summary>
        </member>
        <member name="F:Tizen.Network.Bluetooth.PlayerCommand.Previous">
            <summary>
            Go to the previous track
            </summary>
        </member>
        <member name="F:Tizen.Network.Bluetooth.PlayerCommand.FastForward">
            <summary>
            Fast-forward current track
            </summary>
        </member>
        <member name="F:Tizen.Network.Bluetooth.PlayerCommand.Rewind">
            <summary>
            Rewind current track
            </summary>
        </member>
        <member name="T:Tizen.Network.Bluetooth.BluetoothLeDeviceAddressType">
            <summary>
            Enumeration for the Bluetooth LE device address types.
            </summary>
            <since_tizen> 3 </since_tizen>
        </member>
        <member name="F:Tizen.Network.Bluetooth.BluetoothLeDeviceAddressType.BluetoothLePublicAddress">
            <summary>
            The Buetooth LE public address.
            </summary>
        </member>
        <member name="F:Tizen.Network.Bluetooth.BluetoothLeDeviceAddressType.BluetoothLePrivateAddress">
            <summary>
            The Bluetooth LE private address.
            </summary>
        </member>
        <member name="T:Tizen.Network.Bluetooth.BluetoothLePacketType">
            <summary>
            Enumeration for the Bluetooth LePacket types.
            </summary>
            <since_tizen> 3 </since_tizen>
        </member>
        <member name="F:Tizen.Network.Bluetooth.BluetoothLePacketType.BluetoothLeAdvertisingPacket">
            <summary>
            The Bluetooth LE advertising packet.
            </summary>
        </member>
        <member name="F:Tizen.Network.Bluetooth.BluetoothLePacketType.BluetoothLeScanResponsePacket">
            <summary>
            The Bluetooth LE scan response packet.
            </summary>
        </member>
        <member name="T:Tizen.Network.Bluetooth.BluetoothLeDataType">
            <summary>
            Enumeration for the Bluetooth LE data types.
            </summary>
            <since_tizen> 3 </since_tizen>
        </member>
        <member name="F:Tizen.Network.Bluetooth.BluetoothLeDataType.BluetoothLePacketDataList16BitServiceUuid">
            <summary>
            The Bluetooth LE packet data list 16 bit service uuid.
            </summary>
        </member>
        <member name="F:Tizen.Network.Bluetooth.BluetoothLeDataType.BluetoothLePacketManufacturerData">
            <summary>
            The Bluetooth LE packet manufacturer data.
            </summary>
        </member>
        <member name="T:Tizen.Network.Bluetooth.BluetoothLeAdvertisingMode">
            <summary>
            Enumeration for the Bluetooth LE advertising mode types.
            </summary>
            <since_tizen> 3 </since_tizen>
        </member>
        <member name="F:Tizen.Network.Bluetooth.BluetoothLeAdvertisingMode.BluetoothLeAdvertisingBalancedMode">
            <summary>
            The Bluetooth LE advertising balanced mode.
            </summary>
        </member>
        <member name="F:Tizen.Network.Bluetooth.BluetoothLeAdvertisingMode.BluetoothLeAdvertisingLowLatencyMode">
            <summary>
            The Bluetooth LE advertising low latency mode.
            </summary>
        </member>
        <member name="F:Tizen.Network.Bluetooth.BluetoothLeAdvertisingMode.BluetoothLeAdvertisingLowEnergyMode">
            <summary>
            The Bluetooth LE advertising low energy mode.
            </summary>
        </member>
        <member name="T:Tizen.Network.Bluetooth.BluetoothLeAdvertisingState">
            <summary>
            Enumeration for the Bluetooth LE advertising mode type.
            </summary>
            <since_tizen> 3 </since_tizen>
        </member>
        <member name="F:Tizen.Network.Bluetooth.BluetoothLeAdvertisingState.BluetoothLeAdvertisingStopped">
            <summary>
            The Bluetooth LE advertising stopped.
            </summary>
        </member>
        <member name="F:Tizen.Network.Bluetooth.BluetoothLeAdvertisingState.BluetoothLeAdvertisingStarted">
            <summary>
            The Bluetooth LE advertising started.
            </summary>
        </member>
        <member name="T:Tizen.Network.Bluetooth.BluetoothLeScanMode">
            <summary>
            Enumeration for the Bluetooth LE scan mode.
            </summary>
            <since_tizen> 7 </since_tizen>
        </member>
        <member name="F:Tizen.Network.Bluetooth.BluetoothLeScanMode.Balanced">
            <summary>
            Balanced mode of power consumption and connection latency
            </summary>
        </member>
        <member name="F:Tizen.Network.Bluetooth.BluetoothLeScanMode.LowLatency">
            <summary>
            Low connection latency but high power consumption
            </summary>
        </member>
        <member name="F:Tizen.Network.Bluetooth.BluetoothLeScanMode.LowEnergy">
            <summary>
            Low power consumption but high connection latency
            </summary>
        </member>
        <member name="T:Tizen.Network.Bluetooth.IntDataType">
            <summary>
            Enumeration for the integer type for GATT handle's values.
            </summary>
            <since_tizen> 3 </since_tizen>
        </member>
        <member name="F:Tizen.Network.Bluetooth.IntDataType.SignedInt8">
            <summary>
            The 8-bit signed integer type.
            </summary>
        </member>
        <member name="F:Tizen.Network.Bluetooth.IntDataType.SignedInt16">
            <summary>
            The 16-bit signed integer type.
            </summary>
        </member>
        <member name="F:Tizen.Network.Bluetooth.IntDataType.SignedInt32">
            <summary>
            The 32-bit signed integer type.
            </summary>
        </member>
        <member name="F:Tizen.Network.Bluetooth.IntDataType.UnsignedInt8">
            <summary>
            The 8-bit unsigned integer type.
            </summary>
        </member>
        <member name="F:Tizen.Network.Bluetooth.IntDataType.UnsignedInt16">
            <summary>
            The 16-bit unsigned integer type.
            </summary>
        </member>
        <member name="F:Tizen.Network.Bluetooth.IntDataType.UnsignedInt32">
            <summary>
            The 32-bit unsigned integer type.
            </summary>
        </member>
        <member name="T:Tizen.Network.Bluetooth.FloatDataType">
            <summary>
            Enumerations of the float type for GATT handle's values.
            </summary>
            <since_tizen> 3 </since_tizen>
        </member>
        <member name="F:Tizen.Network.Bluetooth.FloatDataType.Float">
            <summary>
            The 32-bit float type.
            </summary>
        </member>
        <member name="F:Tizen.Network.Bluetooth.FloatDataType.SFloat">
            <summary>
            The 16-bit float type.
            </summary>
        </member>
        <member name="T:Tizen.Network.Bluetooth.GattHandleType">
            <summary>
            Enumeration for the GATT handle's types.
            </summary>
            <since_tizen> 3 </since_tizen>
        </member>
        <member name="F:Tizen.Network.Bluetooth.GattHandleType.Service">
            <summary>
            The GATT service type.
            </summary>
        </member>
        <member name="F:Tizen.Network.Bluetooth.GattHandleType.Characteristic">
            <summary>
            The GATT characteristic type.
            </summary>
        </member>
        <member name="F:Tizen.Network.Bluetooth.GattHandleType.Descriptor">
            <summary>
            The GATT descriptor type.
            </summary>
        </member>
        <member name="T:Tizen.Network.Bluetooth.BluetoothGattServiceType">
            <summary>
            Enumeration for the service types.
            </summary>
            <since_tizen> 3 </since_tizen>
        </member>
        <member name="F:Tizen.Network.Bluetooth.BluetoothGattServiceType.Primary">
            <summary>
            The GATT primary service type.
            </summary>
        </member>
        <member name="F:Tizen.Network.Bluetooth.BluetoothGattServiceType.Secondary">
            <summary>
            The GATT secondary service type.
            </summary>
        </member>
        <member name="T:Tizen.Network.Bluetooth.BluetoothGattProperty">
            <summary>
            Enumeration for the characteristic's property.
            </summary>
            <since_tizen> 3 </since_tizen>
        </member>
        <member name="F:Tizen.Network.Bluetooth.BluetoothGattProperty.Broadcast">
            <summary>
            The broadcast property.
            </summary>
        </member>
        <member name="F:Tizen.Network.Bluetooth.BluetoothGattProperty.Read">
            <summary>
            The read property.
            </summary>
        </member>
        <member name="F:Tizen.Network.Bluetooth.BluetoothGattProperty.WriteWithoutResponse">
            <summary>
            The write without response property.
            </summary>
        </member>
        <member name="F:Tizen.Network.Bluetooth.BluetoothGattProperty.Write">
            <summary>
            The write property.
            </summary>
        </member>
        <member name="F:Tizen.Network.Bluetooth.BluetoothGattProperty.Notify">
            <summary>
            The notify property.
            </summary>
        </member>
        <member name="F:Tizen.Network.Bluetooth.BluetoothGattProperty.Indicate">
            <summary>
            The indicate property.
            </summary>
        </member>
        <member name="F:Tizen.Network.Bluetooth.BluetoothGattProperty.AuthenticatedSignedWrites">
            <summary>
            The authenticated signed writes property.
            </summary>
        </member>
        <member name="F:Tizen.Network.Bluetooth.BluetoothGattProperty.ExtendedProperties">
            <summary>
            The extended properties.
            </summary>
        </member>
        <member name="T:Tizen.Network.Bluetooth.BluetoothGattPermission">
            <summary>
            Enumeration for the Bluetooth GATT permission types.
            </summary>
            <since_tizen> 3 </since_tizen>
        </member>
        <member name="F:Tizen.Network.Bluetooth.BluetoothGattPermission.Read">
            <summary>
            Read permission.
            </summary>
        </member>
        <member name="F:Tizen.Network.Bluetooth.BluetoothGattPermission.Write">
            <summary>
            Write permission.
            </summary>
        </member>
        <member name="T:Tizen.Network.Bluetooth.BluetoothGattWriteType">
            <summary>
            Enumeration for the write types.
            </summary>
            <since_tizen> 3 </since_tizen>
        </member>
        <member name="F:Tizen.Network.Bluetooth.BluetoothGattWriteType.NoResponse">
            <summary>
            The write without response.
            </summary>
        </member>
        <member name="F:Tizen.Network.Bluetooth.BluetoothGattWriteType.WriteWithResponse">
            <summary>
            The write with response.
            </summary>
        </member>
        <member name="T:Tizen.Network.Bluetooth.BluetoothGattRequestType">
            <summary>
            Enumeration for the remote device request types for attributes.
            </summary>
            <since_tizen> 3 </since_tizen>
        </member>
        <member name="F:Tizen.Network.Bluetooth.BluetoothGattRequestType.Read">
            <summary>
            Read requested.
            </summary>
        </member>
        <member name="F:Tizen.Network.Bluetooth.BluetoothGattRequestType.Write">
            <summary>
            Write requested.
            </summary>
        </member>
        <member name="T:Tizen.Network.Bluetooth.BluetoothGattServiceChangeType">
            <summary>
            Enumeration for the GATT service change type.
            </summary>
            <since_tizen> 9 </since_tizen>
        </member>
        <member name="F:Tizen.Network.Bluetooth.BluetoothGattServiceChangeType.Added">
            <summary>
            Service added.
            </summary>
        </member>
        <member name="F:Tizen.Network.Bluetooth.BluetoothGattServiceChangeType.Removed">
            <summary>
            Service removed.
            </summary>
        </member>
        <member name="F:Tizen.Network.Bluetooth.BluetoothGattServiceChangeType.Resync">
            <summary>
            Resync is required.
            </summary>
        </member>
        <member name="T:Tizen.Network.Bluetooth.BluetoothHidHeaderType">
            <summary>
            Enumeration for the Bluetooth HID header type.
            </summary>
            <since_tizen> 6 </since_tizen>
        </member>
        <member name="F:Tizen.Network.Bluetooth.BluetoothHidHeaderType.Handshake">
            <summary>
            The Bluetooth HID header type: Handshake
            </summary>
        </member>
        <member name="F:Tizen.Network.Bluetooth.BluetoothHidHeaderType.HidControl">
            <summary>
            The Bluetooth HID header type: HID control
            </summary>
        </member>
        <member name="F:Tizen.Network.Bluetooth.BluetoothHidHeaderType.GetReport">
            <summary>
            The Bluetooth HID header type: Get report
            </summary>
        </member>
        <member name="F:Tizen.Network.Bluetooth.BluetoothHidHeaderType.SetReport">
            <summary>
            The Bluetooth HID header type: Set report
            </summary>
        </member>
        <member name="F:Tizen.Network.Bluetooth.BluetoothHidHeaderType.GetProtocol">
            <summary>
            The Bluetooth HID header type: Get protocol
            </summary>
        </member>
        <member name="F:Tizen.Network.Bluetooth.BluetoothHidHeaderType.SetProtocol">
            <summary>
            The Bluetooth HID header type: Set protocol
            </summary>
        </member>
        <member name="F:Tizen.Network.Bluetooth.BluetoothHidHeaderType.Data">
            <summary>
            The Bluetooth HID header type: Data
            </summary>
        </member>
        <member name="F:Tizen.Network.Bluetooth.BluetoothHidHeaderType.Unknown">
            <summary>
            The Bluetooth HID header type: Unknown
            </summary>
        </member>
        <member name="T:Tizen.Network.Bluetooth.BluetoothHidParamType">
            <summary>
            Enumeration for the Bluetooth HID parameter type.
            </summary>
            <since_tizen> 6 </since_tizen>
        </member>
        <member name="F:Tizen.Network.Bluetooth.BluetoothHidParamType.Input">
            <summary>
            Parameter type: Input
            </summary>
        </member>
        <member name="F:Tizen.Network.Bluetooth.BluetoothHidParamType.Output">
            <summary>
            Parameter type: Output
            </summary>
        </member>
        <member name="T:Tizen.Network.Bluetooth.BluetoothErrorFactory">
            <summary>
            A class which is used to Throw the Bluetooth Error exceptions.
            </summary>
        </member>
        <member name="M:Tizen.Network.Bluetooth.BluetoothErrorFactory.ThrowBluetoothException(System.Int32)">
            <summary>
            Exceptions for Bluetooth Errors.
            </summary>
            <exception cref="T:System.InvalidOperationException">Thrown when the Bluetooth Error happens.</exception>
        </member>
        <member name="M:Tizen.Network.Bluetooth.BluetoothErrorFactory.CreateBluetoothException(System.Int32)">
            <summary>
            Creates Bluetooth Exception.
            </summary>
        </member>
        <member name="T:Tizen.Network.Bluetooth.StateChangedEventArgs">
            <summary>
            An extended EventArgs class contains the changed Bluetooth state.
            </summary>
            <since_tizen> 3 </since_tizen>
        </member>
        <member name="P:Tizen.Network.Bluetooth.StateChangedEventArgs.BTState">
            <summary>
            The state of Bluetooth.
            </summary>
            <since_tizen> 3 </since_tizen>
        </member>
        <member name="P:Tizen.Network.Bluetooth.StateChangedEventArgs.Result">
            <summary>
            The BluetoothError result.
            </summary>
            <since_tizen> 3 </since_tizen>
        </member>
        <member name="T:Tizen.Network.Bluetooth.NameChangedEventArgs">
            <summary>
            An extended EventArgs class contains the changed Bluetooth name.
            </summary>
            <since_tizen> 3 </since_tizen>
        </member>
        <member name="P:Tizen.Network.Bluetooth.NameChangedEventArgs.DeviceName">
            <summary>
            The name of the device.
            </summary>
            <since_tizen> 3 </since_tizen>
        </member>
        <member name="T:Tizen.Network.Bluetooth.VisibilityModeChangedEventArgs">
            <summary>
            An extended EventArgs class contains the changed Bluetooth visibility mode.
            </summary>
            <since_tizen> 3 </since_tizen>
        </member>
        <member name="P:Tizen.Network.Bluetooth.VisibilityModeChangedEventArgs.Visibility">
            <summary>
            The visibility mode.
            </summary>
            <since_tizen> 3 </since_tizen>
        </member>
        <member name="P:Tizen.Network.Bluetooth.VisibilityModeChangedEventArgs.Result">
            <summary>
            The BluetoothError result.
            </summary>
            <since_tizen> 3 </since_tizen>
        </member>
        <member name="T:Tizen.Network.Bluetooth.VisibilityDurationChangedEventArgs">
            <summary>
            An extended EventArgs class contains the duration until the visibility mode is changed from TimeLimitedDiscoverable to NonDiscoverable.
            </summary>
            <since_tizen> 3 </since_tizen>
        </member>
        <member name="P:Tizen.Network.Bluetooth.VisibilityDurationChangedEventArgs.Duration">
            <summary>
            The duration.
            </summary>
            <since_tizen> 3 </since_tizen>
        </member>
        <member name="T:Tizen.Network.Bluetooth.DiscoveryStateChangedEventArgs">
            <summary>
            An extended EventArgs class contains the changed Bluetooth device discovery state and the discovered device information.
            </summary>
            <since_tizen> 3 </since_tizen>
        </member>
        <member name="P:Tizen.Network.Bluetooth.DiscoveryStateChangedEventArgs.Result">
            <summary>
            The BluetoothError result.
            </summary>
            <since_tizen> 3 </since_tizen>
        </member>
        <member name="P:Tizen.Network.Bluetooth.DiscoveryStateChangedEventArgs.DiscoveryState">
            <summary>
            The state of the discovery.
            </summary>
            <since_tizen> 3 </since_tizen>
        </member>
        <member name="P:Tizen.Network.Bluetooth.DiscoveryStateChangedEventArgs.DeviceFound">
            <summary>
            The remote device found.
            </summary>
            <since_tizen> 3 </since_tizen>
        </member>
        <member name="T:Tizen.Network.Bluetooth.BondCreatedEventArgs">
            <summary>
            An extended EventArgs class contains the bonded device information.
            </summary>
            <since_tizen> 3 </since_tizen>
        </member>
        <member name="P:Tizen.Network.Bluetooth.BondCreatedEventArgs.Result">
            <summary>
            The BluetoothError result.
            </summary>
            <since_tizen> 3 </since_tizen>
        </member>
        <member name="P:Tizen.Network.Bluetooth.BondCreatedEventArgs.Device">
            <summary>
            The remote device.
            </summary>
            <since_tizen> 3 </since_tizen>
        </member>
        <member name="T:Tizen.Network.Bluetooth.BondDestroyedEventArgs">
            <summary>
            An extended EventArgs class contains the address of the remote Bluetooth device to destroy bond with.
            </summary>
            <since_tizen> 3 </since_tizen>
        </member>
        <member name="P:Tizen.Network.Bluetooth.BondDestroyedEventArgs.Result">
            <summary>
            The BluetoothError result.
            </summary>
            <since_tizen> 3 </since_tizen>
        </member>
        <member name="P:Tizen.Network.Bluetooth.BondDestroyedEventArgs.DeviceAddress">
            <summary>
            The remote device address.
            </summary>
            <value>The device address.</value>
            <since_tizen> 3 </since_tizen>
        </member>
        <member name="T:Tizen.Network.Bluetooth.AuthorizationChangedEventArgs">
            <summary>
            An extended EventArgs class contains the authorization state and the address of the remote Bluetooth device.
            </summary>
            <since_tizen> 3 </since_tizen>
        </member>
        <member name="P:Tizen.Network.Bluetooth.AuthorizationChangedEventArgs.Authorization">
            <summary>
            The authorization.
            </summary>
            <since_tizen> 3 </since_tizen>
        </member>
        <member name="P:Tizen.Network.Bluetooth.AuthorizationChangedEventArgs.DeviceAddress">
            <summary>
            The device address.
            </summary>
            <since_tizen> 3 </since_tizen>
        </member>
        <member name="T:Tizen.Network.Bluetooth.ServiceSearchedEventArgs">
            <summary>
            An extended EventArgs class contains the service lists found on the remote Bluetooth device.
            </summary>
            <since_tizen> 3 </since_tizen>
        </member>
        <member name="P:Tizen.Network.Bluetooth.ServiceSearchedEventArgs.Result">
            <summary>
            The BluetoothError result.
            </summary>
            <since_tizen> 3 </since_tizen>
        </member>
        <member name="P:Tizen.Network.Bluetooth.ServiceSearchedEventArgs.SdpData">
            <summary>
            The sdp data.
            </summary>
            <since_tizen> 3 </since_tizen>
        </member>
        <member name="T:Tizen.Network.Bluetooth.DeviceConnectionStateChangedEventArgs">
            <summary>
            An extended EventArgs class contains the connection state and the connection information of the remote device.
            </summary>
            <since_tizen> 3 </since_tizen>
        </member>
        <member name="P:Tizen.Network.Bluetooth.DeviceConnectionStateChangedEventArgs.IsConnected">
            <summary>
            A value indicating whether the device is connected.
            </summary>
            <since_tizen> 3 </since_tizen>
        </member>
        <member name="P:Tizen.Network.Bluetooth.DeviceConnectionStateChangedEventArgs.ConnectionData">
            <summary>
            The device connection data.
            </summary>
            <since_tizen> 3 </since_tizen>
        </member>
        <member name="T:Tizen.Network.Bluetooth.SocketDataReceivedEventArgs">
            <summary>
            An extended EventArgs class contains the data received information.
            </summary>
            <since_tizen> 3 </since_tizen>
        </member>
        <member name="P:Tizen.Network.Bluetooth.SocketDataReceivedEventArgs.Data">
            <summary>
            The socket data.
            </summary>
            <since_tizen> 3 </since_tizen>
        </member>
        <member name="T:Tizen.Network.Bluetooth.SocketConnectionStateChangedEventArgs">
            <summary>
            An extended EventArgs class contains the changed connection state.
            </summary>
            <since_tizen> 3 </since_tizen>
        </member>
        <member name="P:Tizen.Network.Bluetooth.SocketConnectionStateChangedEventArgs.Result">
            <summary>
            The BluetoothError result.
            </summary>
            <since_tizen> 3 </since_tizen>
        </member>
        <member name="P:Tizen.Network.Bluetooth.SocketConnectionStateChangedEventArgs.State">
            <summary>
            The socket state.
            </summary>
            <since_tizen> 3 </since_tizen>
        </member>
        <member name="P:Tizen.Network.Bluetooth.SocketConnectionStateChangedEventArgs.Connection">
            <summary>
            The socket connection.
            </summary>
            <since_tizen> 3 </since_tizen>
        </member>
        <member name="T:Tizen.Network.Bluetooth.AcceptStateChangedEventArgs">
            <summary>
            The AcceptStateChanged event is raised when the socket connection state is changed.
            </summary>
            <since_tizen> 3 </since_tizen>
        </member>
        <member name="P:Tizen.Network.Bluetooth.AcceptStateChangedEventArgs.Result">
            <summary>
            The BluetoothError result.
            </summary>
            <since_tizen> 3 </since_tizen>
        </member>
        <member name="P:Tizen.Network.Bluetooth.AcceptStateChangedEventArgs.State">
            <summary>
            The socket state.
            </summary>
            <since_tizen> 3 </since_tizen>
        </member>
        <member name="P:Tizen.Network.Bluetooth.AcceptStateChangedEventArgs.Connection">
            <summary>
            The socket connection.
            </summary>
            <since_tizen> 3 </since_tizen>
        </member>
        <member name="P:Tizen.Network.Bluetooth.AcceptStateChangedEventArgs.Server">
            <summary>
            The server socket instance.
            </summary>
            <since_tizen> 3 </since_tizen>
        </member>
        <member name="T:Tizen.Network.Bluetooth.SocketConnectionRequestedEventArgs">
            <summary>
            An extended EventArgs class contains the socket connection requested.
            </summary>
            <since_tizen> 6 </since_tizen>
        </member>
        <member name="P:Tizen.Network.Bluetooth.SocketConnectionRequestedEventArgs.SocketFd">
            <summary>
            The socket fd.
            </summary>
            <since_tizen> 6 </since_tizen>
        </member>
        <member name="P:Tizen.Network.Bluetooth.SocketConnectionRequestedEventArgs.RemoteAddress">
            <summary>
            The remote address.
            </summary>
            <since_tizen> 6 </since_tizen>
        </member>
        <member name="T:Tizen.Network.Bluetooth.AudioConnectionStateChangedEventArgs">
            <summary>
            An extended EventArgs class contains the connection state, remote address, and the type of audio profile.
            </summary>
            <since_tizen> 3 </since_tizen>
        </member>
        <member name="P:Tizen.Network.Bluetooth.AudioConnectionStateChangedEventArgs.Result">
            <summary>
            The result.
            </summary>
            <since_tizen> 3 </since_tizen>
        </member>
        <member name="P:Tizen.Network.Bluetooth.AudioConnectionStateChangedEventArgs.IsConnected">
            <summary>
            A value indicating whether this instance is connected.
            </summary>
            <since_tizen> 3 </since_tizen>
        </member>
        <member name="P:Tizen.Network.Bluetooth.AudioConnectionStateChangedEventArgs.Address">
            <summary>
            The address.
            </summary>
            <since_tizen> 3 </since_tizen>
        </member>
        <member name="P:Tizen.Network.Bluetooth.AudioConnectionStateChangedEventArgs.ProfileType">
            <summary>
            The type of the audio profile.
            </summary>
            <since_tizen> 3 </since_tizen>
        </member>
        <member name="T:Tizen.Network.Bluetooth.AgScoStateChangedEventArgs">
            <summary>
            An extended EventArgs class contains the connection state and the address of the remote Bluetooth device.
            </summary>
            <since_tizen> 6 </since_tizen>
        </member>
        <member name="P:Tizen.Network.Bluetooth.AgScoStateChangedEventArgs.IsOpened">
            <summary>
            A value indicating whether the state is connected.
            </summary>
            <since_tizen> 6 </since_tizen>
        </member>
        <member name="T:Tizen.Network.Bluetooth.HidConnectionStateChangedEventArgs">
            <summary>
            An extended EventArgs class contains the connection state and the address of the remote Bluetooth device.
            </summary>
            <since_tizen> 3 </since_tizen>
        </member>
        <member name="P:Tizen.Network.Bluetooth.HidConnectionStateChangedEventArgs.Result">
            <summary>
            The result.
            </summary>
            <since_tizen> 3 </since_tizen>
        </member>
        <member name="P:Tizen.Network.Bluetooth.HidConnectionStateChangedEventArgs.IsConnected">
            <summary>
            A value indicating whether this instance is connected.
            </summary>
            <since_tizen> 3 </since_tizen>
        </member>
        <member name="P:Tizen.Network.Bluetooth.HidConnectionStateChangedEventArgs.Address">
            <summary>
            The address.
            </summary>
            <since_tizen> 3 </since_tizen>
        </member>
        <member name="T:Tizen.Network.Bluetooth.HidDeviceConnectionStateChangedEventArgs">
            <summary>
            An extended EventArgs class contains the connection state and the address of the remote Bluetooth device.
            </summary>
            <since_tizen> 6 </since_tizen>
        </member>
        <member name="P:Tizen.Network.Bluetooth.HidDeviceConnectionStateChangedEventArgs.IsConnected">
            <summary>
            A value indicating whether this instance is connected.
            </summary>
            <since_tizen> 6 </since_tizen>
        </member>
        <member name="P:Tizen.Network.Bluetooth.HidDeviceConnectionStateChangedEventArgs.Address">
            <summary>
            The address.
            </summary>
            <since_tizen> 6 </since_tizen>
        </member>
        <member name="T:Tizen.Network.Bluetooth.HidDeviceDataReceivedEventArgs">
            <summary>
            An extended EventArgs class contains the connection state and the address of the remote Bluetooth device.
            </summary>
            <since_tizen> 6 </since_tizen>
        </member>
        <member name="P:Tizen.Network.Bluetooth.HidDeviceDataReceivedEventArgs.ReceivedData">
            <summary>
            The result.
            </summary>
            <since_tizen> 6 </since_tizen>
        </member>
        <member name="T:Tizen.Network.Bluetooth.EqualizerStateChangedEventArgs">
            <summary>
            An extended EventArgs class contains the changed equalizer state.
            </summary>
            <since_tizen> 3 </since_tizen>
        </member>
        <member name="P:Tizen.Network.Bluetooth.EqualizerStateChangedEventArgs.State">
            <summary>
            The state of the equalizer.
            </summary>
            <since_tizen> 3 </since_tizen>
        </member>
        <member name="T:Tizen.Network.Bluetooth.RepeatModeChangedEventArgs">
            <summary>
            An extended EventArgs class contains the changed repeat mode.
            </summary>
            <since_tizen> 3 </since_tizen>
        </member>
        <member name="P:Tizen.Network.Bluetooth.RepeatModeChangedEventArgs.Mode">
            <summary>
            The repeat mode.
            </summary>
            <since_tizen> 3 </since_tizen>
        </member>
        <member name="T:Tizen.Network.Bluetooth.ShuffleModeChangedeventArgs">
            <summary>
            An extended EventArgs class contains the changed shuffle mode.
            </summary>
            <since_tizen> 3 </since_tizen>
        </member>
        <member name="P:Tizen.Network.Bluetooth.ShuffleModeChangedeventArgs.Mode">
            <summary>
            The shuffle mode.
            </summary>
            <since_tizen> 3 </since_tizen>
        </member>
        <member name="T:Tizen.Network.Bluetooth.ScanModeChangedEventArgs">
            <summary>
            An extended EventArgs class contains the changed scan mode.
            </summary>
            <since_tizen> 3 </since_tizen>
        </member>
        <member name="P:Tizen.Network.Bluetooth.ScanModeChangedEventArgs.Mode">
            <summary>
            The scan mode.
            </summary>
            <since_tizen> 3 </since_tizen>
        </member>
        <member name="T:Tizen.Network.Bluetooth.TargetConnectionStateChangedEventArgs">
            <summary>
            An extended EventArgs class contains the connection state and the remote device address.
            </summary>
            <since_tizen> 3 </since_tizen>
        </member>
        <member name="P:Tizen.Network.Bluetooth.TargetConnectionStateChangedEventArgs.IsConnected">
            <summary>
            A value indicating whether this instance is connected.
            </summary>
            <since_tizen> 3 </since_tizen>
        </member>
        <member name="P:Tizen.Network.Bluetooth.TargetConnectionStateChangedEventArgs.Address">
            <summary>
            The address.
            </summary>
            <since_tizen> 3 </since_tizen>
        </member>
        <member name="T:Tizen.Network.Bluetooth.AvrcpControlConnectionChangedEventArgs">
            <summary>
            An extended EventArgs class contains the connection state and the remote device address.
            </summary>
            <since_tizen> 8 </since_tizen>
        </member>
        <member name="P:Tizen.Network.Bluetooth.AvrcpControlConnectionChangedEventArgs.IsConnected">
            <summary>
            A value indicating whether this instance is connected.
            </summary>
            <since_tizen> 8 </since_tizen>
        </member>
        <member name="P:Tizen.Network.Bluetooth.AvrcpControlConnectionChangedEventArgs.RemoteAddress">
            <summary>
            The remote address.
            </summary>
            <since_tizen> 8 </since_tizen>
        </member>
        <member name="T:Tizen.Network.Bluetooth.PositionChangedEventArgs">
            <summary>
            An extended EventArgs class contains the position.
            </summary>
            <since_tizen> 8 </since_tizen>
        </member>
        <member name="P:Tizen.Network.Bluetooth.PositionChangedEventArgs.Position">
            <summary>
            The current position in milliseconds.
            </summary>
            <since_tizen> 8 </since_tizen>
        </member>
        <member name="T:Tizen.Network.Bluetooth.PlayStateChangedEventArgs">
            <summary>
            An extended EventArgs class contains the play state.
            </summary>
            <since_tizen> 8 </since_tizen>
        </member>
        <member name="P:Tizen.Network.Bluetooth.PlayStateChangedEventArgs.PlayState">
            <summary>
            The current play state.
            </summary>
            <since_tizen> 8 </since_tizen>
        </member>
        <member name="T:Tizen.Network.Bluetooth.TrackInfoChangedEventArgs">
            <summary>
            An extended EventArgs class contains the play state.
            </summary>
            <since_tizen> 8 </since_tizen>
        </member>
        <member name="P:Tizen.Network.Bluetooth.TrackInfoChangedEventArgs.TrackData">
            <summary>
            The current track data
            </summary>
            <since_tizen> 8 </since_tizen>
        </member>
        <member name="T:Tizen.Network.Bluetooth.AdvertisingStateChangedEventArgs">
            <summary>
            An extended EventArgs class contains the changed Bluetooth LE advertising state changed information.
            </summary>
            <since_tizen> 3 </since_tizen>
        </member>
        <member name="P:Tizen.Network.Bluetooth.AdvertisingStateChangedEventArgs.Result">
            <summary>
            The result.
            </summary>
            <since_tizen> 3 </since_tizen>
        </member>
        <member name="P:Tizen.Network.Bluetooth.AdvertisingStateChangedEventArgs.AdvertiserHandle">
            <summary>
            The advertiser handle.
            </summary>
            <since_tizen> 3 </since_tizen>
        </member>
        <member name="P:Tizen.Network.Bluetooth.AdvertisingStateChangedEventArgs.State">
            <summary>
            The LE advertising state.
            </summary>
            <since_tizen> 3 </since_tizen>
        </member>
        <member name="T:Tizen.Network.Bluetooth.AdapterLeScanResultChangedEventArgs">
            <summary>
            An extended EventArgs class contains the changed Bluetooth LE scan result information.
            </summary>
            <since_tizen> 3 </since_tizen>
        </member>
        <member name="P:Tizen.Network.Bluetooth.AdapterLeScanResultChangedEventArgs.Result">
            <summary>
            The result.
            </summary>
            <since_tizen> 3 </since_tizen>
        </member>
        <member name="P:Tizen.Network.Bluetooth.AdapterLeScanResultChangedEventArgs.DeviceData">
            <summary>
            The LE device data.
            </summary>
            <since_tizen> 3 </since_tizen>
        </member>
        <member name="T:Tizen.Network.Bluetooth.GattConnectionStateChangedEventArgs">
            <summary>
            An extended EventArgs class contains the changed Bluetooth LE GATT connection state.
            </summary>
            <since_tizen> 3 </since_tizen>
        </member>
        <member name="P:Tizen.Network.Bluetooth.GattConnectionStateChangedEventArgs.Result">
            <summary>
            The result.
            </summary>
            <since_tizen> 3 </since_tizen>
        </member>
        <member name="P:Tizen.Network.Bluetooth.GattConnectionStateChangedEventArgs.IsConnected">
            <summary>
            A value indicating whether this instance is connected.
            </summary>
            <since_tizen> 3 </since_tizen>
        </member>
        <member name="P:Tizen.Network.Bluetooth.GattConnectionStateChangedEventArgs.RemoteAddress">
            <summary>
            The remote address.
            </summary>
            <since_tizen> 3 </since_tizen>
        </member>
        <member name="T:Tizen.Network.Bluetooth.AttMtuChangedEventArgs">
            <summary>
            An extended EventArgs class contains the changed MTU value.
            </summary>
            <since_tizen> 8 </since_tizen>
        </member>
        <member name="P:Tizen.Network.Bluetooth.AttMtuChangedEventArgs.RemoteAddress">
            <summary>
            The remote address.
            </summary>
            <since_tizen> 8 </since_tizen>
        </member>
        <member name="P:Tizen.Network.Bluetooth.AttMtuChangedEventArgs.Mtu">
            <summary>
            The MTU value
            </summary>
            <since_tizen> 8 </since_tizen>
        </member>
        <member name="T:Tizen.Network.Bluetooth.ServiceChangedEventArgs">
            <summary>
            An extended EventArgs class contains the service changed information.
            </summary>
            <since_tizen> 9 </since_tizen>
        </member>
        <member name="P:Tizen.Network.Bluetooth.ServiceChangedEventArgs.ChangeType">
            <summary>
            The service changed type.
            </summary>
            <since_tizen> 9 </since_tizen>
        </member>
        <member name="P:Tizen.Network.Bluetooth.ServiceChangedEventArgs.ServiceUuid">
            <summary>
            The service UUID.
            </summary>
            <since_tizen> 9 </since_tizen>
        </member>
        <member name="T:Tizen.Network.Bluetooth.ValueChangedEventArgs">
            <summary>
            An extended EventArgs class contains the changed attribute value.
            </summary>
            <since_tizen> 3 </since_tizen>
        </member>
        <member name="P:Tizen.Network.Bluetooth.ValueChangedEventArgs.Value">
            <summary>
            The attribute value.
            </summary>
            <since_tizen> 3 </since_tizen>
        </member>
        <member name="T:Tizen.Network.Bluetooth.ReadRequestedEventArgs">
            <summary>
            An extended EventArgs class contains the read value request data.
            </summary>
            <since_tizen> 3 </since_tizen>
        </member>
        <member name="P:Tizen.Network.Bluetooth.ReadRequestedEventArgs.Server">
            <summary>
            The GATT server instance.
            </summary>
            <since_tizen> 3 </since_tizen>
        </member>
        <member name="P:Tizen.Network.Bluetooth.ReadRequestedEventArgs.ClientAddress">
            <summary>
            The client address.
            </summary>
            <since_tizen> 3 </since_tizen>
        </member>
        <member name="P:Tizen.Network.Bluetooth.ReadRequestedEventArgs.RequestId">
            <summary>
            The request identifier.
            </summary>
            <since_tizen> 3 </since_tizen>
        </member>
        <member name="P:Tizen.Network.Bluetooth.ReadRequestedEventArgs.Offset">
            <summary>
            The offset.
            </summary>
            <since_tizen> 3 </since_tizen>
        </member>
        <member name="T:Tizen.Network.Bluetooth.WriteRequestedEventArgs">
            <summary>
            An extended EventArgs class contains the read value request data.
            </summary>
            <since_tizen> 3 </since_tizen>
        </member>
        <member name="P:Tizen.Network.Bluetooth.WriteRequestedEventArgs.Server">
            <summary>
            The GATT server instance.
            </summary>
            <since_tizen> 3 </since_tizen>
        </member>
        <member name="P:Tizen.Network.Bluetooth.WriteRequestedEventArgs.ClientAddress">
            <summary>
            The client address.
            </summary>
            <since_tizen> 3 </since_tizen>
        </member>
        <member name="P:Tizen.Network.Bluetooth.WriteRequestedEventArgs.RequestId">
            <summary>
            The request identifier.
            </summary>
            <since_tizen> 3 </since_tizen>
        </member>
        <member name="P:Tizen.Network.Bluetooth.WriteRequestedEventArgs.Value">
            <summary>
            The read value.
            </summary>
            <since_tizen> 3 </since_tizen>
        </member>
        <member name="P:Tizen.Network.Bluetooth.WriteRequestedEventArgs.Offset">
            <summary>
            The offset.
            </summary>
            <since_tizen> 3 </since_tizen>
        </member>
        <member name="P:Tizen.Network.Bluetooth.WriteRequestedEventArgs.Response_needed">
            <summary>
            Indicates whether a response is required by the remote device.
            </summary>
            <since_tizen> 3 </since_tizen>
        </member>
        <member name="T:Tizen.Network.Bluetooth.NotificationStateChangedEventArg">
            <summary>
            An extended EventArgs class contains the client preference to enable or disable the Notification/Indication.
            </summary>
            <since_tizen> 3 </since_tizen>
        </member>
        <member name="P:Tizen.Network.Bluetooth.NotificationStateChangedEventArg.Server">
            <summary>
            The GATT server instance.
            </summary>
            <since_tizen> 3 </since_tizen>
        </member>
        <member name="P:Tizen.Network.Bluetooth.NotificationStateChangedEventArg.Value">
            <summary>
            A value indicating whether the notification is enabled.
            </summary>
            <since_tizen> 3 </since_tizen>
        </member>
        <member name="T:Tizen.Network.Bluetooth.NotificationSentEventArg">
            <summary>
            An extended EventArgs class contains the read value request data.
            </summary>
            <since_tizen> 3 </since_tizen>
        </member>
        <member name="P:Tizen.Network.Bluetooth.NotificationSentEventArg.Server">
            <summary>
            The GATT server instance.
            </summary>
            <since_tizen> 3 </since_tizen>
        </member>
        <member name="P:Tizen.Network.Bluetooth.NotificationSentEventArg.ClientAddress">
            <summary>
            The client address.
            </summary>
            <since_tizen> 3 </since_tizen>
        </member>
        <member name="P:Tizen.Network.Bluetooth.NotificationSentEventArg.Result">
            <summary>
            The result.
            </summary>
            <since_tizen> 3 </since_tizen>
        </member>
        <member name="P:Tizen.Network.Bluetooth.NotificationSentEventArg.Completed">
            <summary>
            Gets a value indicating whether the notification sent is completed.
            </summary>
            <since_tizen> 3 </since_tizen>
        </member>
        <member name="T:Tizen.Network.Bluetooth.ConnectionRequestedEventArgs">
            <summary>
            An extended EventArgs class which contains the connection state and address of the remote Bluetooth device.
            </summary>
            <since_tizen> 4 </since_tizen>
        </member>
        <member name="P:Tizen.Network.Bluetooth.ConnectionRequestedEventArgs.Address">
            <summary>
            The address.
            </summary>
            <since_tizen> 4 </since_tizen>
        </member>
        <member name="T:Tizen.Network.Bluetooth.TransferProgressEventArgs">
            <summary>
            An extended EventArgs class which contains the file transfer progress state, file transfer progress by percent.
            </summary>
            <since_tizen> 4 </since_tizen>
        </member>
        <member name="P:Tizen.Network.Bluetooth.TransferProgressEventArgs.File">
            <summary>
            The File name.
            </summary>
            <since_tizen> 4 </since_tizen>
        </member>
        <member name="P:Tizen.Network.Bluetooth.TransferProgressEventArgs.Size">
            <summary>
            The File size.
            </summary>
            <since_tizen> 4 </since_tizen>
        </member>
        <member name="P:Tizen.Network.Bluetooth.TransferProgressEventArgs.Percent">
            <summary>
            The File transfer percent.
            </summary>
            <since_tizen> 4 </since_tizen>
        </member>
        <member name="T:Tizen.Network.Bluetooth.TransferFinishedEventArgs">
            <summary>
            An extended EventArgs class which contains the file transfer finished state and file state.
            </summary>
            <since_tizen> 4 </since_tizen>
        </member>
        <member name="P:Tizen.Network.Bluetooth.TransferFinishedEventArgs.File">
            <summary>
            The File name.
            </summary>
            <since_tizen> 4 </since_tizen>
        </member>
        <member name="P:Tizen.Network.Bluetooth.TransferFinishedEventArgs.Size">
            <summary>
            The File size.
            </summary>
            <since_tizen> 4 </since_tizen>
        </member>
        <member name="P:Tizen.Network.Bluetooth.TransferFinishedEventArgs.Result">
            <summary>
            The return value.
            </summary>
            <since_tizen> 4 </since_tizen>
        </member>
        <member name="T:Tizen.Network.Bluetooth.PushRespondedEventArgs">
            <summary>
            An extended EventArgs class which contains the Push Request respond state
            </summary>
            <since_tizen> 4 </since_tizen>
        </member>
        <member name="P:Tizen.Network.Bluetooth.PushRespondedEventArgs.Result">
            <summary>
            The return value.
            </summary>
            <since_tizen> 4 </since_tizen>
        </member>
        <member name="P:Tizen.Network.Bluetooth.PushRespondedEventArgs.Address">
            <summary>
            The address.
            </summary>
            <since_tizen> 4 </since_tizen>
        </member>
        <member name="T:Tizen.Network.Bluetooth.PushProgressEventArgs">
            <summary>
            An extended EventArgs class which contains the file push progress state, push progress by percent.
            </summary>
            <since_tizen> 4 </since_tizen>
        </member>
        <member name="P:Tizen.Network.Bluetooth.PushProgressEventArgs.File">
            <summary>
            The File name.
            </summary>
            <since_tizen> 4 </since_tizen>
        </member>
        <member name="P:Tizen.Network.Bluetooth.PushProgressEventArgs.Size">
            <summary>
            The File size.
            </summary>
            <since_tizen> 4 </since_tizen>
        </member>
        <member name="P:Tizen.Network.Bluetooth.PushProgressEventArgs.Percent">
            <summary>
            The File transfer percent.
            </summary>
            <since_tizen> 4 </since_tizen>
        </member>
        <member name="T:Tizen.Network.Bluetooth.PushFinishedEventArgs">
            <summary>
            An extended EventArgs class which contains the Push Request respond state
            </summary>
            <since_tizen> 4 </since_tizen>
        </member>
        <member name="P:Tizen.Network.Bluetooth.PushFinishedEventArgs.Result">
            <summary>
            The return value.
            </summary>
            <since_tizen> 4 </since_tizen>
        </member>
        <member name="P:Tizen.Network.Bluetooth.PushFinishedEventArgs.Address">
            <summary>
            The address.
            </summary>
            <since_tizen> 4 </since_tizen>
        </member>
        <member name="T:Tizen.Network.Bluetooth.BluetoothGattServer">
            <summary>
            The Bluetooth GATT server.
            </summary>
            <since_tizen> 3 </since_tizen>
        </member>
        <member name="E:Tizen.Network.Bluetooth.BluetoothGattServer.NotificationSent">
            <summary>
            (event) This event is called when the indication acknowledgement is received for each notified client.
            </summary>
            <since_tizen> 3 </since_tizen>
        </member>
        <member name="M:Tizen.Network.Bluetooth.BluetoothGattServer.CreateServer">
            <summary>
            Creates the Bluetooth GATT server.
            </summary>
            <returns>The BluetoothGattServer instance.</returns>
            <feature>http://tizen.org/feature/network.bluetooth.le.gatt.server</feature>
            <exception cref="T:System.NotSupportedException">Thrown when the BT/BTLE is not supported.</exception>
            <exception cref="T:System.InvalidOperationException">Thrown when the create GATT server fails.</exception>
            <since_tizen> 3 </since_tizen>
        </member>
        <member name="M:Tizen.Network.Bluetooth.BluetoothGattServer.Start">
            <summary>
            Registers the server along with the GATT services of the application it is hosting.
            </summary>
            <feature>http://tizen.org/feature/network.bluetooth.le.gatt.server</feature>
            <exception cref="T:System.NotSupportedException">Thrown when the BT/BTLE is not supported.</exception>
            <exception cref="T:System.InvalidOperationException">Thrown when the register server application fails.</exception>
            <since_tizen> 3 </since_tizen>
        </member>
        <member name="M:Tizen.Network.Bluetooth.BluetoothGattServer.RegisterGattService(Tizen.Network.Bluetooth.BluetoothGattService)">
            <summary>
            Registers a specified service to this server.
            </summary>
            <param name="service">The service, which needs to be registered with this server.</param>
            <feature>http://tizen.org/feature/network.bluetooth.le.gatt.server</feature>
            <exception cref="T:System.NotSupportedException">Thrown when the BT/BTLE is not supported.</exception>
            <exception cref="T:System.InvalidOperationException">Thrown when the register service fails.</exception>
            <since_tizen> 3 </since_tizen>
        </member>
        <member name="M:Tizen.Network.Bluetooth.BluetoothGattServer.UnregisterGattService(Tizen.Network.Bluetooth.BluetoothGattService)">
            <summary>
            Unregisters a specified service from this server.
            </summary>
            <param name="service">The service, which needs to be unregistered from this server.</param>
            <remarks>
            Once unregistered, the service object will become invalid and should not be used to access sevices or any children attribute's methods/members.
            </remarks>
            <feature>http://tizen.org/feature/network.bluetooth.le.gatt.server</feature>
            <exception cref="T:System.NotSupportedException">Thrown when the BT/BTLE is not supported.</exception>
            <exception cref="T:System.InvalidOperationException">Thrown when the unregister service fails.</exception>
            <since_tizen> 3 </since_tizen>
        </member>
        <member name="M:Tizen.Network.Bluetooth.BluetoothGattServer.UnregisterGattServices">
            <summary>
            Unregisters all services from this server.
            </summary>
            <remarks>
            Once unregistered, servicees will become invalid and should not be used to access sevices or any children attribute's methods/members.
            </remarks>
            <feature>http://tizen.org/feature/network.bluetooth.le.gatt.server</feature>
            <exception cref="T:System.NotSupportedException">Thrown when the BT/BTLE is not supported.</exception>
            <exception cref="T:System.InvalidOperationException">Thrown when the unregister all services fail.</exception>
            <since_tizen> 3 </since_tizen>
        </member>
        <member name="M:Tizen.Network.Bluetooth.BluetoothGattServer.GetService(System.String)">
            <summary>
            Gets service with given UUID that belongs to this server.
            </summary>
            <param name="uuid">The UUID for the service to get.</param>
            <returns>The Service with the given UUID if it exists, null otherwise.</returns>
            <feature>http://tizen.org/feature/network.bluetooth.le.gatt.server</feature>
            <exception cref="T:System.NotSupportedException">Thrown when the BT/BTLE is not supported.</exception>
            <exception cref="T:System.InvalidOperationException">Thrown when the service is not registered.</exception>
            <since_tizen> 3 </since_tizen>
        </member>
        <member name="M:Tizen.Network.Bluetooth.BluetoothGattServer.GetServices">
            <summary>
            Gets the list of services that belongs to this server.
            </summary>
            <returns>The list of services that belongs to this server.</returns>
            <feature>http://tizen.org/feature/network.bluetooth.le.gatt.server</feature>
            <exception cref="T:System.NotSupportedException">Thrown when the BT/BTLE is not supported.</exception>
            <exception cref="T:System.InvalidOperationException">Thrown when the service is not registered.</exception>
            <since_tizen> 3 </since_tizen>
        </member>
        <member name="M:Tizen.Network.Bluetooth.BluetoothGattServer.SendIndicationAsync(Tizen.Network.Bluetooth.BluetoothGattCharacteristic,System.String)">
            <summary>
            Sends indication for the value change of the characteristic to the remote devices.
            </summary>
            <param name="characteristic">The characteristic whose the value is changed.</param>
            <param name="clientAddress">The remote device address to send, notify, or indicate and if set to NULL, then notify/indicate all is enabled.</param>
            <returns>true on success, false otherwise.</returns>
            <feature>http://tizen.org/feature/network.bluetooth.le.gatt.server</feature>
            <exception cref="T:System.NotSupportedException">Thrown when the BT/BTLE is not supported.</exception>
            <exception cref="T:System.InvalidOperationException">Thrown when the BT/BTLE is not enabled
            or when the remote device is disconnected, or when service is not registered, or when the CCCD is not enabled.</exception>
            <since_tizen> 3 </since_tizen>
        </member>
        <member name="M:Tizen.Network.Bluetooth.BluetoothGattServer.SendNotification(Tizen.Network.Bluetooth.BluetoothGattCharacteristic,System.String)">
            <summary>
            Sends the notification for the value change of the characteristic to the remote devices.
            </summary>
            <param name="characteristic">The characteristic, which has a changed value.</param>
            <param name="clientAddress">The remote device address to send, notify, or indicate and if set to NULL, then notify/indicate all is enabled.</param>
            <feature>http://tizen.org/feature/network.bluetooth.le.gatt.server</feature>
            <exception cref="T:System.NotSupportedException">Thrown when the BT/BTLE is not supported.</exception>
            <exception cref="T:System.InvalidOperationException">Thrown when the BT/BTLE is not enabled
            or when the remote device is disconnected, or when service is not registered, or when the CCCD is not enabled.</exception>
            <since_tizen> 3 </since_tizen>
        </member>
        <member name="M:Tizen.Network.Bluetooth.BluetoothGattServer.SendResponse(System.Int32,Tizen.Network.Bluetooth.BluetoothGattRequestType,System.Int32,System.Byte[],System.Int32)">
            <summary>
            Sends a response to the remote device as a result of a read/write request.
            </summary>
            <param name="requestId">The identification of a read/write request.</param>
            <param name="type">The request type for read/write.</param>
            <param name="status">The error value in case of failure, 0 for success.</param>
            <param name="value">The value to be sent.</param>
            <param name="offset">The offset from where the value is read.</param>
            <feature>http://tizen.org/feature/network.bluetooth.le.gatt.server</feature>
            <exception cref="T:System.NotSupportedException">Thrown when the BT/BTLE is not supported.</exception>
            <exception cref="T:System.InvalidOperationException">Thrown when the BT/BTLE is not enabled
            or when the remote device is disconnected, or the send response procedure fails.</exception>
            <since_tizen> 3 </since_tizen>
        </member>
        <member name="M:Tizen.Network.Bluetooth.BluetoothGattServer.GetAttMtu(System.String)">
            <summary>
            Gets the value of the ATT MTU(Maximum Transmission Unit) for the connection.
            </summary>
            <param name="clientAddress">The remote device address.</param>
            <feature>http://tizen.org/feature/network.bluetooth.le.gatt.server</feature>
            <returns>The MTU value</returns>
            <exception cref="T:System.NotSupportedException">Thrown when the BT/BLE is not supported.</exception>
            <exception cref="T:System.InvalidOperationException">Thrown when the BT/BLE is not enabled
            or when the remote device is disconnected, or when other specific error occurs.</exception>
            <since_tizen> 9 </since_tizen>
        </member>
        <member name="E:Tizen.Network.Bluetooth.BluetoothGattServer.AttMtuChanged">
            <summary>
            The AttMtuChanged event is raised when the MTU value changed.
            </summary>
            <since_tizen> 9 </since_tizen>
        </member>
        <member name="M:Tizen.Network.Bluetooth.BluetoothGattServer.Finalize">
            <summary>
            Destroys the current object.
            </summary>
        </member>
        <member name="M:Tizen.Network.Bluetooth.BluetoothGattServer.Dispose">
            <summary>
            Destroys the current object.
            </summary>
            <feature>http://tizen.org/feature/network.bluetooth.le.gatt.server</feature>
            <since_tizen> 6 </since_tizen>
        </member>
        <member name="M:Tizen.Network.Bluetooth.BluetoothGattServer.Dispose(System.Boolean)">
            <summary>
            Releases all the resources currently used by this instance.
            </summary>
            <param name="disposing">true if the managed resources should be disposed, otherwise false.</param>
            <since_tizen> 6 </since_tizen>
        </member>
        <member name="T:Tizen.Network.Bluetooth.BluetoothGattClient">
            <summary>
            The Bluetooth GATT client.
            </summary>
            <since_tizen> 3 </since_tizen>
        </member>
        <member name="M:Tizen.Network.Bluetooth.BluetoothGattClient.CreateClient(System.String)">
            <summary>
            Creates the Bluetooth GATT client.
            </summary>
            <param name="remoteAddress">The remote device address.</param>
            <returns>The BluetoothGattClient instance.</returns>
            <feature>http://tizen.org/feature/network.bluetooth.le.gatt.client</feature>
            <exception cref="T:System.NotSupportedException">Thrown when the BT/BTLE is not supported.</exception>
            <exception cref="T:System.InvalidOperationException">Thrown when the create GATT client fails.</exception>
            <since_tizen> 6 </since_tizen>
        </member>
        <member name="E:Tizen.Network.Bluetooth.BluetoothGattClient.ConnectionStateChanged">
            <summary>
            The ConnectionStateChanged event is raised when the gatt connection state is changed.
            </summary>
            <since_tizen> 6 </since_tizen>
        </member>
        <member name="M:Tizen.Network.Bluetooth.BluetoothGattClient.ConnectAsync(System.Boolean)">
            <summary>
            Connects to the remote GATT server asynchronously.
            </summary>
            <param name="autoConnect">The flag for reconnecting when the connection is disconnceted.</param>
            <returns> A task indicating whether the method is done or not.</returns>
            <feature>http://tizen.org/feature/network.bluetooth.le.gatt.client</feature>
            <privilege>http://tizen.org/privilege/bluetooth</privilege>
            <exception cref="T:System.NotSupportedException">Thrown when the BT/BTLE is not supported.</exception>
            <exception cref="T:System.InvalidOperationException">Thrown when the create GATT client fails.</exception>
            <since_tizen> 6 </since_tizen>
        </member>
        <member name="M:Tizen.Network.Bluetooth.BluetoothGattClient.DisconnectAsync">
            <summary>
            Disconnects to the remote GATT server asynchronously.
            </summary>
            <returns> A task indicating whether the method is done or not.</returns>
            <feature>http://tizen.org/feature/network.bluetooth.le.gatt.client</feature>
            <privilege>http://tizen.org/privilege/bluetooth</privilege>
            <exception cref="T:System.NotSupportedException">Thrown when the BT/BTLE is not supported.</exception>
            <exception cref="T:System.InvalidOperationException">Thrown when the create GATT client fails.</exception>
            <since_tizen> 6 </since_tizen>
        </member>
        <member name="M:Tizen.Network.Bluetooth.BluetoothGattClient.DestroyClient">
            <summary>
            Destroy Bluetooth GATT client
            </summary>
            <since_tizen> 3 </since_tizen>
        </member>
        <member name="P:Tizen.Network.Bluetooth.BluetoothGattClient.RemoteAddress">
            <summary>
            The address of the remote device.
            </summary>
            <exception cref="T:System.InvalidOperationException">Thrown when the BT/BTLE is not enabled
            or when the remote device is disconnected.</exception>
            <since_tizen> 3 </since_tizen>
        </member>
        <member name="M:Tizen.Network.Bluetooth.BluetoothGattClient.GetService(System.String)">
            <summary>
            Gets the service with the given UUID that belongs to the remote device.
            </summary>
            <param name="uuid">The UUID for the service to get.</param>
            <returns>The service with the given UUID if it exists, null otherwise.</returns>
            <exception cref="T:System.InvalidOperationException">Thrown when the BT/BTLE is not enabled
            or when the remote device is disconnected, or when the get service fails.</exception>
            <since_tizen> 3 </since_tizen>
        </member>
        <member name="M:Tizen.Network.Bluetooth.BluetoothGattClient.GetServices">
            <summary>
            Gets list of services that belongs to the remote device.
            </summary>
            <returns>The list of services that belongs to the remote device.</returns>
            <exception cref="T:System.InvalidOperationException">Thrown when the BT/BTLE is not enabled
            or when the remote device is disconnected, or when the get service fails.</exception>
            <since_tizen> 3 </since_tizen>
        </member>
        <member name="M:Tizen.Network.Bluetooth.BluetoothGattClient.ReadValueAsync(Tizen.Network.Bluetooth.BluetoothGattCharacteristic)">
            <summary>
            Reads the value of a given characteristic from the remote device asynchronously.
            </summary>
            <param name="characteristic">The characteristic to be read.</param>
            <returns>true on success, false otherwise.</returns>
            <exception cref="T:System.InvalidOperationException">Thrown when the BT/BTLE is not enabled
            or when the remote device is disconnected, or when the read attribute value fails.</exception>
            <since_tizen> 3 </since_tizen>
        </member>
        <member name="M:Tizen.Network.Bluetooth.BluetoothGattClient.ReadValueAsync(Tizen.Network.Bluetooth.BluetoothGattDescriptor)">
            <summary>
            Reads the value of the given descriptor from the remote device asynchronously.
            </summary>
            <param name="descriptor">The descriptor to be read.</param>
            <returns>true on success, false otherwise.</returns>
            <exception cref="T:System.InvalidOperationException">Thrown when the BT/BTLE is not enabled
            or when the remote device is disconnected, or when the read attribute value fails.</exception>
            <since_tizen> 3 </since_tizen>
        </member>
        <member name="M:Tizen.Network.Bluetooth.BluetoothGattClient.WriteValueAsync(Tizen.Network.Bluetooth.BluetoothGattCharacteristic)">
            <summary>
            Writes the value of a given characteristic to the remote device asynchronously.
            </summary>
            <param name="characteristic">The characteristic to be written.</param>
            <returns>true on success, false otherwise.</returns>
            <exception cref="T:System.InvalidOperationException">Thrown when the BT/BTLE is not enabled
            or when the remote device is disconnected or when the write attribute value fails.</exception>
            <since_tizen> 3 </since_tizen>
        </member>
        <member name="M:Tizen.Network.Bluetooth.BluetoothGattClient.WriteValueAsync(Tizen.Network.Bluetooth.BluetoothGattDescriptor)">
            <summary>
            Writes the value of the given descriptor to the remote device asynchronously.
            </summary>
            <param name="descriptor">The descriptor to be written.</param>
            <returns>true on success, false otherwise.</returns>
            <exception cref="T:System.InvalidOperationException">Thrown when the BT/BTLE is not enabled
            or when the remote device is disconnected, or when the write attribute value fails.</exception>
            <since_tizen> 3 </since_tizen>
        </member>
        <member name="M:Tizen.Network.Bluetooth.BluetoothGattClient.GetAttMtu">
            <summary>
            Gets the value of the ATT MTU(Maximum Transmission Unit) for the connection.
            </summary>
            <returns>The MTU value</returns>
            <exception cref="T:System.NotSupportedException">Thrown when the BT/BLE is not supported.</exception>
            <exception cref="T:System.InvalidOperationException">Thrown when the BT/BLE is not enabled
            or when the remote device is disconnected, or when other specific error occurs.</exception>
            <since_tizen> 8 </since_tizen>
        </member>
        <member name="M:Tizen.Network.Bluetooth.BluetoothGattClient.SetAttMtu(System.Int32)">
            <summary>
            Sets the value of the ATT MTU(Maximum Transmission Unit) for the connection.
            </summary>
            <param name="mtu">The MTU value</param>
            <exception cref="T:System.NotSupportedException">Thrown when the BT/BLE is not supported.</exception>
            <exception cref="T:System.InvalidOperationException">Thrown when the BT/BLE is not enabled
            or when the remote device is disconnected, or when other specific error occurs.</exception>
            <since_tizen> 8 </since_tizen>
        </member>
        <member name="E:Tizen.Network.Bluetooth.BluetoothGattClient.AttMtuChanged">
            <summary>
            The AttMtuChanged event is raised when the MTU value changed.
            </summary>
            <since_tizen> 8 </since_tizen>
        </member>
        <member name="E:Tizen.Network.Bluetooth.BluetoothGattClient.ServiceChanged">
            <summary>
            The ServiceChanged event is raised when the service is changed from the remote device(GATT server).
            </summary>
            <feature>http://tizen.org/feature/network.bluetooth.le.gatt.client</feature>
            <since_tizen> 9 </since_tizen>
        </member>
        <member name="M:Tizen.Network.Bluetooth.BluetoothGattClient.Finalize">
            <summary>
            Destroys the current object.
            </summary>
        </member>
        <member name="M:Tizen.Network.Bluetooth.BluetoothGattClient.Dispose">
            <summary>
            Destroys the current object.
            </summary>
            <feature>http://tizen.org/feature/network.bluetooth.le.gatt.client</feature>
            <since_tizen> 6 </since_tizen>
        </member>
        <member name="M:Tizen.Network.Bluetooth.BluetoothGattClient.Dispose(System.Boolean)">
            <summary>
            Releases all the resources currently used by this instance.
            </summary>
            <param name="disposing">true if the managed resources should be disposed, otherwise false.</param>
            <since_tizen> 6 </since_tizen>
        </member>
        <member name="T:Tizen.Network.Bluetooth.BluetoothGattService">
            <summary>
            The Bluetooth GATT service.
            </summary>
            <since_tizen> 3 </since_tizen>
        </member>
        <member name="M:Tizen.Network.Bluetooth.BluetoothGattService.#ctor(System.String,Tizen.Network.Bluetooth.BluetoothGattServiceType)">
            <summary>
            The constructor.
            </summary>
            <param name="uuid">The UUID of the service.</param>
            <param name="type">The type of service.</param>
            <exception cref="T:System.InvalidOperationException">Thrown when the create GATT service procedure fails.</exception>
            <since_tizen> 3 </since_tizen>
        </member>
        <member name="P:Tizen.Network.Bluetooth.BluetoothGattService.Uuid">
            <summary>
            Specification name from the UUID.
            </summary>
            <since_tizen> 3 </since_tizen>
        </member>
        <member name="M:Tizen.Network.Bluetooth.BluetoothGattService.AddCharacteristic(Tizen.Network.Bluetooth.BluetoothGattCharacteristic)">
            <summary>
            Adds a characteristic to this service.
            </summary>
            <param name="characteristic">The characteristic to be added.</param>
            <returns>true on success, false otherwise.</returns>
            <exception cref="T:System.InvalidOperationException">Thrown when the add GATT characteristic procedure fails.</exception>
            <since_tizen> 3 </since_tizen>
        </member>
        <member name="M:Tizen.Network.Bluetooth.BluetoothGattService.GetCharacteristic(System.String)">
            <summary>
            Gets the characteristic with the given UUID that belongs to this service.
            </summary>
            <param name="uuid">The UUID for the characteristic to get.</param>
            <returns>The characteristic with a given UUID if it exists, null otherwise.</returns>
            <since_tizen> 3 </since_tizen>
        </member>
        <member name="M:Tizen.Network.Bluetooth.BluetoothGattService.GetCharacteristics">
            <summary>
            Gets list of the characteristic that belongs to this service.
            </summary>
            <returns>The list of the characteristic that belongs to this service.</returns>
            <since_tizen> 3 </since_tizen>
        </member>
        <member name="M:Tizen.Network.Bluetooth.BluetoothGattService.AddService(Tizen.Network.Bluetooth.BluetoothGattService)">
            <summary>
            Includes a service to this service.
            </summary>
            <param name="service">The service to be included.</param>
            <returns>true on success, false otherwise</returns>
            <exception cref="T:System.InvalidOperationException">Thrown when the add GATT service procedure fails.</exception>///
            <since_tizen> 3 </since_tizen>
        </member>
        <member name="M:Tizen.Network.Bluetooth.BluetoothGattService.GetIncludeService(System.String)">
            <summary>
            Gets the included service.
            </summary>
            <param name="uuid">The UUID for the service to get.</param>
            <returns>The service with a given UUID if it exists, null otherwise.</returns>
            <since_tizen> 3 </since_tizen>
        </member>
        <member name="M:Tizen.Network.Bluetooth.BluetoothGattService.GetIncludeServices">
            <summary>
            Gets the included service list of this service.
            </summary>
            <returns>The included service list of this service.</returns>
            <since_tizen> 3 </since_tizen>
        </member>
        <member name="M:Tizen.Network.Bluetooth.BluetoothGattService.GetGattServer">
            <summary>
            Gets the server instance which the specified service belongs to.
            </summary>
            <returns>The server instance which the specified service belongs to.</returns>
            <since_tizen> 3 </since_tizen>
        </member>
        <member name="M:Tizen.Network.Bluetooth.BluetoothGattService.GetGattClient">
            <summary>
            Gets the client instance which the specified service belongs to.
            </summary>
            <returns>The client instance which the specified service belongs to.</returns>
            <since_tizen> 3 </since_tizen>
        </member>
        <member name="T:Tizen.Network.Bluetooth.BluetoothGattCharacteristic">
            <summary>
            The Bluetooth GATT characteristic.
            </summary>
            <since_tizen> 3 </since_tizen>
        </member>
        <member name="M:Tizen.Network.Bluetooth.BluetoothGattCharacteristic.#ctor(System.String,Tizen.Network.Bluetooth.BluetoothGattPermission,Tizen.Network.Bluetooth.BluetoothGattProperty,System.Byte[])">
            <summary>
            The constructor.
            </summary>
            <param name="uuid">The UUID of the characterstic.</param>
            <param name="permissions">Permissions for the characterstic.</param>
            <param name="properties">Properties set for the characterstic.</param>
            <param name="value">The value associated with the characterstic.</param>
            <remarks>throws in case of internal error.</remarks>
            <exception cref="T:System.InvalidOperationException">Thrown when the create GATT characteristics procedure fails.</exception>
            <since_tizen> 3 </since_tizen>
        </member>
        <member name="E:Tizen.Network.Bluetooth.BluetoothGattCharacteristic.ValueChanged">
            <summary>
            The CharacteristicValueChanged event is raised when the server notifies for change in this characteristic value.
            </summary>
            <remarks>
            Adding the event handle on characteristic on the server side will not have any effect.
            </remarks>
            <since_tizen> 3 </since_tizen>
        </member>
        <member name="E:Tizen.Network.Bluetooth.BluetoothGattCharacteristic.NotificationStateChanged">
            <summary>
            The NotificationStateChanged event is called when the client enables or disables the Notification/Indication for particular characteristics.
            </summary>
            <remarks>
            BluetoothGattServer.RegisterGattService() should be called before adding/removing this EventHandler.
            Adding event handle on the characteristic on the client side will not have any effect.
            </remarks>
            <since_tizen> 3 </since_tizen>
        </member>
        <member name="P:Tizen.Network.Bluetooth.BluetoothGattCharacteristic.Properties">
            <summary>
            The property for this characteristic.
            </summary>
            <since_tizen> 3 </since_tizen>
        </member>
        <member name="P:Tizen.Network.Bluetooth.BluetoothGattCharacteristic.WriteType">
            <summary>
            The write type to be used for write operations.
            </summary>
            <since_tizen> 3 </since_tizen>
        </member>
        <member name="M:Tizen.Network.Bluetooth.BluetoothGattCharacteristic.AddDescriptor(Tizen.Network.Bluetooth.BluetoothGattDescriptor)">
            <summary>
            Adds a descriptor to this characteristic.
            </summary>
            <param name="descriptor">The descriptor to be added.</param>
            <returns>true on success, false otherwise.</returns>
            <exception cref="T:System.InvalidOperationException">Thrown when the add GATT descriptor procedure fails.</exception>
            <since_tizen> 3 </since_tizen>
        </member>
        <member name="M:Tizen.Network.Bluetooth.BluetoothGattCharacteristic.GetDescriptor(System.String)">
            <summary>
            Gets the descriptor with the given UUID that belongs to this characteristic.
            </summary>
            <param name="uuid">The UUID for the descriptor to get.</param>
            <returns>The descriptor with a given UUID if it exists, null otherwise.</returns>
            <since_tizen> 3 </since_tizen>
        </member>
        <member name="M:Tizen.Network.Bluetooth.BluetoothGattCharacteristic.GetDescriptors">
            <summary>
            Gets the list of descriptors that belongs to this characteristic.
            </summary>
            <returns>The list of descriptors that belongs to this characteristic.</returns>
            <since_tizen> 3 </since_tizen>
        </member>
        <member name="M:Tizen.Network.Bluetooth.BluetoothGattCharacteristic.GetService">
            <summary>
            Gets the service instance, which the specified characterstic belongs to.
            </summary>
            <returns>The characteristic instance, the specified characterstic belongs to.</returns>
            <since_tizen> 3 </since_tizen>
        </member>
        <member name="T:Tizen.Network.Bluetooth.BluetoothGattDescriptor">
            <summary>
            The Bluetooth GATT descriptor.
            </summary>
            <since_tizen> 3 </since_tizen>
        </member>
        <member name="M:Tizen.Network.Bluetooth.BluetoothGattDescriptor.#ctor(System.String,Tizen.Network.Bluetooth.BluetoothGattPermission,System.Byte[])">
            <summary>
            The constructor.
            </summary>
            <param name="uuid">The UUID of the descriptor.</param>
            <param name="permisions">Permissions for the descriptor.</param>
            <param name="value">The value associated with the descriptor.</param>
            <remarks>throws in case of internal error.</remarks>
            <exception cref="T:System.InvalidOperationException">Thrown when the create GATT descriptor procedure fails.</exception>
            <since_tizen> 3 </since_tizen>
        </member>
        <member name="M:Tizen.Network.Bluetooth.BluetoothGattDescriptor.GetCharacteristic">
            <summary>
            Gets the characteristic instance, which the specified descriptor belongs to.
            </summary>
            <returns>The characteristic instance, the specified descriptor belongs to.</returns>
            <since_tizen> 3 </since_tizen>
        </member>
        <member name="T:Tizen.Network.Bluetooth.BluetoothGattAttribute">
            <summary>
            The Bluetooth GATT attribute.
            </summary>
            <since_tizen> 3 </since_tizen>
        </member>
        <member name="M:Tizen.Network.Bluetooth.BluetoothGattAttribute.#ctor(System.String,Tizen.Network.Bluetooth.BluetoothGattPermission)">
            <summary>
            The constructor.
            </summary>
            <param name="uuid">The UUID of the GATT attribute.</param>
            <param name="permission">Permission for the GATT attribute.</param>
            <since_tizen> 3 </since_tizen>
        </member>
        <member name="E:Tizen.Network.Bluetooth.BluetoothGattAttribute.ReadRequested">
            <summary>
            This event is called when the client request to read the value of a characteristic or a descriptor.
            </summary>
            <remarks>
            BluetoothGattServer.RegisterGattService() should be called before adding/removing this EventHandler.
            </remarks>
            <exception cref="T:System.InvalidOperationException">Thrown when the set read value requested callback procedure fails.</exception>
            <since_tizen> 3 </since_tizen>
        </member>
        <member name="E:Tizen.Network.Bluetooth.BluetoothGattAttribute.WriteRequested">
            <summary>
            This event is called when a value of a characteristic or a descriptor has been changed by a client.
            </summary>
            <remarks>
            BluetoothGattServer.RegisterGattService() should be called before adding/removing this EventHandler.
            </remarks>
            <exception cref="T:System.InvalidOperationException">Thrown when the set write value requested callback procedure fails.</exception>
            <since_tizen> 3 </since_tizen>
        </member>
        <member name="P:Tizen.Network.Bluetooth.BluetoothGattAttribute.Uuid">
            <summary>
            The attribute's UUID.
            </summary>
            <since_tizen> 3 </since_tizen>
        </member>
        <member name="P:Tizen.Network.Bluetooth.BluetoothGattAttribute.Permissions">
            <summary>
            Permissions for this attribute.
            </summary>
            <since_tizen> 3 </since_tizen>
        </member>
        <member name="P:Tizen.Network.Bluetooth.BluetoothGattAttribute.Value">
            <summary>
            The value of this descriptor.
            </summary>
            <since_tizen> 3 </since_tizen>
        </member>
        <member name="M:Tizen.Network.Bluetooth.BluetoothGattAttribute.GetValue(System.Int32)">
            <summary>
            Returns a string value at the specified offset.
            </summary>
            <param name="offset">An offset in the attribute value buffer.</param>
            <returns>The string value at specified offset.</returns>
            <since_tizen> 3 </since_tizen>
        </member>
        <member name="M:Tizen.Network.Bluetooth.BluetoothGattAttribute.SetValue(System.String)">
            <summary>
            Sets the string value as a specified offset.
            </summary>
            <param name="value">value to set</param>
            <exception cref="T:System.InvalidOperationException">Throws exception if the value is null.</exception>
            <since_tizen> 3 </since_tizen>
        </member>
        <member name="M:Tizen.Network.Bluetooth.BluetoothGattAttribute.GetValue(Tizen.Network.Bluetooth.IntDataType,System.Int32)">
            <summary>
            Returns a value at specified offset as the int value of the specified type.
            </summary>
            <param name="type">The type of the int value.</param>
            <param name="offset">An offset in the attribute value buffer.</param>
            <returns>The int value at given offset.</returns>
            <exception cref="T:System.InvalidOperationException">Throws exception if (offset + size of int value) is greater than the length of the value buffer.</exception>
            <since_tizen> 3 </since_tizen>
        </member>
        <member name="M:Tizen.Network.Bluetooth.BluetoothGattAttribute.SetValue(Tizen.Network.Bluetooth.IntDataType,System.Int32,System.Int32)">
            <summary>
            Updates a value at the specified offset by the int value of the specified type.
            </summary>
            <param name="type">The type of the int value.</param>
            <param name="value">The value to set.</param>
            <param name="offset">An offset in the attribute value buffer.</param>
            <exception cref="T:System.InvalidOperationException">Throws exception if (offset + size of int value) is greater than the length of the value buffer.</exception>
            <since_tizen> 3 </since_tizen>
        </member>
        <member name="M:Tizen.Network.Bluetooth.BluetoothGattAttribute.GetValue(Tizen.Network.Bluetooth.FloatDataType,System.Int32)">
            <summary>
            Returns a value at the specified offset as the float value of the specified type.
            </summary>
            <param name="type">The type of the float value.</param>
            <param name="offset">An offset in the attribute value buffer.</param>
            <returns>The float value at given offset.</returns>
            <exception cref="T:System.InvalidOperationException">Throws exception if (offset + size of float value) is greater than the length of the value buffer.</exception>
            <since_tizen> 3 </since_tizen>
        </member>
        <member name="M:Tizen.Network.Bluetooth.BluetoothGattAttribute.SetValue(Tizen.Network.Bluetooth.FloatDataType,System.Int32,System.Int32,System.Int32)">
            <summary>
            Updates the value at the specified offset by the float value of the specified type.
            </summary>
            <param name="type">The type of the float value.</param>
            <param name="mantissa">The mantissa of the float value.</param>
            <param name="exponent">An exponent of the float value.</param>
            <param name="offset">An offset in the attribute value buffer.</param>
            <exception cref="T:System.InvalidOperationException">Throws exception if (offset + size of float value) is greater than the length of the value buffer.</exception>
            <since_tizen> 3 </since_tizen>
        </member>
        <member name="T:Tizen.Network.Bluetooth.BluetoothHid">
            <summary>
            A class which is used to handle the connection to Bluetooth HID like keyboards and mouse.
            </summary>
            <privilege> http://tizen.org/privilege/bluetooth </privilege>
            <since_tizen> 3 </since_tizen>
        </member>
        <member name="E:Tizen.Network.Bluetooth.BluetoothHid.HidConnectionStateChanged">
            <summary>
            The HidConnectionStateChanged event is called when the HID host connection state is changed.
            </summary>
            <since_tizen> 3 </since_tizen>
        </member>
        <member name="M:Tizen.Network.Bluetooth.BluetoothHid.Connect">
            <summary>
            Connects the remote device with the HID service.
            </summary>
            <remarks>
            The device must be bonded with the remote device by CreateBond().
            If connection request succeeds, the HidConnectionStateChanged event will be invoked.
            </remarks>
            <exception cref="T:System.InvalidOperationException">Thrown when the Bluetooth is not enabled
            or when the connection attempt to the remote device fails.</exception>
            <since_tizen> 3 </since_tizen>
        </member>
        <member name="M:Tizen.Network.Bluetooth.BluetoothHid.Disconnect">
            <summary>
            Disconnects the remote device with the HID service.
            </summary>
            <exception cref="T:System.InvalidOperationException">Thrown when the Bluetooth is not enabled
            or when the disconnection attempt to the remote device fails.</exception>
            <since_tizen> 3 </since_tizen>
        </member>
        <member name="T:Tizen.Network.Bluetooth.BluetoothHidDevice">
            <summary>
            A class which is used to provide the HID Device role.
            </summary>
            <remarks>
            In HID profile, there are two roles Host and Device.
            The Host(BluetoothHid) is a device that uses or requests the service of a HID.
            The Device(BluetoothHidDevice) is a device that provides the service of human data input/output to/from the host.
            </remarks>
            <since_tizen> 6 </since_tizen>
        </member>
        <member name="E:Tizen.Network.Bluetooth.BluetoothHidDevice.ConnectionStateChanged">
            <summary>
            The ConnectionStateChanged event is called when the HID device connection state is changed.
            </summary>
            <since_tizen> 6 </since_tizen>
        </member>
        <member name="M:Tizen.Network.Bluetooth.BluetoothHidDevice.ConnectAsync">
            <summary>
            Connects to the remote device asynchronously.
            </summary>
            <since_tizen> 6 </since_tizen>
            <returns> A task indicating whether the method is done or not.</returns>
            <feature>http://tizen.org/feature/network.bluetooth</feature>
            <feature>http://tizen.org/feature/network.bluetooth.hid_device</feature>
            <privilege>http://tizen.org/privilege/bluetooth</privilege>
            <exception cref="T:System.InvalidOperationException">Thrown when the method is failed with message.</exception>
        </member>
        <member name="M:Tizen.Network.Bluetooth.BluetoothHidDevice.DisconnectAsync">
            <summary>
            Disconnects to the remote device asynchronously.
            </summary>
            <since_tizen> 6 </since_tizen>
            <returns> A task indicating whether the method is done or not.</returns>
            <feature>http://tizen.org/feature/network.bluetooth</feature>
            <feature>http://tizen.org/feature/network.bluetooth.hid_device</feature>
            <privilege>http://tizen.org/privilege/bluetooth</privilege>
            <exception cref="T:System.InvalidOperationException">Thrown when the method is failed with message.</exception>
        </member>
        <member name="M:Tizen.Network.Bluetooth.BluetoothHidDevice.SendMouseEvent(Tizen.Network.Bluetooth.BluetoothHidMouseData)">
            <summary>
            Sends the mouse event data to the remote device.
            </summary>
            <since_tizen> 6 </since_tizen>
            <param name="mouseData">The mouse data to be passed to the remote device.</param>
            <feature>http://tizen.org/feature/network.bluetooth</feature>
            <feature>http://tizen.org/feature/network.bluetooth.hid_device</feature>
            <privilege>http://tizen.org/privilege/bluetooth</privilege>
            <exception cref="T:System.InvalidOperationException">Thrown when the method is failed with message.</exception>
        </member>
        <member name="M:Tizen.Network.Bluetooth.BluetoothHidDevice.SendKeyEvent(Tizen.Network.Bluetooth.BluetoothHidKeyData)">
            <summary>
            Sends the key event data to the remote device.
            </summary>
            <since_tizen> 6 </since_tizen>
            <param name="keyData">The key data to be passed to the remote device.</param>
            <feature>http://tizen.org/feature/network.bluetooth</feature>
            <feature>http://tizen.org/feature/network.bluetooth.hid_device</feature>
            <privilege>http://tizen.org/privilege/bluetooth</privilege>
            <exception cref="T:System.InvalidOperationException">Thrown when the method is failed with message.</exception>
        </member>
        <member name="E:Tizen.Network.Bluetooth.BluetoothHidDevice.DataReceived">
            <summary>
            The DataReceived event is called when the device receives data from the HID Host.
            </summary>
            <since_tizen> 6 </since_tizen>
            <feature>http://tizen.org/feature/network.bluetooth</feature>
            <feature>http://tizen.org/feature/network.bluetooth.hid_device</feature>
            <exception cref="T:System.InvalidOperationException">Thrown when the method is failed with message.</exception>
        </member>
        <member name="M:Tizen.Network.Bluetooth.BluetoothHidDevice.ReplyToReport(Tizen.Network.Bluetooth.BluetoothHidHeaderType,Tizen.Network.Bluetooth.BluetoothHidParamType,System.Byte[])">
            <summary>
            Replies to reports from the HID Host.
            </summary>
            <since_tizen> 6 </since_tizen>
            <param name="headerType">The header type to be there in response.</param>
            <param name="paramType">The Parameter type to be there in response.</param>
            <param name="data">Data to be present in data payload of response.</param>
            <feature>http://tizen.org/feature/network.bluetooth</feature>
            <feature>http://tizen.org/feature/network.bluetooth.hid_device</feature>
            <privilege>http://tizen.org/privilege/bluetooth</privilege>
            <exception cref="T:System.InvalidOperationException">Thrown when the method is failed with message.</exception>
        </member>
        <member name="T:Tizen.Network.Bluetooth.BluetoothLeAdvertiser">
            <summary>
            This is the BluetoothLeAdvertiser class. It handles the LE advertising operation amd callback.
            </summary>
            <since_tizen> 3 </since_tizen>
        </member>
        <member name="E:Tizen.Network.Bluetooth.BluetoothLeAdvertiser.AdvertisingStateChanged">
            <summary>
            This event is called when the LE advertising state changes.
            </summary>
            <since_tizen> 3 </since_tizen>
        </member>
        <member name="M:Tizen.Network.Bluetooth.BluetoothLeAdvertiser.StartAdvertising(Tizen.Network.Bluetooth.BluetoothLeAdvertiseData)">
            <summary>
            Starts advertising using the advertise data object.
            </summary>
            <remarks>
            The Bluetooth must be enabled.
            </remarks>
            <param name="advertiseData">The advertiser object carrying information of the advertising.</param>
            <exception cref="T:System.NotSupportedException">Thrown when the Bluetooth LE is not supported.</exception>
            <exception cref="T:System.InvalidOperationException">Thrown when the Bluetooth LE is not enabled.</exception>
            <since_tizen> 3 </since_tizen>
        </member>
        <member name="M:Tizen.Network.Bluetooth.BluetoothLeAdvertiser.StopAdvertising(Tizen.Network.Bluetooth.BluetoothLeAdvertiseData)">
            <summary>
            Stops the advertising.
            </summary>
            <remarks>
            The Bluetooth must be enabled.
            </remarks>
            <param name="advertiseData">The advertiser object carrying information of the advertising.</param>
            <exception cref="T:System.NotSupportedException">Thrown when the Bluetooth LE is not supported.</exception>
            <exception cref="T:System.InvalidOperationException">Thrown when the Bluetooth LE is not enabled.</exception>
            <since_tizen> 3 </since_tizen>
        </member>
        <member name="T:Tizen.Network.Bluetooth.BluetoothLeDevice">
            <summary>
            This is the BluetoothLeDevice class.
            It handles the LE device operations like getting data from the scan result.
            </summary>
            <since_tizen> 3 </since_tizen>
        </member>
        <member name="E:Tizen.Network.Bluetooth.BluetoothLeDevice.GattConnectionStateChanged">
            <summary>
            This event is called when the GATT client connects/disconnects with the server.
            </summary>
            <since_tizen> 3 </since_tizen>
        </member>
        <member name="P:Tizen.Network.Bluetooth.BluetoothLeDevice.RemoteAddress">
            <summary>
            The remote address.
            </summary>
            <since_tizen> 3 </since_tizen>
        </member>
        <member name="P:Tizen.Network.Bluetooth.BluetoothLeDevice.AddressType">
            <summary>
            The type of the address.
            </summary>
            <since_tizen> 3 </since_tizen>
        </member>
        <member name="P:Tizen.Network.Bluetooth.BluetoothLeDevice.Rssi">
            <summary>
            The rssi value.
            </summary>
            <since_tizen> 3 </since_tizen>
        </member>
        <member name="P:Tizen.Network.Bluetooth.BluetoothLeDevice.AdvertsingDataInformation">
            <summary>
            The advertsing data information.
            </summary>
            <since_tizen> 3 </since_tizen>
        </member>
        <member name="P:Tizen.Network.Bluetooth.BluetoothLeDevice.ScanDataInformation">
            <summary>
            The scan data information.
            </summary>
            <since_tizen> 3 </since_tizen>
        </member>
        <member name="P:Tizen.Network.Bluetooth.BluetoothLeDevice.PacketType">
            <summary>
            The type of the packet.
            </summary>
            <since_tizen> 3 </since_tizen>
        </member>
        <member name="P:Tizen.Network.Bluetooth.BluetoothLeDevice.ServiceUuid">
            <summary>
            Gets the service UUIDs list from the LE scan result.
            </summary>
            <value> Gets the list of the string service UUIDs.</value>
            <remarks>
            The Bluetooth must be enabled.
            </remarks>
            <exception cref="T:System.NotSupportedException">Thrown when the Bluetooth LE is not supported.</exception>
            <exception cref="T:System.InvalidOperationException">Thrown when the Bluetooth LE is not enabled.</exception>
            <since_tizen> 3 </since_tizen>
        </member>
        <member name="M:Tizen.Network.Bluetooth.BluetoothLeDevice.GetServiceUuid(Tizen.Network.Bluetooth.BluetoothLePacketType)">
            <summary>
            Gets the service UUIDs list from the LE scan result.
            </summary>
            <value> Gets the list of the string service UUIDs.</value>
            <remarks>The Bluetooth must be enabled.</remarks>
            <param name="packetType"> The enumeration for BLE packet type.</param>
            <returns>The service UUID value</returns>
            <feature>http://tizen.org/feature/network.bluetooth.le</feature>
            <exception cref="T:System.NotSupportedException">Thrown when the Bluetooth LE is not supported.</exception>
            <exception cref="T:System.InvalidOperationException">Thrown when the Bluetooth LE is not enabled.</exception>
            <since_tizen> 6 </since_tizen>
        </member>
        <member name="P:Tizen.Network.Bluetooth.BluetoothLeDevice.DeviceName">
            <summary>
            Gets the device name from the LE scan result.
            </summary>
            <value> Gets the device name.</value>
            <remarks>
            The Bluetooth must be enabled.
            </remarks>
            <exception cref="T:System.NotSupportedException">Thrown when the Bluetooth LE is not supported.</exception>
            <exception cref="T:System.InvalidOperationException">Thrown when the Bluetooth LE is not enabled.</exception>
            <since_tizen> 3 </since_tizen>
        </member>
        <member name="M:Tizen.Network.Bluetooth.BluetoothLeDevice.GetDeviceName(Tizen.Network.Bluetooth.BluetoothLePacketType)">
            <summary>
            Gets the device name from the LE scan result.
            </summary>
            <value> Gets the device name.</value>
            <remarks>The Bluetooth must be enabled.</remarks>
            <param name="packetType"> The enumeration for BLE packet type.</param>
            <returns>The device name value</returns>
            <feature>http://tizen.org/feature/network.bluetooth.le</feature>
            <exception cref="T:System.NotSupportedException">Thrown when the Bluetooth LE is not supported.</exception>
            <exception cref="T:System.InvalidOperationException">Thrown when the Bluetooth LE is not enabled.</exception>
            <since_tizen> 6 </since_tizen>
        </member>
        <member name="P:Tizen.Network.Bluetooth.BluetoothLeDevice.TxPowerLevel">
            <summary>
            Gets the transmission power level from the LE scan result.
            </summary>
            <value> Gets the transmission power level in dB.</value>
            <remarks>
            The Bluetooth must be enabled.
            </remarks>
            <exception cref="T:System.NotSupportedException">Thrown when the Bluetooth LE is not supported.</exception>
            <exception cref="T:System.InvalidOperationException">Thrown when the Bluetooth LE is not enabled.</exception>
            <since_tizen> 3 </since_tizen>
        </member>
        <member name="M:Tizen.Network.Bluetooth.BluetoothLeDevice.GetTxPowerLevel(Tizen.Network.Bluetooth.BluetoothLePacketType)">
            <summary>
            Gets the transmission power level from the LE scan result.
            </summary>
            <value> Gets the transmission power level in dB.</value>
            <remarks>The Bluetooth must be enabled.</remarks>
            <param name="packetType"> The enumeration for BLE packet type.</param>
            <returns>The tx power level value</returns>
            <feature>http://tizen.org/feature/network.bluetooth.le</feature>
            <exception cref="T:System.NotSupportedException">Thrown when the Bluetooth LE is not supported.</exception>
            <exception cref="T:System.InvalidOperationException">Thrown when the Bluetooth LE is not enabled.</exception>
            <since_tizen> 6 </since_tizen>
        </member>
        <member name="P:Tizen.Network.Bluetooth.BluetoothLeDevice.ServiceSolictationUuid">
            <summary>
            Gets the service solicitation UUID list from the scan result.
            </summary>
            <value> Gets the list of the service solicitation UUIDs.</value>
            <remarks>
            The Bluetooth must be enabled.
            </remarks>
            <exception cref="T:System.NotSupportedException">Thrown when the Bluetooth LE is not supported.</exception>
            <exception cref="T:System.InvalidOperationException">Thrown when the Bluetooth LE is not enabled.</exception>
            <since_tizen> 3 </since_tizen>
        </member>
        <member name="M:Tizen.Network.Bluetooth.BluetoothLeDevice.GetServiceSolicitationUuid(Tizen.Network.Bluetooth.BluetoothLePacketType)">
            <summary>
            Gets the service solicitation UUID list from the scan result.
            </summary>
            <value> Gets the list of the service solicitation UUIDs.</value>
            <remarks>The Bluetooth must be enabled.</remarks>
            <param name="packetType"> The enumeration for BLE packet type.</param>
            <returns>The service solicitation UUID value</returns>
            <feature>http://tizen.org/feature/network.bluetooth.le</feature>
            <exception cref="T:System.NotSupportedException">Thrown when the Bluetooth LE is not supported.</exception>
            <exception cref="T:System.InvalidOperationException">Thrown when the Bluetooth LE is not enabled.</exception>
            <since_tizen> 6 </since_tizen>
        </member>
        <member name="P:Tizen.Network.Bluetooth.BluetoothLeDevice.Appearance">
            <summary>
            Gets the manufacturer data from the scan result.
            </summary>
            <value> Gets the appearance value.</value>
            <remarks>
            The Bluetooth must be enabled.
            </remarks>
            <exception cref="T:System.NotSupportedException">Thrown when the Bluetooth LE is not supported.</exception>
            <exception cref="T:System.InvalidOperationException">Thrown when the Bluetooth LE is not enabled.</exception>
            <since_tizen> 3 </since_tizen>
        </member>
        <member name="M:Tizen.Network.Bluetooth.BluetoothLeDevice.GetAppearance(Tizen.Network.Bluetooth.BluetoothLePacketType)">
            <summary>
            Gets the manufacturer data from the scan result.
            </summary>
            <value> Gets the appearance value.</value>
            <remarks>The Bluetooth must be enabled.</remarks>
            <param name="packetType"> The enumeration for BLE packet type.</param>
            <returns>The appearance value</returns>
            <feature>http://tizen.org/feature/network.bluetooth.le</feature>
            <exception cref="T:System.NotSupportedException">Thrown when the Bluetooth LE is not supported.</exception>
            <exception cref="T:System.InvalidOperationException">Thrown when the Bluetooth LE is not enabled.</exception>
            <since_tizen> 6 </since_tizen>
        </member>
        <member name="P:Tizen.Network.Bluetooth.BluetoothLeDevice.ManufacturerData">
            <summary>
            Gets the manufacturer data from the scan result.
            </summary>
            <value> Gets the manufacturer data containing the manucturer data and ID information.</value>
            <remarks>
            The Bluetooth must be enabled.
            </remarks>
            <exception cref="T:System.NotSupportedException">Thrown when the Bluetooth LE is not supported.</exception>
            <exception cref="T:System.InvalidOperationException">Thrown when the Bluetooth LE is not enabled.</exception>/// 
            <since_tizen> 3 </since_tizen>
        </member>
        <member name="M:Tizen.Network.Bluetooth.BluetoothLeDevice.GetManufacturerData(Tizen.Network.Bluetooth.BluetoothLePacketType)">
            <summary>
            Gets the manufacturer data from the scan result.
            </summary>
            <value> Gets the manufacturer data containing the manucturer data and ID information.</value>
            <remarks>The Bluetooth must be enabled.</remarks>
            <param name="packetType"> The enumeration for BLE packet type.</param>
            <returns>The manufacturer data object</returns>
            <feature>http://tizen.org/feature/network.bluetooth.le</feature>
            <exception cref="T:System.NotSupportedException">Thrown when the Bluetooth LE is not supported.</exception>
            <exception cref="T:System.InvalidOperationException">Thrown when the Bluetooth LE is not enabled.</exception>/// 
            <since_tizen> 6 </since_tizen>
        </member>
        <member name="M:Tizen.Network.Bluetooth.BluetoothLeDevice.GetServiceDataList">
            <summary>
            Gets the service data list from the scan result.
            </summary>
            <remarks>
            The Bluetooth must be enabled.
            </remarks>
            <returns> Returns the service data list.</returns>
            <exception cref="T:System.NotSupportedException">Thrown when the Bluetooth LE is not supported.</exception>
            <exception cref="T:System.InvalidOperationException">Thrown when the Bluetooth LE is not enabled.</exception>
            <since_tizen> 3 </since_tizen>
        </member>
        <member name="M:Tizen.Network.Bluetooth.BluetoothLeDevice.GetServiceDataList(Tizen.Network.Bluetooth.BluetoothLePacketType)">
            <summary>
            Gets the service data list from the scan result.
            </summary>
            <remarks>The Bluetooth must be enabled.</remarks>
            <param name="packetType"> The packet type.</param>
            <returns> Returns the service data list.</returns>
            <feature>http://tizen.org/feature/network.bluetooth.le</feature>
            <exception cref="T:System.NotSupportedException">Thrown when the Bluetooth LE is not supported.</exception>
            <exception cref="T:System.InvalidOperationException">Thrown when the Bluetooth LE is not enabled.</exception>
            <since_tizen> 6 </since_tizen>
        </member>
        <member name="M:Tizen.Network.Bluetooth.BluetoothLeDevice.GattConnect(System.Boolean)">
            <summary>
            Creates a GATT connection with the remote device.
            </summary>
            <remarks>
            The Bluetooth must be enabled.
            </remarks>
            <param name="autoConnect"> The auto connect flag.</param>
            <returns>client instance</returns>
            <exception cref="T:System.NotSupportedException">Thrown when the Bluetooth LE is not supported.</exception>
            <exception cref="T:System.InvalidOperationException">Thrown when the Bluetooth LE is not enabled
            or when the gatt connection attempt to remote device fails.</exception>
            <since_tizen> 3 </since_tizen>
        </member>
        <member name="M:Tizen.Network.Bluetooth.BluetoothLeDevice.GattDisconnect">
            <summary>
            Disconnects a GATT connection with the remote device.
            </summary>
            <remarks>
            The Bluetooth must be enabled.
            </remarks>
            <exception cref="T:System.NotSupportedException">Thrown when the Bluetooth LE is not supported.</exception>
            <exception cref="T:System.InvalidOperationException">Thrown when the Bluetooth LE is not enabled
            or when the GATT disconnection attempt to remote device fails.</exception>
            <since_tizen> 3 </since_tizen>
        </member>
        <member name="T:Tizen.Network.Bluetooth.BluetoothLeAdvertiseData">
            <summary>
            Bluetooth LE advertise data. Handles the data advertising.
            </summary>
            <since_tizen> 3 </since_tizen>
        </member>
        <member name="M:Tizen.Network.Bluetooth.BluetoothLeAdvertiseData.#ctor">
            <summary>
            The default constructor initializes an object of the BluetoothLeAdvertiseData.
            </summary>
            <exception cref="T:System.NotSupportedException">Thrown when the Bluetooth LE is not supported.</exception>
            <exception cref="T:System.InvalidOperationException">Thrown when the Bluetooth LE is not enabled
            or when create advertiser fails.</exception>
            <since_tizen> 3 </since_tizen>
        </member>
        <member name="M:Tizen.Network.Bluetooth.BluetoothLeAdvertiseData.Finalize">
            <summary>
            BluetoothLeAdvertiseData destructor.
            </summary>
        </member>
        <member name="P:Tizen.Network.Bluetooth.BluetoothLeAdvertiseData.AdvertisingMode">
            <summary>
            The advertising mode to control the advertising power and latency.
            </summary>
            <remarks>
            The Bluetooth must be enabled.
            </remarks>
            <exception cref="T:System.NotSupportedException">Thrown when the Bluetooth LE is not supported.</exception>
            <exception cref="T:System.InvalidOperationException">Thrown when the Bluetooth LE is not enabled
            or when the set advertising mode fails.</exception>
            <since_tizen> 3 </since_tizen>
        </member>
        <member name="P:Tizen.Network.Bluetooth.BluetoothLeAdvertiseData.AdvertisingConnectable">
            <summary>
            The advertising connectable type.
            </summary>
            <remarks>
            The Bluetooth must be enabled.
            </remarks>
            <exception cref="T:System.NotSupportedException">Thrown when the Bluetooth LE is not supported.</exception>
            <exception cref="T:System.InvalidOperationException">Thrown when the Bluetooth LE is not enabled
            or when the set advertising connectable mode fails.</exception>
            <since_tizen> 3 </since_tizen>
        </member>
        <member name="M:Tizen.Network.Bluetooth.BluetoothLeAdvertiseData.Dispose">
            <summary>
            Dispose
            </summary>
            <since_tizen> 3 </since_tizen>
        </member>
        <member name="P:Tizen.Network.Bluetooth.BluetoothLeAdvertiseData.PacketType">
            <summary>
            The type of the packet.
            </summary>
            <since_tizen> 3 </since_tizen>
        </member>
        <member name="P:Tizen.Network.Bluetooth.BluetoothLeAdvertiseData.Appearance">
            <summary>
            Sets the external appearance of this device to the advertise or the scan response data.
            Please refer to the adopted Bluetooth specification for the appearance.
            </summary>
            <remarks>
            The Bluetooth must be enabled.
            </remarks>
            <exception cref="T:System.NotSupportedException">Thrown when the Bluetooth LE is not supported.</exception>
            <exception cref="T:System.InvalidOperationException">Thrown when the Bluetooth LE is not enabled
            or when the set appearance fails.</exception>
            <since_tizen> 3 </since_tizen>
        </member>
        <member name="P:Tizen.Network.Bluetooth.BluetoothLeAdvertiseData.IncludeDeviceName">
            <summary>
            Sets whether the device name has to be included in the advertise or the scan response data.
            The maximum advertised or responded data size is 31 bytes including the data type and the system wide data.
            </summary>
            <remarks>
            The Bluetooth must be enabled.
            </remarks>
            <exception cref="T:System.NotSupportedException">Thrown when the Bluetooth LE is not supported.</exception>
            <exception cref="T:System.InvalidOperationException">Thrown when the Bluetooth LE is not enabled
            or when the set advertising device name fails.</exception>
            <since_tizen> 3 </since_tizen>
        </member>
        <member name="P:Tizen.Network.Bluetooth.BluetoothLeAdvertiseData.IncludeTxPowerLevel">
            <summary>
            Sets whether the transmission power level should be included in the advertise or the scan response data.
            The maximum advertised or responded data size is 31 bytes including the data type and the system wide data.
            </summary>
            <remarks>
            The Bluetooth must be enabled.
            </remarks>
            <exception cref="T:System.NotSupportedException">Thrown when the Bluetooth LE is not supported.</exception>
            <exception cref="T:System.InvalidOperationException">Thrown when the Bluetooth LE is not enabled
            or when the set advertising TC power level fails.</exception>
            <since_tizen> 3 </since_tizen>
        </member>
        <member name="M:Tizen.Network.Bluetooth.BluetoothLeAdvertiseData.AddAdvertisingServiceUuid(Tizen.Network.Bluetooth.BluetoothLePacketType,System.String)">
            <summary>
            Adds a service UUID to the advertise or the scan response data.
            The maximum advertised or responded data size is 31 bytes
            including the data type and the system wide data.
            </summary>
            <remarks>
            The Bluetooth must be enabled.
            </remarks>
            <param name="packetType">The packet type.</param>
            <param name="serviceUuid"> The service UUID to add to advertise data.</param>
            <exception cref="T:System.NotSupportedException">Thrown when the Bluetooth LE is not supported.</exception>
            <exception cref="T:System.InvalidOperationException">Thrown when the Bluetooth LE is not enabled
            or when the add advertising service UUID procedure fails.</exception>
            <since_tizen> 3 </since_tizen>
        </member>
        <member name="M:Tizen.Network.Bluetooth.BluetoothLeAdvertiseData.AddAdvertisingServiceSolicitationUuid(Tizen.Network.Bluetooth.BluetoothLePacketType,System.String)">
            <summary>
            Adds a service solicitation UUID to advertise or scan the response data.
            The maximum advertised or responded data size is 31 bytes
            including the data type and the system wide data.
            </summary>
            <remarks>
            The Bluetooth must be enabled.
            </remarks>
            <param name="packetType">The packet type.</param>
            <param name="serviceSolicitationUuid"> The service solicitation UUID to add to advertise data.</param>
            <exception cref="T:System.NotSupportedException">Thrown when the Bluetooth LE is not supported.</exception>
            <exception cref="T:System.InvalidOperationException">Thrown when the Bluetooth LE is not enabled
            or when the add advertising service solicitation UUID procedure fails.</exception>
            <since_tizen> 3 </since_tizen>
        </member>
        <member name="M:Tizen.Network.Bluetooth.BluetoothLeAdvertiseData.AddAdvertisingServiceData(Tizen.Network.Bluetooth.BluetoothLePacketType,Tizen.Network.Bluetooth.BluetoothServiceData)">
            <summary>
            Adds a service data to the advertise or the scan response data.
            The maximum advertised or responded data size is 31 bytes
            including data type and system wide data.
            </summary>
            <remarks>
            The Bluetooth must be enabled.
            </remarks>
            <param name="packetType">The packet type.</param>
            <param name="data"> The service data to be added to advertising.</param>
            <exception cref="T:System.NotSupportedException">Thrown when the Bluetooth LE is not supported.</exception>
            <exception cref="T:System.InvalidOperationException">Thrown when the Bluetooth LE is not enabled
            or when the add advertising data procedure fails.</exception>
            <since_tizen> 3 </since_tizen>
        </member>
        <member name="M:Tizen.Network.Bluetooth.BluetoothLeAdvertiseData.AddAdvertisingManufacturerData(Tizen.Network.Bluetooth.BluetoothLePacketType,Tizen.Network.Bluetooth.ManufacturerData)">
            <summary>
            Adds the manufacturer specific data to the advertise or the scan response data.
            Please refer to the adopted Bluetooth specification for the the appearance.
            </summary>
            <remarks>
            The Bluetooth must be enabled.
            </remarks>
            <param name="packetType">The packet type.</param>
            <param name="manufacturerData"> The manufacturer specific data.</param>
            <exception cref="T:System.NotSupportedException">Thrown when the Bluetooth LE is not supported.</exception>
            <exception cref="T:System.InvalidOperationException">Thrown when the Bluetooth LE is not enabled
            or when the add advertising manufacturer data procedure fails.</exception>
            <since_tizen> 3 </since_tizen>
        </member>
        <member name="M:Tizen.Network.Bluetooth.BluetoothLeAdvertiseData.ClearAdvertisingData(Tizen.Network.Bluetooth.BluetoothLePacketType)">
            <summary>
            Clears all data to be advertised or responded to the scan request from the LE scanning device.
            </summary>
            <remarks>
            The Bluetooth must be enabled.
            </remarks>
            <param name="packetType">The packet type to be cleared.</param>
            <exception cref="T:System.NotSupportedException">Thrown when the Bluetooth LE is not supported.</exception>
            <exception cref="T:System.InvalidOperationException">Thrown when the Bluetooth LE is not enabled
            or when the clear advertising data procedure fails.</exception>
        </member>
        <member name="T:Tizen.Network.Bluetooth.BluetoothOppServer">
            <summary>
            A class which is used to handle the connection and send and receive the object over Opp profile.
            </summary>
            <privilege> http://tizen.org/privilege/bluetooth </privilege>
            <since_tizen> 4 </since_tizen>
        </member>
        <member name="M:Tizen.Network.Bluetooth.BluetoothOppServer.#ctor">
            <summary>
            The constructor
            </summary>
            <since_tizen> 4 </since_tizen>
        </member>
        <member name="E:Tizen.Network.Bluetooth.BluetoothOppServer.ConnectionRequested">
            <summary>
            (event) ConnectionRequested is called when OPP client requests for connection.
            </summary>
            <since_tizen> 4 </since_tizen>
        </member>
        <member name="E:Tizen.Network.Bluetooth.BluetoothOppServer.TransferProgress">
            <summary>
            (event) TransferProgress is called when the file transfer state is changed.
            </summary>
            <since_tizen> 4 </since_tizen>
        </member>
        <member name="E:Tizen.Network.Bluetooth.BluetoothOppServer.TransferFinished">
            <summary>
            (event) TransferFinished is called when the file tranfser is completed.
            </summary>
            <since_tizen> 4 </since_tizen>
        </member>
        <member name="M:Tizen.Network.Bluetooth.BluetoothOppServer.StartServer(System.String)">
            <summary>
            Register the Opp Server with the Opp service.
            </summary>
            <remarks>
            The device must be bonded with remote device by CreateBond().
            If connection request is received from OPP Client, ConnectionRequested event will be invoked.
            </remarks>
            <returns>The BluetoothOppServer instance.</returns>
            <param name="FilePath"> Path to store the files.</param>
            <feature>http://tizen.org/feature/network.bluetooth.opp</feature>
            <exception cref="T:System.NotSupportedException">Thrown when the required feature is not Supported.</exception>
            <exception cref="T:System.NotSupportedException">Thrown when the BT/BTLE is not Supported.</exception>
            <exception cref="T:System.InvalidOperationException">Thrown when the BT/BTLE is not Enabled or Other Bluetooth Errors.</exception>
            <since_tizen> 4 </since_tizen>
        </member>
        <member name="M:Tizen.Network.Bluetooth.BluetoothOppServer.StopServer">
            <summary>
            Stops the Opp Server.
            </summary>
            <feature>http://tizen.org/feature/network.bluetooth.opp</feature>
            <exception cref="T:System.NotSupportedException">Thrown when the required feature is not Supported.</exception>
            <exception cref="T:System.NotSupportedException">Thrown when the BT/BTLE is not Supported.</exception>
            <exception cref="T:System.InvalidOperationException">Thrown when the BT/BTLE is not Enabled or Other Bluetooth Errors.</exception>
            <since_tizen> 4 </since_tizen>
        </member>
        <member name="M:Tizen.Network.Bluetooth.BluetoothOppServer.AcceptPush(System.String)">
            <summary>
            Accept File Push request.
            </summary>
            <returns>The id of transfer.</returns>
            <param name="FileName"> File name to accept.</param>
            <feature>http://tizen.org/feature/network.bluetooth.opp</feature>
            <exception cref="T:System.NotSupportedException">Thrown when the required feature is not Supported.</exception>
            <exception cref="T:System.NotSupportedException">Thrown when the BT/BTLE is not Supported.</exception>
            <exception cref="T:System.InvalidOperationException">Thrown when the BT/BTLE is not Enabled or Other Bluetooth Errors.</exception>
            <since_tizen> 4 </since_tizen>
        </member>
        <member name="M:Tizen.Network.Bluetooth.BluetoothOppServer.RejectPush">
            <summary>
            Reject File Push request.
            </summary>
            <feature>http://tizen.org/feature/network.bluetooth.opp</feature>
            <exception cref="T:System.NotSupportedException">Thrown when the required feature is not Supported.</exception>
            <exception cref="T:System.NotSupportedException">Thrown when the BT/BTLE is not Supported.</exception>
            <exception cref="T:System.InvalidOperationException">Thrown when the BT/BTLE is not Enabled or Other Bluetooth Errors.</exception>
            <since_tizen> 4 </since_tizen>
        </member>
        <member name="M:Tizen.Network.Bluetooth.BluetoothOppServer.CancelTransfer(System.Int32)">
            <summary>
            Cancel the ongoing transfer session.
            </summary>
            <param name="TransferId"> tranfer ID.</param>
            <feature>http://tizen.org/feature/network.bluetooth.opp</feature>
            <exception cref="T:System.NotSupportedException">Thrown when the required feature is not Supported.</exception>
            <exception cref="T:System.NotSupportedException">Thrown when the BT/BTLE is not Supported.</exception>
            <exception cref="T:System.InvalidOperationException">Thrown when the BT/BTLE is not Enabled or Other Bluetooth Errors.</exception>
            <since_tizen> 4 </since_tizen>
        </member>
        <member name="M:Tizen.Network.Bluetooth.BluetoothOppServer.SetDestinationPath(System.String)">
            <summary>
            Cancel the ongoing transfer session.
            </summary>
            <param name="FilePath"> Path to store the files.</param>
            <feature>http://tizen.org/feature/network.bluetooth.opp</feature>
            <exception cref="T:System.NotSupportedException">Thrown when the required feature is not Supported.</exception>
            <exception cref="T:System.NotSupportedException">Thrown when the BT/BTLE is not Supported.</exception>
            <exception cref="T:System.InvalidOperationException">Thrown when the BT/BTLE is not Enabled or Other Bluetooth Errors.</exception>
            <since_tizen> 4 </since_tizen>
        </member>
        <member name="T:Tizen.Network.Bluetooth.BluetoothOppClient">
            <summary>
            A class which is used to handle the connection and send and receive the object over Opp profile.
            </summary>
            <privilege> http://tizen.org/privilege/bluetooth </privilege>
            <since_tizen> 4 </since_tizen>
        </member>
        <member name="E:Tizen.Network.Bluetooth.BluetoothOppClient.PushResponded">
            <summary>
            (event) PushResponded is called when remote OPP Server responds to a File push request.
            </summary>
            <since_tizen> 4 </since_tizen>
        </member>
        <member name="E:Tizen.Network.Bluetooth.BluetoothOppClient.PushProgress">
            <summary>
            (event) PushProgress is called when the file transfer state is changed.
            </summary>
            <since_tizen> 4 </since_tizen>
        </member>
        <member name="E:Tizen.Network.Bluetooth.BluetoothOppClient.PushFinished">
            <summary>
            (event) PushFinished is called when the file tranfser is completed.
            </summary>
            <since_tizen> 4 </since_tizen>
        </member>
        <member name="M:Tizen.Network.Bluetooth.BluetoothOppClient.AddFile(System.String)">
            <summary>
            Add File path to be pushed.
            </summary>
            <param name="FilePath"> file for sending.</param>
            <feature>http://tizen.org/feature/network.bluetooth.opp</feature>
            <exception cref="T:System.NotSupportedException">Thrown when the required feature is not Supported.</exception>
            <exception cref="T:System.NotSupportedException">Thrown when the BT/BTLE is not Supported.</exception>
            <exception cref="T:System.InvalidOperationException">Thrown when the BT/BTLE is not Enabled or Other Bluetooth Errors.</exception>
            <since_tizen> 4 </since_tizen>
        </member>
        <member name="M:Tizen.Network.Bluetooth.BluetoothOppClient.ClearFiles">
            <summary>
            Clears all the File paths.
            </summary>
            <feature>http://tizen.org/feature/network.bluetooth.opp</feature>
            <exception cref="T:System.NotSupportedException">Thrown when the required feature is not Supported.</exception>
            <exception cref="T:System.NotSupportedException">Thrown when the BT/BTLE is not Supported.</exception>
            <exception cref="T:System.InvalidOperationException">Thrown when the BT/BTLE is not Enabled or Other Bluetooth Errors.</exception>
            <since_tizen> 4 </since_tizen>
        </member>
        <member name="M:Tizen.Network.Bluetooth.BluetoothOppClient.CancelPush">
            <summary>
            Cancels the ongoing push session.
            </summary>
            <feature>http://tizen.org/feature/network.bluetooth.opp</feature>
            <exception cref="T:System.NotSupportedException">Thrown when the required feature is not Supported.</exception>
            <exception cref="T:System.NotSupportedException">Thrown when the BT/BTLE is not Supported.</exception>
            <exception cref="T:System.InvalidOperationException">Thrown when the BT/BTLE is not Enabled or Other Bluetooth Errors.</exception>
            <since_tizen> 4 </since_tizen>
        </member>
        <member name="M:Tizen.Network.Bluetooth.BluetoothOppClient.PushFile(System.String)">
            <summary>
            Pushes the file set through AddFile.
            </summary>
            <param name="Destination"> destination device address.</param>
            <feature>http://tizen.org/feature/network.bluetooth.opp</feature>
            <exception cref="T:System.NotSupportedException">Thrown when the required feature is not Supported.</exception>
            <exception cref="T:System.NotSupportedException">Thrown when the BT/BTLE is not Supported.</exception>
            <exception cref="T:System.InvalidOperationException">Thrown when the BT/BTLE is not Enabled or Other Bluetooth Errors.</exception>
            <since_tizen> 4 </since_tizen>
        </member>
        <member name="T:Tizen.Network.Bluetooth.BluetoothProfile">
            <summary>
            This generic class represents all Bluetooth profiles.<br/>
            Any common properties/functions can be added in this class in future.
            </summary>
            <privilege> http://tizen.org/privilege/bluetooth </privilege>
            <since_tizen> 3 </since_tizen>
        </member>
        <member name="T:Tizen.Network.Bluetooth.BluetoothServerSocket">
            <summary>
            The BluetoothSocket provides functions for managing connections to other devices and exchanging data.
            </summary>
            <since_tizen> 3 </since_tizen>
        </member>
        <member name="E:Tizen.Network.Bluetooth.BluetoothServerSocket.AcceptStateChanged">
            <summary>
            The AcceptStateChanged event is raised when the socket connection state is changed.
            </summary>
            <exception cref="T:System.InvalidOperationException">Thrown when the Bluetooth is not enabled
            or when the register accpet state changed callback fails.</exception>
            <since_tizen> 3 </since_tizen>
        </member>
        <member name="M:Tizen.Network.Bluetooth.BluetoothServerSocket.Listen">
            <summary>
            Starts listening on the passed RFCOMM socket and accepts connection requests.
            </summary>
            <remarks>
            The socket must be created with CreateServerSocket(). This API invokes the ConnectionStateChanged event.
            </remarks>
            <exception cref="T:System.InvalidOperationException">Thrown when the Bluetooth is not enabled
            or when the listen on socket procedure fails.</exception>
            <since_tizen> 3 </since_tizen>
        </member>
        <member name="M:Tizen.Network.Bluetooth.BluetoothServerSocket.ListenWithoutAccept">
            <summary>
            Starts listening on the passed RFCOMM socket without accepting connection requests.
            </summary>
            <since_tizen> 6 </since_tizen>
            <feature>http://tizen.org/feature/network.bluetooth</feature>
            <privilege>http://tizen.org/privilege/bluetooth.admin</privilege>
            <exception cref="T:System.NotSupportedException">Thrown when the Bluetooth is not supported.</exception>
            <exception cref="T:System.InvalidOperationException">Thrown when the method is failed with message.</exception>
        </member>
        <member name="M:Tizen.Network.Bluetooth.BluetoothServerSocket.AcceptAsync">
            <summary>
            Accepts a connection request asynchronously.
            </summary>
            <since_tizen> 6 </since_tizen>
            <returns> A task indicating whether the method is done or not.</returns>
            <feature>http://tizen.org/feature/network.bluetooth</feature>
            <privilege>http://tizen.org/privilege/bluetooth.admin</privilege>
            <exception cref="T:System.NotSupportedException">Thrown when the Bluetooth is not supported.</exception>
            <exception cref="T:System.InvalidOperationException">Thrown when the method is failed with message.</exception>
        </member>
        <member name="M:Tizen.Network.Bluetooth.BluetoothServerSocket.Reject">
            <summary>
            Rejects a connection request.
            </summary>
            <since_tizen> 6 </since_tizen>
            <feature>http://tizen.org/feature/network.bluetooth</feature>
            <privilege>http://tizen.org/privilege/bluetooth.admin</privilege>
            <exception cref="T:System.NotSupportedException">Thrown when the Bluetooth is not supported.</exception>
            <exception cref="T:System.InvalidOperationException">Thrown when the method is failed with message.</exception>
        </member>
        <member name="E:Tizen.Network.Bluetooth.BluetoothServerSocket.ConnectionRequested">
            <summary>
            Registers a callback function that will be invoked when a RFCOMM connection is requested.
            </summary>
            <since_tizen> 6 </since_tizen>
            <feature>http://tizen.org/feature/network.bluetooth</feature>
        </member>
        <member name="M:Tizen.Network.Bluetooth.BluetoothServerSocket.Finalize">
            <summary>
            BluetoothServerSocket destructor.
            </summary>
        </member>
        <member name="M:Tizen.Network.Bluetooth.BluetoothServerSocket.Dispose">
            <summary>
            Dispose
            </summary>
            <since_tizen> 3 </since_tizen>
        </member>
        <member name="T:Tizen.Network.Bluetooth.IBluetoothServerSocket">
            <summary>
            The IBluetoothServerSocket interface handles the server socket operations.
            </summary>
            <since_tizen> 3 </since_tizen>
        </member>
        <member name="E:Tizen.Network.Bluetooth.IBluetoothServerSocket.DataReceived">
            <summary>
            Event handler to receive data over bluetooth socket.
            This event occurs when the socket server receives data from the client.
            </summary>
            <since_tizen> 3 </since_tizen>
        </member>
        <member name="E:Tizen.Network.Bluetooth.IBluetoothServerSocket.ConnectionStateChanged">
            <summary>
            Event handler method to receive bluetooth socket connection state changed events.
            This event occurs when the connection state between two devices is changed.
            </summary>
            <since_tizen> 3 </since_tizen>
        </member>
        <member name="M:Tizen.Network.Bluetooth.IBluetoothServerSocket.SendData(System.String)">
            <summary>
            Method to send data over bluetooth socket
            </summary>
            <returns>The number of bytes written (zero indicates nothing was written).</returns>
            <remarks>
            The connection must be established.
            </remarks>
            <param name="data">The data to be sent.</param>
            <since_tizen> 3 </since_tizen>
        </member>
        <member name="M:Tizen.Network.Bluetooth.IBluetoothServerSocket.SendData(System.Byte[])">
            <summary>
            Method to send data over bluetooth socket
            </summary>
            <returns>The number of bytes written (zero indicates nothing was written).</returns>
            <remarks>
            The connection must be established.
            </remarks>
            <param name="data">The data to be sent.</param>
            <since_tizen> 7 </since_tizen>
        </member>
        <member name="T:Tizen.Network.Bluetooth.IBluetoothClientSocket">
            <summary>
            The IBluetoothClientSocket interface handles the client socket operations.
            </summary>
            <since_tizen> 3 </since_tizen>
        </member>
        <member name="M:Tizen.Network.Bluetooth.IBluetoothClientSocket.Connect">
            <summary>
            Connect client socket to server socket on remote device.
            </summary>
            <since_tizen> 3 </since_tizen>
        </member>
        <member name="M:Tizen.Network.Bluetooth.IBluetoothClientSocket.Disconnect">
            <summary>
            Disconnect client socket from server socket.
            </summary>
            <since_tizen> 3 </since_tizen>
        </member>
        <member name="E:Tizen.Network.Bluetooth.BluetoothSocket.DataReceived">
            <summary>
            This event occurs when the socket server receives data from the client.
            </summary>
            <exception cref="T:System.InvalidOperationException">Thrown when the Bluetooth is not enabled
            or when the register data received callback fails.</exception>
        </member>
        <member name="E:Tizen.Network.Bluetooth.BluetoothSocket.ConnectionStateChanged">
            <summary>
            This event occurs when the connection state between two devices is changed.
            </summary>
            <exception cref="T:System.InvalidOperationException">Thrown when the Bluetooth is not enabled
            or when the register connection changed callback fails.</exception>
        </member>
        <member name="M:Tizen.Network.Bluetooth.BluetoothSocket.Tizen#Network#Bluetooth#IBluetoothClientSocket#Connect">
            <summary>
            Connects to a specific RFCOMM based service on a remote Bluetooth device UUID.
            </summary>
            <remarks>
            The bluetooth must be enabled, discoverable with StartDiscovery(), and bonded with the remote device using CreateBond(). The ConnectionStateChanged event is raised once this API is called.
            </remarks>
            <exception cref="T:System.InvalidOperationException">Thrown when the Bluetooth is not enabled
            or when the connect socket attempt to remote device fails, or when the service UUID is not supported by the remote device.</exception>
        </member>
        <member name="M:Tizen.Network.Bluetooth.BluetoothSocket.Tizen#Network#Bluetooth#IBluetoothClientSocket#Disconnect">
            <summary>
            Disconnects the RFCOMM connection with the given file descriptor of the conneted socket.
            </summary>
            <remarks>
            The connection must be established.
            </remarks>
            <exception cref="T:System.InvalidOperationException">Thrown when the Bluetooth is not enabled
            or when the socket disconnect to remote device fails.</exception>
        </member>
        <member name="M:Tizen.Network.Bluetooth.BluetoothSocket.SendData(System.String)">
            <summary>
            Sends data to the connected device.
            </summary>
            <returns>The number of bytes written (zero indicates nothing was written).</returns>
            <remarks>
            The connection must be established.
            </remarks>
            <param name="data">The data to be sent.</param>
            <exception cref="T:System.InvalidOperationException">Thrown when the Bluetooth is not enabled
            or when the remote device is not connected, or the send data procedure fails.</exception>
        </member>
        <member name="M:Tizen.Network.Bluetooth.BluetoothSocket.SendData(System.Byte[])">
            <summary>
            Sends data to the connected device.
            </summary>
            <returns>The number of bytes written (zero indicates nothing was written).</returns>
            <remarks>
            The connection must be established.
            </remarks>
            <param name="data">The data to be sent.</param>
            <exception cref="T:System.InvalidOperationException">Thrown when the Bluetooth is not enabled
            or when the remote device is not connected, or the send data procedure fails.</exception>
        </member>
        <member name="T:Tizen.Network.Bluetooth.BluetoothClassStruct">
            <summary>
            The structure of the device class type and service.
            </summary>
        </member>
        <member name="F:Tizen.Network.Bluetooth.BluetoothClassStruct.MajorDeviceClassType">
            <summary>
            The type of the major device class.
            </summary>
        </member>
        <member name="F:Tizen.Network.Bluetooth.BluetoothClassStruct.MinorDeviceClassType">
            <summary>
            The type of the minor device class.
            </summary>
        </member>
        <member name="F:Tizen.Network.Bluetooth.BluetoothClassStruct.MajorServiceClassMask">
            <summary>
            The major service class mask.
            </summary>
        </member>
        <member name="T:Tizen.Network.Bluetooth.BluetoothDeviceStruct">
            <summary>
            This structure contains the information of the Bluetooth device.
            </summary>
        </member>
        <member name="F:Tizen.Network.Bluetooth.BluetoothDeviceStruct.Address">
            <summary>
            The address of the device.
            </summary>
        </member>
        <member name="F:Tizen.Network.Bluetooth.BluetoothDeviceStruct.Name">
            <summary>
            The name of the device.
            </summary>
        </member>
        <member name="F:Tizen.Network.Bluetooth.BluetoothDeviceStruct.Class">
            <summary>
            The class of the device.
            </summary>
        </member>
        <member name="F:Tizen.Network.Bluetooth.BluetoothDeviceStruct.ServiceUuidList">
            <summary>
            The service UUID list of the device.
            </summary>
        </member>
        <member name="F:Tizen.Network.Bluetooth.BluetoothDeviceStruct.ServiceCount">
            <summary>
            The service count of the device.
            </summary>
        </member>
        <member name="F:Tizen.Network.Bluetooth.BluetoothDeviceStruct.IsPaired">
            <summary>
            The paired state of the device.
            </summary>
        </member>
        <member name="F:Tizen.Network.Bluetooth.BluetoothDeviceStruct.IsConnected">
            <summary>
            The connection state of the device.
            </summary>
        </member>
        <member name="F:Tizen.Network.Bluetooth.BluetoothDeviceStruct.IsAuthorized">
            <summary>
            The authorization state of the device.
            </summary>
        </member>
        <member name="F:Tizen.Network.Bluetooth.BluetoothDeviceStruct.ManufacturerDataLength">
            <summary>
            The length of the manufacturer the data.
            </summary>
        </member>
        <member name="F:Tizen.Network.Bluetooth.BluetoothDeviceStruct.ManufacturerData">
            <summary>
            The manufacturer data.
            </summary>
        </member>
        <member name="F:Tizen.Network.Bluetooth.BluetoothLeServiceDataStruct.ServiceUuid">
            <summary>
            The Bluetooth LE service UUID.
            </summary>
        </member>
        <member name="F:Tizen.Network.Bluetooth.BluetoothLeServiceDataStruct.ServiceData">
            <summary>
            The Bluetooth LE service data.
            </summary>
        </member>
    </members>
</doc>
