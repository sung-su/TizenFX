<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Tizen.Uix.Stt</name>
    </assembly>
    <members>
        <member name="T:Interop">
            <summary>
            Partial interop class.
            </summary>
            <summary>
            Partial interop class.
            </summary>
        </member>
        <member name="T:Interop.Libraries">
            <summary>
            Partial libraries class.
            </summary>
        </member>
        <member name="T:Interop.Stt">
            <summary>
            Stt interop class.
            </summary>
        </member>
        <member name="T:Tizen.Uix.Stt.DefaultLanguageChangedEventArgs">
            <summary>
            This class holds information about the DefaultLanguageChanged event.
            </summary>
            <since_tizen> 3 </since_tizen>
        </member>
        <member name="P:Tizen.Uix.Stt.DefaultLanguageChangedEventArgs.PreviousLanguage">
            <summary>
            The previous language.
            </summary>
            <since_tizen> 3 </since_tizen>
        </member>
        <member name="P:Tizen.Uix.Stt.DefaultLanguageChangedEventArgs.CurrentLanguage">
            <summary>
            The current language.
            </summary>
            <since_tizen> 3 </since_tizen>
        </member>
        <member name="T:Tizen.Uix.Stt.EngineChangedEventArgs">
            <summary>
            This class holds information related to the EngineChanged event.
            </summary>
            <since_tizen> 3 </since_tizen>
        </member>
        <member name="P:Tizen.Uix.Stt.EngineChangedEventArgs.EngineId">
            <summary>
            The Engine ID.
            </summary>
            <since_tizen> 3 </since_tizen>
        </member>
        <member name="P:Tizen.Uix.Stt.EngineChangedEventArgs.Language">
            <summary>
            The default language.
            </summary>
            <since_tizen> 3 </since_tizen>
        </member>
        <member name="P:Tizen.Uix.Stt.EngineChangedEventArgs.NeedCredential">
            <summary>
            The necessity of the credential.
            </summary>
            <since_tizen> 3 </since_tizen>
        </member>
        <member name="P:Tizen.Uix.Stt.EngineChangedEventArgs.SupportSilence">
            <summary>
            Whether silence detection is supported or not.
            </summary>
            <since_tizen> 3 </since_tizen>
        </member>
        <member name="T:Tizen.Uix.Stt.ErrorOccurredEventArgs">
            <summary>
            This class holds information related to the STT ErrorOccurred event.
            </summary>
            <since_tizen> 4 </since_tizen>
        </member>
        <member name="P:Tizen.Uix.Stt.ErrorOccurredEventArgs.ErrorValue">
            <summary>
            The error value.
            </summary>
            <since_tizen> 4 </since_tizen>
        </member>
        <member name="P:Tizen.Uix.Stt.ErrorOccurredEventArgs.ErrorMessage">
            <summary>
            Gets the current error message.
            </summary>
            <since_tizen> 4 </since_tizen>
            <returns>
            String error message.
            </returns>
        </member>
        <member name="T:Tizen.Uix.Stt.RecognitionResultEventArgs">
            <summary>
            The recognition result from the engine.
            </summary>
            <since_tizen> 3 </since_tizen>
        </member>
        <member name="P:Tizen.Uix.Stt.RecognitionResultEventArgs.Result">
            <summary>
            The result event.
            </summary>
            <since_tizen> 3 </since_tizen>
        </member>
        <member name="P:Tizen.Uix.Stt.RecognitionResultEventArgs.Data">
            <summary>
            The result text.
            </summary>
            <since_tizen> 3 </since_tizen>
        </member>
        <member name="P:Tizen.Uix.Stt.RecognitionResultEventArgs.DataCount">
            <summary>
            Returns the result text count.
            </summary>
            <since_tizen> 3 </since_tizen>
        </member>
        <member name="P:Tizen.Uix.Stt.RecognitionResultEventArgs.Message">
            <summary>
            The engine message.
            </summary>
            <since_tizen> 3 </since_tizen>
        </member>
        <member name="T:Tizen.Uix.Stt.ResultTime">
            <summary>
            This class represents the result of recognition result from the engine.
            </summary>
            <since_tizen> 3 </since_tizen>
        </member>
        <member name="P:Tizen.Uix.Stt.ResultTime.Index">
            <summary>
            The result index.
            </summary>
            <since_tizen> 3 </since_tizen>
        </member>
        <member name="P:Tizen.Uix.Stt.ResultTime.TokenEvent">
            <summary>
            The token event.
            </summary>
            <since_tizen> 3 </since_tizen>
        </member>
        <member name="P:Tizen.Uix.Stt.ResultTime.Text">
            <summary>
            The result text.
            </summary>
            <since_tizen> 3 </since_tizen>
        </member>
        <member name="P:Tizen.Uix.Stt.ResultTime.StartTime">
            <summary>
            The start time of result text.
            </summary>
            <since_tizen> 3 </since_tizen>
        </member>
        <member name="P:Tizen.Uix.Stt.ResultTime.EndTime">
            <summary>
            The end time of result text.
            </summary>
            <since_tizen> 3 </since_tizen>
        </member>
        <member name="T:Tizen.Uix.Stt.StateChangedEventArgs">
            <summary>
            This class holds information related to the STT StateChanged event.
            </summary>
            <since_tizen> 3 </since_tizen>
        </member>
        <member name="P:Tizen.Uix.Stt.StateChangedEventArgs.Previous">
            <summary>
            The previous state.
            </summary>
            <since_tizen> 3 </since_tizen>
        </member>
        <member name="P:Tizen.Uix.Stt.StateChangedEventArgs.Current">
            <summary>
            The current state.
            </summary>
            <since_tizen> 3 </since_tizen>
        </member>
        <member name="T:Tizen.Uix.Stt.ResultEvent">
            <summary>
            The token event.
            </summary>
            <since_tizen> 3 </since_tizen>
        </member>
        <member name="F:Tizen.Uix.Stt.ResultEvent.FinalResult">
            <summary>
            Event when the recognition for full or last result is ready.
            </summary>
            <since_tizen> 3 </since_tizen>
        </member>
        <member name="F:Tizen.Uix.Stt.ResultEvent.PartialResult">
            <summary>
            Event when the recognition for partial result is ready.
            </summary>
            <since_tizen> 3 </since_tizen>
        </member>
        <member name="F:Tizen.Uix.Stt.ResultEvent.Error">
            <summary>
            Event when the recognition has failed.
            </summary>
            <since_tizen> 3 </since_tizen>
        </member>
        <member name="T:Tizen.Uix.Stt.ResultMessage">
            <summary>
            Enumeration for representing the result message.
            </summary>
            <since_tizen> 3 </since_tizen>
        </member>
        <member name="F:Tizen.Uix.Stt.ResultMessage.None">
            <summary>
            No Error.
            </summary>
            <since_tizen> 3 </since_tizen>
        </member>
        <member name="F:Tizen.Uix.Stt.ResultMessage.TooSoon">
            <summary>
            Recognition failed  because the speech started too soon.
            </summary>
            <since_tizen> 3 </since_tizen>
        </member>
        <member name="F:Tizen.Uix.Stt.ResultMessage.TooShort">
            <summary>
            Recognition failed  because the speech is too short.
            </summary>
            <since_tizen> 3 </since_tizen>
        </member>
        <member name="F:Tizen.Uix.Stt.ResultMessage.TooLong">
            <summary>
            Recognition failed  because the speech is too long.
            </summary>
            <since_tizen> 3 </since_tizen>
        </member>
        <member name="F:Tizen.Uix.Stt.ResultMessage.TooQuiet">
            <summary>
            Recognition failed  because the speech is too quiet to listen.
            </summary>
            <since_tizen> 3 </since_tizen>
        </member>
        <member name="F:Tizen.Uix.Stt.ResultMessage.TooLoud">
            <summary>
            Recognition failed  because the speech is too loud to listen.
            </summary>
            <since_tizen> 3 </since_tizen>
        </member>
        <member name="F:Tizen.Uix.Stt.ResultMessage.TooFast">
            <summary>
            Recognition failed  because the speech is too fast to listen.
            </summary>
            <since_tizen> 3 </since_tizen>
        </member>
        <member name="T:Tizen.Uix.Stt.TimeEvent">
            <summary>
            Enumeration for the token types.
            </summary>
            <since_tizen> 3 </since_tizen>
        </member>
        <member name="F:Tizen.Uix.Stt.TimeEvent.Beginning">
            <summary>
            Event when the token is beginning type.
            </summary>
            <since_tizen> 3 </since_tizen>
        </member>
        <member name="F:Tizen.Uix.Stt.TimeEvent.Middle">
            <summary>
            Event when the token is middle type.
            </summary>
            <since_tizen> 3 </since_tizen>
        </member>
        <member name="F:Tizen.Uix.Stt.TimeEvent.End">
            <summary>
            Event when the token is end type.
            </summary>
            <since_tizen> 3 </since_tizen>
        </member>
        <member name="T:Tizen.Uix.Stt.Error">
            <summary>
            Enumeration for the error values that can occur.
            </summary>
            <since_tizen> 3 </since_tizen>
        </member>
        <member name="F:Tizen.Uix.Stt.Error.None">
            <summary>
            Successful, No error.
            </summary>
            <since_tizen> 3 </since_tizen>
        </member>
        <member name="F:Tizen.Uix.Stt.Error.OutOfMemory">
            <summary>
            Out of Memory.
            </summary>
            <since_tizen> 3 </since_tizen>.
        </member>
        <member name="F:Tizen.Uix.Stt.Error.IoError">
            <summary>
            I/O error.
            </summary>
            <since_tizen> 3 </since_tizen>.
        </member>
        <member name="F:Tizen.Uix.Stt.Error.InvalidParameter">
            <summary>
            Invalid parameter.
            </summary>
            <since_tizen> 3 </since_tizen>
        </member>
        <member name="F:Tizen.Uix.Stt.Error.TimedOut">
            <summary>
            No answer from the STT service.
            </summary>
            <since_tizen> 3 </since_tizen>
        </member>
        <member name="F:Tizen.Uix.Stt.Error.RecorderBusy">
            <summary>
            Device or resource busy.
            </summary>
            <since_tizen> 3 </since_tizen>
        </member>
        <member name="F:Tizen.Uix.Stt.Error.OutOfNetwork">
            <summary>
            Network is down.
            </summary>
            <since_tizen> 3 </since_tizen>
        </member>
        <member name="F:Tizen.Uix.Stt.Error.PermissionDenied">
            <summary>
            Permission denied.
            </summary>
            <since_tizen> 3 </since_tizen>
        </member>
        <member name="F:Tizen.Uix.Stt.Error.NotSupported">
            <summary>
            STT NOT supported.
            </summary>
            <since_tizen> 3 </since_tizen>
        </member>
        <member name="F:Tizen.Uix.Stt.Error.InvalidState">
            <summary>
            Invalid state.
            </summary>
            <since_tizen> 3 </since_tizen>
        </member>
        <member name="F:Tizen.Uix.Stt.Error.InvalidLanguage">
            <summary>
            Invalid language.
            </summary>
            <since_tizen> 3 </since_tizen>
        </member>
        <member name="F:Tizen.Uix.Stt.Error.EngineNotFound">
            <summary>
            No available engine.
            </summary>
            <since_tizen> 3 </since_tizen>
        </member>
        <member name="F:Tizen.Uix.Stt.Error.OperationFailed">
            <summary>
            Operation failed.
            </summary>
            <since_tizen> 3 </since_tizen>
        </member>
        <member name="F:Tizen.Uix.Stt.Error.NotSupportedFeature">
            <summary>
            Not supported feature of current engine.
            </summary>
            <since_tizen> 3 </since_tizen>
        </member>
        <member name="F:Tizen.Uix.Stt.Error.RecordingTimedOut">
            <summary>
            Recording timed out.
            </summary>
            <since_tizen> 3 </since_tizen>
        </member>
        <member name="F:Tizen.Uix.Stt.Error.NoSpeech">
            <summary>
            No speech while recording.
            </summary>
            <since_tizen> 3 </since_tizen>
        </member>
        <member name="F:Tizen.Uix.Stt.Error.InProgressToReady">
            <summary>
            Progress to ready is not finished.
            </summary>
            <since_tizen> 3 </since_tizen>
        </member>
        <member name="F:Tizen.Uix.Stt.Error.InProgressToRecording">
            <summary>
            Progress to recording is not finished.
            </summary>
            <since_tizen> 3 </since_tizen>
        </member>
        <member name="F:Tizen.Uix.Stt.Error.InProgressToProcessing">
            <summary>
            Progress to processing is not finished.
            </summary>
            <since_tizen> 3 </since_tizen>
        </member>
        <member name="F:Tizen.Uix.Stt.Error.ServiceReset">
            <summary>
            Service reset.
            </summary>
            <since_tizen> 3 </since_tizen>
        </member>
        <member name="T:Tizen.Uix.Stt.RecognitionType">
            <summary>
            Enumeration for the recognition types.
            </summary>
            <since_tizen> 3 </since_tizen>
        </member>
        <member name="F:Tizen.Uix.Stt.RecognitionType.Free">
            <summary>
            Free form dictation.
            </summary>
            <since_tizen> 3 </since_tizen>
        </member>
        <member name="F:Tizen.Uix.Stt.RecognitionType.Partial">
            <summary>
            Continuous free dictation.
            </summary>
            <since_tizen> 3 </since_tizen>
        </member>
        <member name="F:Tizen.Uix.Stt.RecognitionType.Search">
            <summary>
            Search.
            </summary>
            <since_tizen> 3 </since_tizen>
        </member>
        <member name="F:Tizen.Uix.Stt.RecognitionType.WebSearch">
            <summary>
            Web search.
            </summary>
            <since_tizen> 3 </since_tizen>
        </member>
        <member name="F:Tizen.Uix.Stt.RecognitionType.Map">
            <summary>
            Map.
            </summary>
            <since_tizen> 3 </since_tizen>
        </member>
        <member name="T:Tizen.Uix.Stt.State">
            <summary>
            Enumeration for the state types.
            </summary>
            <since_tizen> 3 </since_tizen>
        </member>
        <member name="F:Tizen.Uix.Stt.State.Created">
            <summary>
            Created state.
            </summary>
            <since_tizen> 3 </since_tizen>
        </member>
        <member name="F:Tizen.Uix.Stt.State.Ready">
            <summary>
            Ready state.
            </summary>
            <since_tizen> 3 </since_tizen>
        </member>
        <member name="F:Tizen.Uix.Stt.State.Recording">
            <summary>
            Recording state.
            </summary>
            <since_tizen> 3 </since_tizen>
        </member>
        <member name="F:Tizen.Uix.Stt.State.Processing">
            <summary>
            Processing state.
            </summary>
            <since_tizen> 3 </since_tizen>
        </member>
        <member name="F:Tizen.Uix.Stt.State.Unavailable">
            <summary>
            Unavailable.
            </summary>
            <since_tizen> 3 </since_tizen>
        </member>
        <member name="T:Tizen.Uix.Stt.SilenceDetection">
            <summary>
            Enumeration for the silence detection types.
            </summary>
            <since_tizen> 3 </since_tizen>
        </member>
        <member name="F:Tizen.Uix.Stt.SilenceDetection.False">
            <summary>
            Silence detection type - False.
            </summary>
            <since_tizen> 3 </since_tizen>
        </member>
        <member name="F:Tizen.Uix.Stt.SilenceDetection.True">
            <summary>
            Silence detection type - True.
            </summary>
            <since_tizen> 3 </since_tizen>
        </member>
        <member name="F:Tizen.Uix.Stt.SilenceDetection.Auto">
            <summary>
            Silence detection type - Auto.
            </summary>
            <since_tizen> 3 </since_tizen>
        </member>
        <member name="T:Tizen.Uix.Stt.SttClient">
            <summary>
            A main function of Speech-To-Text (below STT) API recognizes sound data recorded by users.
            After choosing a language, the applications will start recording and recognizing.
            After recording, the applications will receive the recognized result.
            The STT has a client-server for the service of multi-applications.
            The STT service always works in the background as a server. If the service is not working, client library will invoke it and the client will communicate with it.
            The service has engines and a recorder, so that the client does not have the recorder itself. Only the client request commands to the STT service for using STT.
            </summary>
            <since_tizen> 3 </since_tizen>
        </member>
        <member name="M:Tizen.Uix.Stt.SttClient.#ctor">
            <summary>
            Constructor to create a STT instance.
            </summary>
            <since_tizen> 3 </since_tizen>
            <privilege>
            http://tizen.org/privilege/recorder
            </privilege>
            <feature>
            http://tizen.org/feature/speech.recognition
            http://tizen.org/feature/microphone
            </feature>
            <exception cref="T:System.InvalidOperationException">This exception can be due to operation failed.</exception>
            <exception cref="T:System.OutOfMemoryException">This exception can be due to out of memory.</exception>
            <exception cref="T:System.NotSupportedException">This exception can be due to STT not supported.</exception>
            <exception cref="T:System.UnauthorizedAccessException">This exception can be due to permission denied.</exception>
        </member>
        <member name="M:Tizen.Uix.Stt.SttClient.Finalize">
            <summary>
            Destructor to destroy a STT instance.
            </summary>
        </member>
        <member name="E:Tizen.Uix.Stt.SttClient.RecognitionResult">
            <summary>
            Event to be invoked when the recognition is done.
            </summary>
            <since_tizen> 3 </since_tizen>
        </member>
        <member name="E:Tizen.Uix.Stt.SttClient.StateChanged">
            <summary>
            Event to be invoked when the STT state changes.
            </summary>
            <since_tizen> 3 </since_tizen>
        </member>
        <member name="E:Tizen.Uix.Stt.SttClient.ErrorOccurred">
            <summary>
            Event to be invoked when an error occurs.
            </summary>
            <since_tizen> 4 </since_tizen>
        </member>
        <member name="E:Tizen.Uix.Stt.SttClient.DefaultLanguageChanged">
            <summary>
            Event to be invoked when the default language changes.
            </summary>
            <since_tizen> 3 </since_tizen>
        </member>
        <member name="E:Tizen.Uix.Stt.SttClient.EngineChanged">
            <summary>
            Event to be invoked to detect the engine change.
            </summary>
            <since_tizen> 3 </since_tizen>
        </member>
        <member name="P:Tizen.Uix.Stt.SttClient.DefaultLanguage">
            <summary>
            Gets the default language set by the user.
            The language is specified as an ISO 3166 alpha-2 two letter country-code followed by ISO 639-1 for the two-letter language code.
            For example, "ko_KR" for Korean, "en_US" for American English.
            </summary>
            <since_tizen> 3 </since_tizen>
            <value>
            Default language in STT.
            </value>
            <privilege>
            http://tizen.org/privilege/recorder
            </privilege>
            <returns>
            Default Language string value.
            </returns>
        </member>
        <member name="P:Tizen.Uix.Stt.SttClient.RecordingVolume">
            <summary>
            Gets the microphone volume during recording.
            </summary>
            <since_tizen> 3 </since_tizen>
            <value>
            Recording volume in STT.
            </value>
            <privilege>
            http://tizen.org/privilege/recorder
            </privilege>
            <pre>
            The state must be recording.
            </pre>
        </member>
        <member name="P:Tizen.Uix.Stt.SttClient.CurrentState">
            <summary>
            Gets the current STT state.
            </summary>
            <since_tizen> 3 </since_tizen>
            <value>
            Current state of STT.
            </value>
            <privilege>
            http://tizen.org/privilege/recorder
            </privilege>
            <returns>
            Current STT state value.
            </returns>
        </member>
        <member name="P:Tizen.Uix.Stt.SttClient.Engine">
            <summary>
            This property can be used to get and set the current engine id.
            </summary>
            <since_tizen> 3 </since_tizen>
            <value>
            Current STT engine id.
            </value>
            <privilege>
            http://tizen.org/privilege/recorder
            </privilege>
            <exception cref="T:System.InvalidOperationException">
            This exceptioncan occur while setting due to the following reasons:
            1. Operation Failed
            2. Invalid State
            </exception>
            <exception cref="T:System.OutOfMemoryException">This exception can be due to out of memory.</exception>
            <exception cref="T:System.NotSupportedException">This exception can be due to STT not supported.</exception>
            <exception cref="T:System.UnauthorizedAccessException">This exception can be due to permission denied.</exception>
            <exception cref="T:System.ArgumentException">This can happen if improper EngineId is provided while setting the value.</exception>
            <pre>
            The state must be created.
            </pre>
        </member>
        <member name="M:Tizen.Uix.Stt.SttClient.GetDetailedResult">
            <summary>
            Retrieves the time stamp of the current recognition result.
            </summary>
            <since_tizen> 3 </since_tizen>
            <returns>
            List of ResultTime.
            </returns>
            <privilege>
            http://tizen.org/privilege/recorder
            </privilege>
            <feature>
            http://tizen.org/feature/speech.recognition
            http://tizen.org/feature/microphone
            </feature>
            <remarks>
            This function should only be called in the RecognitionResult event.
            </remarks>
            <exception cref="T:System.InvalidOperationException">This exception can be due to operation failed.</exception>
            <exception cref="T:System.NotSupportedException">This exception can be due to STT not supported.</exception>
            <exception cref="T:System.UnauthorizedAccessException">This exception can be due to permission denied.</exception>
        </member>
        <member name="M:Tizen.Uix.Stt.SttClient.GetPrivateData(System.String)">
            <summary>
            Gets the private data from the STT engine.
            </summary>
            <since_tizen> 3 </since_tizen>
            <param name="key">
            The key string.
            </param>
            <returns>
            The data corresponding to the key is provided.
            </returns>
            <privilege>
            http://tizen.org/privilege/recorder
            </privilege>
            <feature>
            http://tizen.org/feature/speech.recognition
            http://tizen.org/feature/microphone
            </feature>
            <exception cref="T:System.InvalidOperationException">This exception can be due to invalid state.</exception>
            <exception cref="T:System.NotSupportedException">This exception can be due to STT not supported.</exception>
            <exception cref="T:System.TimeoutException">This exception can be due to No Answer from STT Service.</exception>
            <pre>
            The state must be ready.
            </pre>
        </member>
        <member name="M:Tizen.Uix.Stt.SttClient.SetPrivateData(System.String,System.String)">
            <summary>
            Sets the private data to the STT engine.
            </summary>
            <since_tizen> 3 </since_tizen>
            <param name="key">
            The key string.
            </param>
            <param name="data">
            The data string.
            </param>
            <privilege>
            http://tizen.org/privilege/recorder
            </privilege>
            <feature>
            http://tizen.org/feature/speech.recognition
            http://tizen.org/feature/microphone
            </feature>
            <exception cref="T:System.InvalidOperationException">This exception can be due to invalid state.</exception>
            <exception cref="T:System.NotSupportedException">This exception can be due to STT not supported.</exception>
            <exception cref="T:System.TimeoutException">This exception can be due to No Answer from STT Service.</exception>
            <exception cref="T:System.ArgumentException"> This can happen if Improper value is provided while setting the value. </exception>
            <pre>
            The state must be ready.
            </pre>
        </member>
        <member name="M:Tizen.Uix.Stt.SttClient.GetSupportedEngines">
            <summary>
            Gets the list of supported engines.
            </summary>
            <since_tizen> 3 </since_tizen>
            <returns>
            IEnumerable&lt;SupportedEngine&gt; list of supported engines.
            </returns>
            <privilege>
            http://tizen.org/privilege/recorder
            </privilege>
            <feature>
            http://tizen.org/feature/speech.recognition
            http://tizen.org/feature/microphone
            </feature>
            <exception cref="T:System.InvalidOperationException">This exception can be due to operation failed.</exception>
            <exception cref="T:System.OutOfMemoryException">This exception can be due to out of memory.</exception>
            <exception cref="T:System.NotSupportedException">This exception can be due to STT not supported.</exception>
            <exception cref="T:System.UnauthorizedAccessException">This exception can be due to permission denied.</exception>
        </member>
        <member name="M:Tizen.Uix.Stt.SttClient.SetCredential(System.String)">
            <summary>
            Sets the application credential.
            </summary>
            <since_tizen> 3 </since_tizen>
            <param name="credential">
            The credential string.
            </param>
            <privilege>
            http://tizen.org/privilege/recorder
            </privilege>
            <feature>
            http://tizen.org/feature/speech.recognition
            http://tizen.org/feature/microphone
            </feature>
            <exception cref="T:System.InvalidOperationException">
            This exceptioncan be due to the following reasons:
            1. Operation Failed
            2. Invalid State
            </exception>
            <exception cref="T:System.OutOfMemoryException">This exception can be due to out of memory.</exception>
            <exception cref="T:System.NotSupportedException">This exception can be due to STT not supported.</exception>
            <exception cref="T:System.UnauthorizedAccessException">This exception can be due to permission denied.</exception>
            <exception cref="T:System.ArgumentException"> This can happen if Improper value is provided while setting the value. </exception>
            <pre>
            The state must be created.
            </pre>
        </member>
        <member name="M:Tizen.Uix.Stt.SttClient.Prepare">
            <summary>
            Connects to the STT service asynchronously.
            </summary>
            <since_tizen> 3 </since_tizen>
            <privilege>
            http://tizen.org/privilege/recorder
            </privilege>
            <feature>
            http://tizen.org/feature/speech.recognition
            http://tizen.org/feature/microphone
            </feature>
            <exception cref="T:System.InvalidOperationException">This exception can be due to invalid state.</exception>
            <exception cref="T:System.NotSupportedException">This exception can be due to STT not supported.</exception>
            <exception cref="T:System.UnauthorizedAccessException">This exception can be due to permission denied.</exception>
            <pre>
            The state must be created.
            </pre>
            <post>
            If this function is successful, the STT state will be ready.
            If this function is unsuccessful, ErrorOccurred event will be invoked.
            </post>
        </member>
        <member name="M:Tizen.Uix.Stt.SttClient.Unprepare">
            <summary>
            Disconnects from the STT service.
            </summary>
            <since_tizen> 3 </since_tizen>
            <privilege>
            http://tizen.org/privilege/recorder
            </privilege>
            <feature>
            http://tizen.org/feature/speech.recognition
            http://tizen.org/feature/microphone
            </feature>
            <exception cref="T:System.InvalidOperationException">This exception can be due to invalid state.</exception>
            <exception cref="T:System.NotSupportedException">This exception can be due to STT not supported.</exception>
            <exception cref="T:System.UnauthorizedAccessException">This exception can be due to permission denied.</exception>
            <pre>
            The state must be ready.
            </pre>
            <post>
            If this function is successful, the STT state will be Created.
            </post>
        </member>
        <member name="M:Tizen.Uix.Stt.SttClient.GetSupportedLanguages">
            <summary>
            Retrieves all the supported languages of the current engine.
            The language is specified as an ISO 3166 alpha-2 two letter country-code followed by ISO 639-1 for the two-letter language code.
            For example, "ko_KR" for Korean, "en_US" for American English.
            </summary>
            <since_tizen> 4 </since_tizen>
            <privilege>
            http://tizen.org/privilege/recorder
            </privilege>
            <returns>
            List of strings for supported languages.
            </returns>
            <feature>
            http://tizen.org/feature/speech.recognition
            http://tizen.org/feature/microphone
            </feature>
            <exception cref="T:System.InvalidOperationException">
            This exception can be due to the following reasons:
            1. Engine Not Found.
            2. Operation Failed.
            </exception>
            <exception cref="T:System.NotSupportedException">This exception can be due to STT not supported.</exception>
            <exception cref="T:System.UnauthorizedAccessException">This exception can be due to permission denied.</exception>
        </member>
        <member name="M:Tizen.Uix.Stt.SttClient.IsRecognitionTypeSupported(Tizen.Uix.Stt.RecognitionType)">
            <summary>
            Checks whether the recognition type is supported.
            </summary>
            <since_tizen> 3 </since_tizen>
            <privilege>
            http://tizen.org/privilege/recorder
            </privilege>
            <param name="type">
            RecognitionType value.
            </param>
            <returns>
            Bool value indicating whether the recognition type is supported.
            </returns>
            <feature>
            http://tizen.org/feature/speech.recognition
            http://tizen.org/feature/microphone
            </feature>
            <exception cref="T:System.InvalidOperationException">
            This exception can be due to the following reasons:
            1. Invalid State
            2. Engine Not Found
            3. Operation Failed
            </exception>
            <exception cref="T:System.NotSupportedException">This exception can be due to STT not supported.</exception>
            <pre>
            The state should be ready.
            </pre>
        </member>
        <member name="M:Tizen.Uix.Stt.SttClient.SetSilenceDetection(Tizen.Uix.Stt.SilenceDetection)">
            <summary>
            Sets the silence detection.
            </summary>
            <since_tizen> 3 </since_tizen>
            <privilege>
            http://tizen.org/privilege/recorder
            </privilege>
            <param name="type">
            SilenceDetection value.
            </param>
            <feature>
            http://tizen.org/feature/speech.recognition
            http://tizen.org/feature/microphone
            </feature>
            <exception cref="T:System.InvalidOperationException">
            This exception can be due to the following reasons:
            1. Invalid State
            2. Not supported feature of current engine
            3. Operation Failed
            </exception>
            <exception cref="T:System.NotSupportedException">This exception can be due to STT not supported.</exception>
            <pre>
            The state should be ready.
            </pre>
        </member>
        <member name="M:Tizen.Uix.Stt.SttClient.SetStartSound(System.String)">
            <summary>
            Sets the sound to start recording.
            Sound file type should be .wav type.
            </summary>
            <since_tizen> 3 </since_tizen>
            <privilege>
            http://tizen.org/privilege/recorder
            </privilege>
            <param name="filePath">
            File path for the sound.
            </param>
            <feature>
            http://tizen.org/feature/speech.recognition
            http://tizen.org/feature/microphone
            </feature>
            <exception cref="T:System.InvalidOperationException">
            This exception can be due to the following reasons:
            1. Invalid State
            2. Operation Failed
            </exception>
            <exception cref="T:System.NotSupportedException">This exception can be due to STT not supported.</exception>
            <exception cref="T:System.UnauthorizedAccessException">This exception can be due to permission denied.</exception>
            <exception cref="T:System.ArgumentException"> If an Invalid Parameter is provided. </exception>
            <pre>
            The state should be ready.
            </pre>
        </member>
        <member name="M:Tizen.Uix.Stt.SttClient.UnsetStartSound">
            <summary>
            Unsets the sound to start recording.
            </summary>
            <since_tizen> 3 </since_tizen>
            <privilege>
            http://tizen.org/privilege/recorder
            </privilege>
            <feature>
            http://tizen.org/feature/speech.recognition
            http://tizen.org/feature/microphone
            </feature>
            <exception cref="T:System.InvalidOperationException">
            This exception can be due to the following reasons:
            1. Invalid State
            2. Operation Failed
            </exception>
            <exception cref="T:System.NotSupportedException">This exception can be due to STT not supported.</exception>
            <exception cref="T:System.UnauthorizedAccessException">This exception can be due to permission denied.</exception>
            <pre>
            The state should be ready.
            </pre>
        </member>
        <member name="M:Tizen.Uix.Stt.SttClient.SetStopSound(System.String)">
            <summary>
            Sets the sound to stop recording.
            Sound file type should be .wav type.
            </summary>
            <since_tizen> 3 </since_tizen>
            <privilege>
            http://tizen.org/privilege/recorder
            </privilege>
            <param name="filePath">
            File Path for the sound.
            </param>
            <feature>
            http://tizen.org/feature/speech.recognition
            http://tizen.org/feature/microphone
            </feature>
            <exception cref="T:System.InvalidOperationException">
            This exception can be due to the following reasons:
            1. Invalid State
            2. Operation Failed
            </exception>
            <exception cref="T:System.NotSupportedException">This exception can be due to STT not supported.</exception>
            <exception cref="T:System.UnauthorizedAccessException">This exception can be due to permission denied.</exception>
            <exception cref="T:System.ArgumentException">This exception can be due to Invalid Parameter.</exception>
            <pre>
            The state should be ready.
            </pre>
        </member>
        <member name="M:Tizen.Uix.Stt.SttClient.UnsetStopSound">
            <summary>
            Unsets the sound to stop recording.
            </summary>
            <since_tizen> 3 </since_tizen>
            <privilege>
            http://tizen.org/privilege/recorder
            </privilege>
            <feature>
            http://tizen.org/feature/speech.recognition
            http://tizen.org/feature/microphone
            </feature>
            <exception cref="T:System.InvalidOperationException">
            This exception can be due to the following reasons:
            1. Invalid State
            2. Operation Failed
            </exception>
            <exception cref="T:System.NotSupportedException">This exception can be due to STT not supported.</exception>
            <exception cref="T:System.UnauthorizedAccessException"> his exception can be due to permission denied.</exception>
            <pre>
            The state should be ready.
            </pre>
        </member>
        <member name="M:Tizen.Uix.Stt.SttClient.Start(System.String,Tizen.Uix.Stt.RecognitionType)">
            <summary>
            Starts the recording and recognition asynchronously.
            This function starts recording in the STT service and sends the recording data to the engine.
            This work continues until stop, cancel, or silence is detected by engine.
            </summary>
            <since_tizen> 3 </since_tizen>
            <privilege>
            http://tizen.org/privilege/recorder
            </privilege>
            <param name="language">
            The language selected.
            </param>
            <param name="type">
            The type for recognition.
            </param>
            <feature>
            http://tizen.org/feature/speech.recognition
            http://tizen.org/feature/microphone
            </feature>
            <exception cref="T:System.InvalidOperationException">
            This exception can be due to the following reasons:
            1. Invalid State
            2. Operation Failed
            3. Recorder Busy
            4. Progress to recording is not finished
            </exception>
            <exception cref="T:System.NotSupportedException">This exception can be due to STT not supported.</exception>
            <exception cref="T:System.UnauthorizedAccessException">This exception can be due to permission denied.</exception>
            <exception cref="T:System.ArgumentException">This exception can be due to an invalid language.</exception>
            <pre>
            The state should be ready.
            </pre>
            <post>
            It will invoke the StateChanged event, if registered.
            If this function succeeds, the STT state will be recording.
            If you call this function again before the state changes, you will receive ErrorINProgressToRecording.
            </post>
        </member>
        <member name="M:Tizen.Uix.Stt.SttClient.Stop">
            <summary>
            Finishes the recording and starts recognition processing in the engine asynchronously.
            </summary>
            <since_tizen> 3 </since_tizen>
            <privilege>
            http://tizen.org/privilege/recorder
            </privilege>
            <feature>
            http://tizen.org/feature/speech.recognition
            http://tizen.org/feature/microphone
            </feature>
            <exception cref="T:System.InvalidOperationException">
            This exception can be due to the following reasons:
            1. Invalid State
            2. Operation Failed
            3. Progress to ready is not finished
            4. Progress to recording is not finished
            5. Progress to processing is not finished
            </exception>
            <exception cref="T:System.NotSupportedException">This exception can be due to STT not supported.</exception>
            <exception cref="T:System.UnauthorizedAccessException">This exception can be due to permission denied.</exception>
            <pre>
            The state should be Recording.
            </pre>
            <post>
            It will invoke the StateChanged Event, if registered.
            If this function succeeds, the STT state will be processing.
            If you call this function again before the state changes, you will receive ErrorINProgressToProcessing.
            After processing of engine, the RecognitionResult event is invoked.
            </post>
        </member>
        <member name="M:Tizen.Uix.Stt.SttClient.Cancel">
            <summary>
            Cancels processing the recognition and recording asynchronously.
            This function cancels recording and the engine cancels recognition processing.
            After successful cancellation, the StateChanged event is invoked, otherwise if an error is occurs, the ErrorOccurred event is invoked.
            </summary>
            <since_tizen> 3 </since_tizen>
            <privilege>
            http://tizen.org/privilege/recorder
            </privilege>
            <feature>
            http://tizen.org/feature/speech.recognition
            http://tizen.org/feature/microphone
            </feature>
            <exception cref="T:System.InvalidOperationException">
            This exception can be due to the following reasons:
            1. Invalid State
            2. Operation Failed
            3. Progress to ready is not finished
            4. Progress to recording is not finished
            5. Progress to processing is not finished
            </exception>
            <exception cref="T:System.NotSupportedException">This exception can be due to STT not supported.</exception>
            <exception cref="T:System.UnauthorizedAccessException">This exception can be due to permission denied.</exception>
            <pre>
            The state should be Recording or Processing.
            </pre>
            <post>
            It will invoke the StateChanged event, if registered.
            If this function succeeds, the STT state will be ready.
            If you call this function again before the state changes, you will receive ErrorINProgressToReady.
            </post>
        </member>
        <member name="M:Tizen.Uix.Stt.SttClient.Dispose">
            <summary>
            Method to release resources.
            </summary>
            <since_tizen> 3 </since_tizen>
        </member>
        <member name="M:Tizen.Uix.Stt.SttClient.Dispose(System.Boolean)">
            <summary>
            Method to release resources.
            </summary>
            <since_tizen> 3 </since_tizen>
            <param name="disposing">
            The boolean value for destoying stt handle.
            </param>
        </member>
        <member name="T:Tizen.Uix.Stt.SupportedEngine">
            <summary>
            This class provides the information related to STT engine.
            </summary>
            <since_tizen> 3 </since_tizen>
        </member>
        <member name="P:Tizen.Uix.Stt.SupportedEngine.EngineId">
            <summary>
            The engine ID.
            </summary>
            <since_tizen> 3 </since_tizen>
            <returns>
            The string engine ID.
            </returns>
        </member>
        <member name="P:Tizen.Uix.Stt.SupportedEngine.EngineName">
            <summary>
            The engine name.
            </summary>
            <since_tizen> 3 </since_tizen>
            <returns>
            The string engine name.
            </returns>
        </member>
    </members>
</doc>
