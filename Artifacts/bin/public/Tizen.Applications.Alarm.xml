<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Tizen.Applications.Alarm</name>
    </assembly>
    <members>
        <member name="T:Tizen.Applications.Alarm">
            <summary>
            The alarm API allows setting an "alarm clock" for the delivery of a notification at some point in the future.
            </summary>
            <example>
            <code>
            public class AlarmExample
            {
                /// ...
                IEnumerable &lt; Alarm &gt; alarms = AlarmManager.GetAllScheduledAlarms();
                alarms[0].Cancel();
            }
            </code>
            </example>
            <since_tizen> 3 </since_tizen>
        </member>
        <member name="M:Tizen.Applications.Alarm.#ctor(System.Int32)">
            <summary>
            Constructor created with the new AlarmId.
            </summary>
            <param name="id"></param>
        </member>
        <member name="P:Tizen.Applications.Alarm.AlarmId">
            <summary>
            The alarm ID uniquely identifies an alarm.
            </summary>
            <since_tizen> 3 </since_tizen>
        </member>
        <member name="P:Tizen.Applications.Alarm.WeekFlag">
            <summary>
            Gets or sets the recurrence days of the week.
            </summary>
            <privilege>http://tizen.org/privilege/alarm.set</privilege>
            <privilege>http://tizen.org/privilege/alarm.get</privilege>
            <remarks>
            The setter for <c>WeekFlag</c> property is available since API Level 6.
            Weekflag can be a combination of the days of the week, for example Tuesday | Friday.
            If the period is already set, it will be removed and the week repetition flag will be set.
            If the week repetition flag is already set, it will be overwritten. If not, it will be set.
            If the Weekflag argument is 0 and the flag is already set,
            the flag will be cleared and the alarm will be changed to set once.
            If the Weekflag argument is 0, and the flag is not set or the period is set,
            the alarm won't be changed.
            </remarks>
            <since_tizen> 3 </since_tizen>
        </member>
        <member name="P:Tizen.Applications.Alarm.ScheduledDate">
            <summary>
            Gets or sets the scheduled time.
            </summary>
            <privilege>http://tizen.org/privilege/alarm.set</privilege>
            <privilege>http://tizen.org/privilege/alarm.get</privilege>
            <remarks>
            The <c>SchduleDate</c> property setter is available since API Level 6.
            </remarks>
            <since_tizen> 3 </since_tizen>
        </member>
        <member name="P:Tizen.Applications.Alarm.Period">
            <summary>
            Gets the period of time between the recurrent alarms.
            </summary>
            <privilege>http://tizen.org/privilege/alarm.set</privilege>
            <privilege>http://tizen.org/privilege/alarm.get</privilege>
            <remarks>
            The <c>Period</c> property setter is available since API Level 6.
            If the week recurrence flag was set before, it will be removed and the period will be set
            If the period was set before, it will be overwritten.If it was not, it will be set.
            If the @a period argument is 0 and the period was previously set,
            the period attribute will be cleared and the alarm will be changed to one-time.
            If the @a period argument is 0 and the period was not set,
            or the week recurrence flag was set, the alarm will be unchanged.
            </remarks>
            <since_tizen> 3 </since_tizen>
        </member>
        <member name="P:Tizen.Applications.Alarm.AlarmAppControl">
            <summary>
            Gets the AppControl to be invoked when the the alarm is triggered.
            </summary>
            <privilege>http://tizen.org/privilege/alarm.get</privilege>
            <since_tizen> 3 </since_tizen>
        </member>
        <member name="P:Tizen.Applications.Alarm.Global">
            <summary>
            Gets whether the alarm will launch global application or not.
            </summary>
            <privilege>http://tizen.org/privilege/alarm.set</privilege>
            <privilege>http://tizen.org/privilege/alarm.get</privilege>
            <since_tizen> 3 </since_tizen>
        </member>
        <member name="M:Tizen.Applications.Alarm.Cancel">
            <summary>
            Cancels the specific alarm.
            </summary>
            <exception cref="T:System.ArgumentException">Thrown in case of an invalid parmaeter.</exception>
            <exception cref="T:System.UnauthorizedAccessException">Thrown in case of a permission denied due to insufficient privileges.</exception>
            <exception cref="T:System.InvalidOperationException">Thrown in case of any internal error.</exception>
            <privilege>http://tizen.org/privilege/alarm.set</privilege>
            <since_tizen> 3 </since_tizen>
        </member>
        <member name="T:Tizen.Applications.AlarmWeekFlag">
            <summary>
            Enumeration for alarm week flag, the days of the week.
            </summary>
            <since_tizen> 3 </since_tizen>
        </member>
        <member name="F:Tizen.Applications.AlarmWeekFlag.Sunday">
            <summary>
            An identifier for Sunday.
            </summary>
        </member>
        <member name="F:Tizen.Applications.AlarmWeekFlag.Monday">
            <summary>
            An identifier for Monday.
            </summary>
        </member>
        <member name="F:Tizen.Applications.AlarmWeekFlag.Tuesday">
            <summary>
            An identifier for Tuesday.
            </summary>
        </member>
        <member name="F:Tizen.Applications.AlarmWeekFlag.Wednesday">
            <summary>
            An identifier for Wednesday.
            </summary>
        </member>
        <member name="F:Tizen.Applications.AlarmWeekFlag.Thursday">
            <summary>
            An identifier for Thursday.
            </summary>
        </member>
        <member name="F:Tizen.Applications.AlarmWeekFlag.Friday">
            <summary>
            An identifier for Friday.
            </summary>
        </member>
        <member name="F:Tizen.Applications.AlarmWeekFlag.Saturday">
            <summary>
            An identifier for Saturday.
            </summary>
        </member>
        <member name="F:Tizen.Applications.AlarmWeekFlag.AllDays">
            <summary>
            All days of the week.
            </summary>
        </member>
        <member name="F:Tizen.Applications.AlarmWeekFlag.WeekDays">
            <summary>
            Only weekdays.
            </summary>
        </member>
        <member name="T:Tizen.Applications.AlarmStandardPeriod">
            <summary>
            Enumeration for inexact interval.
            </summary>
            <since_tizen> 8 </since_tizen>
        </member>
        <member name="F:Tizen.Applications.AlarmStandardPeriod.FifteenMinutes">
            <summary>
            900 seconds.
            </summary>
        </member>
        <member name="F:Tizen.Applications.AlarmStandardPeriod.HalfHour">
            <summary>
            1800 seconds.
            </summary>
        </member>
        <member name="F:Tizen.Applications.AlarmStandardPeriod.Hour">
            <summary>
            3600 seconds.
            </summary>
        </member>
        <member name="F:Tizen.Applications.AlarmStandardPeriod.Day">
            <summary>
            86400 seconds.
            </summary>
        </member>
        <member name="T:Tizen.Applications.AlarmManager">
            <summary>
            Mobile devices typically give constant access to information from various sources. Some of this information is best delivered through alarms.
            The most obvious case is a calendar scheduling application, which lets you know when a meeting is about to start. Alarms are certainly better than actively waiting in a loop.
            They are also better than putting an interface to sleep because they do not block your main UI thread.
            Use of alarms helps build smooth user experiences and implements unattended data synchronization tasks.
            If an application is installed after setting the alarm, your alarm is canceled automatically.
            </summary>
            <example>
            <code>
            public class AlarmManagerExample
            {
                /// ...
                Alarm alarm = AlarmManager.CreateAlarm(24000,1000,null);
                AlarmManager.CancelAll();
            }
            </code>
            </example>
            <since_tizen> 3 </since_tizen>
        </member>
        <member name="M:Tizen.Applications.AlarmManager.CreateAlarm(System.Int32,System.Int32,Tizen.Applications.AppControl)">
            <summary>
            Sets an alarm to be triggered after a specific time.
            The alarm will first go off delay seconds later and then will go off every certain amount of time defined using period seconds.
            </summary>
            <param name="delay">The amount of time before the first execution (in seconds).</param>
            <param name="period"> The amount of time between subsequent alarms (in seconds). This value does not guarantee the accuracy.
            The actual interval is calculated by the OS. The minimum value is 600sec.</param>
            <param name="appControl"> The destination AppControl is used to perform a specific task when the alarm is triggered. </param>
            <returns> An alarm instance is created with the set param values.</returns>
            <exception cref="T:System.ArgumentException">Thrown in case of an invalid parameter.</exception>
            <exception cref="T:System.UnauthorizedAccessException">Thrown in case of a permission denied.</exception>
            <exception cref="T:System.InvalidOperationException">Thrown in case of any internal error.</exception>
            <privilege>http://tizen.org/privilege/alarm.set</privilege>
            <since_tizen> 3 </since_tizen>
        </member>
        <member name="M:Tizen.Applications.AlarmManager.CreateAlarm(System.Int32,Tizen.Applications.AppControl)">
            <summary>
            Sets an alarm to be triggered after a specific time.
            The alarm will go off delay seconds later.
            </summary>
            <param name="delay"> The amount of time before the execution (in seconds). </param>
            <param name="appControl"> The destination AppControl to perform a specific task when the alarm is triggered. </param>
            <returns> An alarm instance is created with the set param values.</returns>
            <exception cref="T:System.ArgumentException">Thrown in case of an invalid parameter.</exception>
            <exception cref="T:System.UnauthorizedAccessException">Thrown in case of a permission denied.</exception>
            <exception cref="T:System.InvalidOperationException">Thrown in case of any internal error.</exception>
            <privilege>http://tizen.org/privilege/alarm.set</privilege>
            <since_tizen> 3 </since_tizen>
        </member>
        <member name="M:Tizen.Applications.AlarmManager.CreateAlarm(System.DateTime,Tizen.Applications.AppControl)">
            <summary>
            Sets an alarm to be triggered at a specific time.
            The date describes the time of the first occurrence.
            </summary>
            <param name="value"> The first active alarm time. </param>
            <param name="appControl"> The destination AppControl to perform specific work when the alarm is triggered. </param>
            <returns> An alarm instance is created with the set param values.</returns>
            <remarks>This operation is permitted with the UI application appcontrol only.</remarks>
            <exception cref="T:System.ArgumentException">Thrown in case of an invalid parameter.</exception>
            <exception cref="T:System.UnauthorizedAccessException">Thrown in case of a permission denied.</exception>
            <exception cref="T:System.InvalidOperationException">Thrown in case of any internal error.</exception>
            <privilege>http://tizen.org/privilege/alarm.set</privilege>
            <since_tizen> 3 </since_tizen>
        </member>
        <member name="M:Tizen.Applications.AlarmManager.CreateAlarm(System.DateTime,Tizen.Applications.AlarmWeekFlag,Tizen.Applications.AppControl)">
            <summary>
            Sets an alarm to be triggered periodically, starting at a specific time.
            The date describes the time of the first occurrence.
            The weekFlag is the repeat value of the days of the week.
            If the weekFlag is AlarmWeekFlag.Tuesday, the alarm will repeat every Tuesday at a specific time.
            </summary>
            <remarks>This operation is permitted with UI application appcontrol only.</remarks>
            <param name="value"> The first active alarm time. </param>
            <param name="weekFlag"> The day of the week, AlarmWeekFlag may be a combination of days, like AlarmWeekFlag.Sunday | AlarmWeekFlag.Monday.</param>
            <param name="appControl"> The destination AppControl to perform specific work when the alarm is triggered. </param>
            <returns> An alarm instance is created with the set param values.</returns>
            <exception cref="T:System.ArgumentException">Thrown in case of an invalid parameter.</exception>
            <exception cref="T:System.UnauthorizedAccessException">Thrown in case of a permission denied.</exception>
            <exception cref="T:System.InvalidOperationException">Thrown in case of any internal error.</exception>
            <privilege>http://tizen.org/privilege/alarm.set</privilege>
            <since_tizen> 3 </since_tizen>
        </member>
        <member name="M:Tizen.Applications.AlarmManager.CreateAlarm(System.Int32,Tizen.Applications.AlarmStandardPeriod,Tizen.Applications.AppControl)">
            <summary>
            Sets an alarm to be triggered after a specific time.
            The alarm will first go off delay seconds later and then will go off every certain amount of time defined using standard period seconds.
            </summary>
            <param name="delay">The amount of time before the first execution (in seconds).</param>
            <param name="standardPeriod"> It can be the <see cref="T:Tizen.Applications.AlarmStandardPeriod"/>. If then, the period of alarm is guaranteed. </param>
            <param name="appControl"> The destination AppControl is used to perform a specific task when the alarm is triggered. </param>
            <returns> An alarm instance is created with the set param values.</returns>
            <exception cref="T:System.ArgumentException">Thrown in case of an invalid parameter.</exception>
            <exception cref="T:System.UnauthorizedAccessException">Thrown in case of a permission denied.</exception>
            <exception cref="T:System.InvalidOperationException">Thrown in case of any internal error.</exception>
            <privilege>http://tizen.org/privilege/alarm.set</privilege>
            <since_tizen> 8 </since_tizen>
        </member>
        <member name="M:Tizen.Applications.AlarmManager.CreateAlarm(System.DateTime,Tizen.Applications.Notifications.Notification)">
            <summary>
            Sets a notification alarm to be triggered at a specific time.
            The date describes the time of the first occurrence.
            </summary>
            <param name="dateTime"> The first active alarm time. </param>
            <param name="notification"> The notification to be posted when the alarm is triggered. </param>
            <returns> An alarm instance is created with the set param values.</returns>
            <exception cref="T:System.ArgumentException">Thrown in case of an invalid parameter.</exception>
            <exception cref="T:System.UnauthorizedAccessException">Thrown in case of a permission denied.</exception>
            <exception cref="T:System.InvalidOperationException">Thrown in case of any internal error.</exception>
            <privilege>http://tizen.org/privilege/alarm.set</privilege>
            <privilege>http://tizen.org/privilege/notification</privilege>
            <since_tizen> 3 </since_tizen>
        </member>
        <member name="M:Tizen.Applications.AlarmManager.CreateAlarm(System.Int32,System.Int32,Tizen.Applications.Notifications.Notification)">
            <summary>
            Sets a notification alarm to be triggered after a specific time.
            The alarm will first go off delay seconds later and then will go off every certain amount of time defined using period seconds.
            </summary>
            <param name="delay">The amount of time before the first execution (in seconds). </param>
            <param name="period"> The amount of time between subsequent alarms (in seconds). This value does not guarantee the accuracy. </param>
            <param name="notification"> The notification to be posted when the alarm is triggered. </param>
            <returns> An alarm instance is created with the set param values.</returns>
            <exception cref="T:System.ArgumentException">Thrown in case of an invalid parameter.</exception>
            <exception cref="T:System.UnauthorizedAccessException">Thrown in case of a permission denied.</exception>
            <exception cref="T:System.InvalidOperationException">Thrown in case of any internal error.</exception>
            <privilege>http://tizen.org/privilege/alarm.set</privilege>
            <privilege>http://tizen.org/privilege/notification</privilege>
            <since_tizen> 3 </since_tizen>
        </member>
        <member name="M:Tizen.Applications.AlarmManager.CreateAlarm(System.DateTime,Tizen.Applications.AlarmWeekFlag,Tizen.Applications.Notifications.Notification)">
            <summary>
            Sets a notification alarm to be triggered periodically, starting at a specific time.
            The date describes the time of the first occurrence.
            The weekFlag is the repeat value of the days of the week.
            If the weekFlag is AlarmWeekFlag.Tuesday, the alarm will repeat every Tuesday at a specific time.
            </summary>
            <param name="dateTime"> The first active alarm time. </param>
            <param name="weekFlag"> The day of the week, AlarmWeekFlag may be a combination of days,
                                    like AlarmWeekFlag.Sunday | AlarmWeekFlag.Monday.</param>
            <param name="notification"> The notification to be posted when the alarm is triggered. </param>
            <returns> An alarm instance is created with the set param values.</returns>
            <exception cref="T:System.ArgumentException">Thrown in case of an invalid parameter.</exception>
            <exception cref="T:System.UnauthorizedAccessException">Thrown in case of a permission denied.</exception>
            <exception cref="T:System.InvalidOperationException">Thrown in case of any internal error.</exception>
            <privilege>http://tizen.org/privilege/alarm.set</privilege>
            <privilege>http://tizen.org/privilege/notification</privilege>
            <since_tizen> 3 </since_tizen>
        </member>
        <member name="M:Tizen.Applications.AlarmManager.CreateAlarm(System.Int32,Tizen.Applications.Notifications.Notification)">
            <summary>
            Sets a notification alarm to be triggered after a specific time.
            The alarm will go off delay seconds later.
            </summary>
            <param name="delay">The amount of time before the first execution (in seconds).</param>
            <param name="notification"> The notification to be posted when the alarm is triggered. </param>
            <returns> An alarm instance is created with the set param values.</returns>
            <exception cref="T:System.ArgumentException">Thrown in case of an invalid parameter.</exception>
            <exception cref="T:System.UnauthorizedAccessException">Thrown in case of a permission denied.</exception>
            <exception cref="T:System.InvalidOperationException">Thrown in case of any internal error.</exception>
            <privilege>http://tizen.org/privilege/alarm.set</privilege>
            <privilege>http://tizen.org/privilege/notification</privilege>
            <since_tizen> 3 </since_tizen>
        </member>
        <member name="M:Tizen.Applications.AlarmManager.CreateAlarm(System.Int32,Tizen.Applications.AlarmStandardPeriod,Tizen.Applications.Notifications.Notification)">
            <summary>
            Sets a notification alarm to be triggered after a specific time.
            The alarm will first go off delay seconds later and then will go off every certain amount of time defined using period seconds.
            </summary>
            <param name="delay">The amount of time before the first execution (in seconds).</param>
            <param name="standardPeriod"> It can be the <see cref="T:Tizen.Applications.AlarmStandardPeriod"/>. If then, the period of alarm is guaranteed.</param>
            <param name="notification"> The notification to be posted when the alarm is triggered. </param>
            <returns> An alarm instance is created with the set param values.</returns>
            <exception cref="T:System.ArgumentException">Thrown in case of an invalid parameter.</exception>
            <exception cref="T:System.UnauthorizedAccessException">Thrown in case of a permission denied.</exception>
            <exception cref="T:System.InvalidOperationException">Thrown in case of any internal error.</exception>
            <privilege>http://tizen.org/privilege/alarm.set</privilege>
            <privilege>http://tizen.org/privilege/notification</privilege>
            <since_tizen> 8 </since_tizen>
        </member>
        <member name="M:Tizen.Applications.AlarmManager.CancelAll">
            <summary>
            Cancels all scheduled alarms that are registered by the application that calls this API.
            </summary>
            <exception cref="T:System.UnauthorizedAccessException">Thrown in case of a permission denied.</exception>
            <exception cref="T:System.InvalidOperationException">Thrown in case of any internal error.</exception>
            <privilege>http://tizen.org/privilege/alarm.set</privilege>
            <since_tizen> 3 </since_tizen>
        </member>
        <member name="M:Tizen.Applications.AlarmManager.GetAllScheduledAlarms">
            <summary>
            Retrieves all registered alarms.
            </summary>
            <returns>List of all alarm instances.</returns>
            <exception cref="T:System.UnauthorizedAccessException">Thrown in case of a permission denied.</exception>
            <exception cref="T:System.InvalidOperationException">Thrown in case of any internal error.</exception>
            <privilege>http://tizen.org/privilege/alarm.get</privilege>
            <since_tizen> 4 </since_tizen>
        </member>
        <member name="M:Tizen.Applications.AlarmManager.GetCurrentTime">
            <summary>
            Gets the current system time.
            </summary>
            <returns>The current system time.</returns>
            <exception cref="T:System.InvalidOperationException">Thrown in case of any internal error.</exception>
            <since_tizen> 3 </since_tizen>
        </member>
    </members>
</doc>
